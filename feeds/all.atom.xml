<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Joseph Thurman</title><link href="http://www.josephthurman.com/" rel="alternate"></link><link href="http://www.josephthurman.com/feeds/all.atom.xml" rel="self"></link><id>http://www.josephthurman.com/</id><updated>2018-10-10T11:00:00-04:00</updated><entry><title>Data Cleaning For NYT Restaurant Reviews</title><link href="http://www.josephthurman.com/nytreviews2.html" rel="alternate"></link><published>2018-10-10T11:00:00-04:00</published><updated>2018-10-10T11:00:00-04:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-10-10:/nytreviews2.html</id><summary type="html">&lt;p&gt;This is the second post in my &lt;a href="http://www.josephthurman.com/tag/ny-times.html"&gt;ongoing series&lt;/a&gt; analyzing the restaurant reviews in the New York Times. In the &lt;a href="http://www.josephthurman.com/nytreviews1.html"&gt;previous post&lt;/a&gt;, we described how to use an API provided by the New York Times to download copies of that paper's recent restaurant reviews. In this post, we'll discuss how â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the second post in my &lt;a href="http://www.josephthurman.com/tag/ny-times.html"&gt;ongoing series&lt;/a&gt; analyzing the restaurant reviews in the New York Times. In the &lt;a href="http://www.josephthurman.com/nytreviews1.html"&gt;previous post&lt;/a&gt;, we described how to use an API provided by the New York Times to download copies of that paper's recent restaurant reviews. In this post, we'll discuss how to parse these reviews into a tidy data set that we will analyze later in order to predict star ratings from restaurant reviews.&lt;/p&gt;
&lt;p&gt;The full code for this project is available on my &lt;a href="https://github.com/josephthurman/blog-projects/tree/master/nytreviews"&gt;GitHub&lt;/a&gt; page. This post discusses the &lt;a href="https://github.com/josephthurman/blog-projects/blob/master/nytreviews/clean_data.py"&gt;&lt;code&gt;clean_data.py&lt;/code&gt;&lt;/a&gt; script.  In order to use this script, you'll have to have successfully run the &lt;a href="https://github.com/josephthurman/blog-projects/blob/master/nytreviews/review_fetcher.py"&gt;&lt;code&gt;review_fetcher.py&lt;/code&gt;&lt;/a&gt; script discussed in the previous post.  In particular, you should have a folder named &lt;code&gt;reviews&lt;/code&gt; in the directory from which you run the &lt;code&gt;clean_data.py&lt;/code&gt; script that contains the HTML files of the restaurant reviews.&lt;/p&gt;
&lt;h3&gt;Extracting Review Data&lt;/h3&gt;
&lt;p&gt;Each file in the &lt;code&gt;reviews&lt;/code&gt; directory is the raw HTML of a New York Times restaurant review. A simple inspection of these files shows that there's a lot of extraneous information in each one - lots of metadata about the article, various javascript elements, advertisements, links to other articles, etc. In order to extract only the information we actually need for the analysis, we use the &lt;a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/"&gt;&lt;code&gt;BeautifulSoup&lt;/code&gt;&lt;/a&gt; library to parse and search these HTML files, along with the standard Python library for dealing with regular expressions.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is the same library we used in the &lt;a href="http://www.josephthurman.com/nytreviews1.html"&gt;previous post&lt;/a&gt; to filter out some articles that weren't actually reviews. This time, we'll use this library to extract the text of the review and the star rating assigned to the restaurant for each review, so that later we can build a model that will predict the star rating from the review text. In additional to those features, we'll also extract two other features - the price of the restaurant, on a scale of &amp;dollar; (cheapest) to &amp;dollar;&amp;dollar;&amp;dollar;&amp;dollar; (most expensive), and the number of dishes at the restaurant recommended by the reviewer.&lt;/p&gt;
&lt;p&gt;For each feature, we define a function that extracts the relevant information from the raw HTML file parsed into a &lt;code&gt;BeautifulSoup&lt;/code&gt; object.  For example, the following function is used to extract the full text of the review:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_review&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# All reviews have the main text contained in paragraph elements of a&lt;/span&gt;
    &lt;span class="c1"&gt;# particular class&lt;/span&gt;
    &lt;span class="n"&gt;tag_searches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;css-xhhu0i e2kc3sl0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
                    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;story-body-text story-content&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
                    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;css-1i0edl6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tag_searches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;class&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;review_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;review_text&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;review_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\s+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;review_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;review_text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# Return EMPTY if review text cannot be found&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;EMPTY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In order to get the review text, we find all paragraph HTML elements that are of the class &lt;code&gt;css-xhhu0i e2kc3sl0&lt;/code&gt;, &lt;code&gt;story-body-text story-content&lt;/code&gt;, or &lt;code&gt;css-1i0edl6&lt;/code&gt;. These classes were found by inspecting the HTML files by hand to see how the New York Times marks off the main story content in their HTML.  After finding all such paragraphs, we go through them one-by-one to extract the actual text, combine it into one large string, and then strip extraneous whitespace.  In the case that no appropriately marked paragraphs are found, we return &lt;code&gt;"EMPTY"&lt;/code&gt; to denote that the review text could not be found.&lt;/p&gt;
&lt;p&gt;The multiple searches that we must undertake are a preview of the main difficulty in this part of the project - the formatting of the reviews is not consistent through time, and so different reviews require different methods to find the relevant data.  This is evident in the next function, which we use to extract the star ratings from the reviews.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_stars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Newer reviews have the rating set off from the story in special html tag.  &lt;/span&gt;
    &lt;span class="c1"&gt;# Find those first&lt;/span&gt;
    &lt;span class="n"&gt;tag_searches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;span&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ReviewFooter-stars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ReviewFooter-rating&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;critic-star-rating&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;critic-word-rating&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tag_searches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;class&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;stars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\s+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;stars&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Satisfactory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Fair&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Poor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stars&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

    &lt;span class="c1"&gt;# Older stories have the rating just sitting in a plain paragraph - search&lt;/span&gt;
    &lt;span class="c1"&gt;# separately for them&lt;/span&gt;
    &lt;span class="n"&gt;direct_search&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;p.*?&amp;gt;\s*â˜…+\s*&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;direct_search&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;just_stars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;â˜…+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;direct_search&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;just_stars&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;p.*?&amp;gt;\s*[Ss]atisfactory\s*&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Satisfactory&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;p.*?&amp;gt;\s*[Ff]air\s*&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Fair&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;p.*?&amp;gt;\s*[Pp]oor\s*&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Poor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Return &amp;#39;NA&amp;#39; if a rating can&amp;#39;t be found&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In newer articles, the star rating of the review is set off in some kind of marked HTML element. In this case, we can use the &lt;code&gt;BeautifulSoup&lt;/code&gt; library as before to search for these special tags and extract the information from them. Even still, the special HTML element that contains this information is not consistent over time, and so it took repeated inspections of the raw HTML files in order to identify the correct tags for which to search.  &lt;/p&gt;
&lt;p&gt;This method of setting off the review rating isn't present in older reviews, however.  For these cases, we instead search the raw and unparsed HTML string for the review directly, looking for the stars themselves (or the text rating) and counting them up.&lt;/p&gt;
&lt;p&gt;With either search method, this function ultimately returns one of the strings &lt;code&gt;'Poor'&lt;/code&gt;, &lt;code&gt;'Fair'&lt;/code&gt;, &lt;code&gt;'Satisfactory'&lt;/code&gt;, &lt;code&gt;'1'&lt;/code&gt;, &lt;code&gt;'2'&lt;/code&gt;, &lt;code&gt;'3'&lt;/code&gt;, or &lt;code&gt;'4'&lt;/code&gt;, giving the star rating of the review.  It also may return &lt;code&gt;'NA'&lt;/code&gt; if none of the above searches for a star rating return a result.  This is necessary because even after the filtering described in the previous post, many of the articles we obtained in that post using the NYT API are still not proper restaurant reviews, and therefore have no star rating to extract.&lt;/p&gt;
&lt;p&gt;The other features we extract from the reviews, the number of recommended dishes and the price of the restaurant, are handled similarly. We won't rewrite them here - instead, check out the &lt;a href="https://github.com/josephthurman/blog-projects/blob/master/nytreviews/clean_data.py"&gt;full code&lt;/a&gt; on GitHub.  These functions read the HTML and return an integer, representing either the number of recommended dishes or the number of dollar signs for the price category of the restaurant. Both return 0 if they cannot find the information in the HTML.&lt;/p&gt;
&lt;p&gt;When run, the &lt;code&gt;clean_data.py&lt;/code&gt; script reads the HTML data from the &lt;code&gt;reviews&lt;/code&gt; folder created in the last post. It processes each review to attempt to find a star rating. If one is found then that rating, the review text, the number of recommended dishes, and the price of the restaurant are all saved, along with some identifying information, into a dictionary. The list of all of these dictionaries is saved to a JSON file named &lt;code&gt;cleaned_reviews.json&lt;/code&gt; in a &lt;code&gt;data&lt;/code&gt; folder created by the script.  The URLs associated to articles for which a rating cannot be found are written to a text file, &lt;code&gt;unprocessed_urls.txt&lt;/code&gt;, in that folder for further inspection.&lt;/p&gt;
&lt;h3&gt;Checking for Accuracy and Completeness&lt;/h3&gt;
&lt;p&gt;After running this script, we can do a few simple checks to see whether or not our methods are working correctly.&lt;/p&gt;
&lt;p&gt;First, we can judge how well the &lt;code&gt;get_rating&lt;/code&gt; function works by inspecting the &lt;code&gt;unprocessed_urls.txt&lt;/code&gt; file created by the above script.  It contains 27 different URLs, and although I haven't exhaustively checked each one, randomly looking at a few shows that these article do not appear to be restaurant reviews with stars. Some are misclassified articles (there are a few obituaries of chefs, a column about Thanksgiving etiquette, etc), and some are reviews of restaurants that are outside of New York City and therefore don't receive star ratings.&lt;/p&gt;
&lt;p&gt;For the remaining 251 articles that did have an associated star rating, we can check that we were able to successfully find the review text, number of recommended dishes, and prices for each. To make this simpler, we can read the &lt;code&gt;cleaned_reviews.json&lt;/code&gt; file into a &lt;a href="https://pandas.pydata.org"&gt;&lt;code&gt;pandas&lt;/code&gt;&lt;/a&gt; dataframe (this will be the data structure we use during the analysis phase of the project). We can then easily search the dataframe for records with errors - those with &lt;code&gt;'EMPTY'&lt;/code&gt; for the review text or &lt;code&gt;0&lt;/code&gt; for the price or recommended dishes.&lt;/p&gt;
&lt;p&gt;First, we can simply import and inspect the data to see that everything seems to be working correctly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./data/cleaned_reviews.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;orient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;records&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;id&lt;/th&gt;
      &lt;th&gt;price&lt;/th&gt;
      &lt;th&gt;rating&lt;/th&gt;
      &lt;th&gt;rec_dishes&lt;/th&gt;
      &lt;th&gt;review_text&lt;/th&gt;
      &lt;th&gt;review_url&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;The outside makes no grand statements. A glas...&lt;/td&gt;
      &lt;td&gt;https://www.nytimes.com/2014/03/12/dining/rest...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;Reading the opening lines of Hearthâ€™s last re...&lt;/td&gt;
      &lt;td&gt;https://www.nytimes.com/2013/10/30/dining/revi...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Satisfactory&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;Restaurant critics are supposed to be imparti...&lt;/td&gt;
      &lt;td&gt;https://www.nytimes.com/2014/06/25/dining/rest...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;We were halfway through appetizers at Cherche...&lt;/td&gt;
      &lt;td&gt;https://www.nytimes.com/2014/10/01/dining/rest...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;Before telling you how impressed I am by the ...&lt;/td&gt;
      &lt;td&gt;https://www.nytimes.com/2015/05/06/dining/rest...&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Next, we can search for reviews that are missing one or more features.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;review_text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;EMPTY&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rec_dishes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0
0
0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In each case there are no records with errors, and so it seems that our script is able to successfully process every review. That doesn't mean it's necessarily accurate, however. To check this, we can randomly choose a few reviews and inspect them manually to compare what the script finds as the relevant information and what we can see ourselves. If we take record 123 from the above frame, for example, we have the following data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;id                                                           130
price                                                          3
rating                                                         1
rec_dishes                                                     9
review_text     In some corners of the food media, the openin...
review_url     https://www.nytimes.com/2013/06/26/dining/revi...
Name: 123, dtype: object
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If we follow that URL to the &lt;a href="https://www.nytimes.com/2013/06/26/dining/reviews/restaurant-review-lafayette-in-noho.html"&gt;original review&lt;/a&gt;, then we see that the rating, price, and number of recommended dishes are all accurate. Checking a few more reviews in this way is enough to see that this cleaning script seems to be working ok.&lt;/p&gt;
&lt;h3&gt;Improvements and Next Steps&lt;/h3&gt;
&lt;p&gt;There are two comments to be made about this portion of the project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Similar to &lt;code&gt;review_fetcher.py&lt;/code&gt;, this script is not very robust to changes. In particular, the New York Times may change the formatting and tagging of its reviews at any time, and the parsing functions as written above may no longer work if this occurs.  It should be relatively easy, however, to modify these functions to search for the new tagged elements in that case.&lt;/li&gt;
&lt;li&gt;This method leaves out some other information that may be helpful in analyzing the reviews.  We've extracted the number of recommended dishes and price from each review, but most reviews also contain a summary of the noise level, service, alcohol served, and other features of the restaurant.  We could write similar functions to extract this information as well, but these parts of the review are usually short descriptions and not easily compressed into a simple number.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These possible issues noted, running the &lt;code&gt;clean_data.py&lt;/code&gt; script produces a clean dataset that contains the review text, rating, price, and number of recommended dishes from 251 restaurant reviews written by Pete Wells. In the next post, we'll begin analyzing that data set to try to understand how Wells assigns star ratings to restaurants.&lt;/p&gt;</content><category term="data science"></category><category term="python"></category><category term="NY Times"></category></entry><entry><title>Introduction to Analyzing NYT Restaurant Reviews</title><link href="http://www.josephthurman.com/nytreviews1.html" rel="alternate"></link><published>2018-10-03T14:00:00-04:00</published><updated>2018-10-03T14:00:00-04:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-10-03:/nytreviews1.html</id><summary type="html">&lt;p&gt;As a person who lives in New York City and is interested in food, I generally enjoy reading the &lt;a href="https://www.nytimes.com/reviews/dining"&gt;restaurant reviews&lt;/a&gt; published by the New York Times. There is a new review of a restaurant in NYC roughly every week that includes a written review of the restaurant and, most â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;As a person who lives in New York City and is interested in food, I generally enjoy reading the &lt;a href="https://www.nytimes.com/reviews/dining"&gt;restaurant reviews&lt;/a&gt; published by the New York Times. There is a new review of a restaurant in NYC roughly every week that includes a written review of the restaurant and, most importantly for our purposes, a summary rating of the restaurant on a scale of 1 to 4 stars.  Unlike other star rating systems, the lowest rating of one star doesn't mean the restaurant is bad. Most restaurants that merit a review in the New York Times are, happily, generally good spots, so even a restaurant with just one star is probably a fine place to eat. Some restaurants do receive no stars. Instead, they are rated as "Fair," "Satisfactory," or similar, but these lower grades are rare and usually reserved for not-very-good restaurants that are noteworthy for some other reason beyond the food. Perhaps the best example of this is the review of a restaurant in Times Square (since closed) by the TV chef Guy Fieri.  When it received a rating of &lt;a href="https://www.nytimes.com/2012/11/14/dining/reviews/restaurant-review-guys-american-kitchen-bar-in-times-square.html"&gt;"Poor"&lt;/a&gt;, the review went viral.&lt;/p&gt;
&lt;p&gt;The star rating system for reviews is the source of some controversy among readers of the column, the main complaint being that the star ratings are &lt;a href="https://dinersjournal.blogs.nytimes.com/2012/03/13/why-our-reviews-have-stars/"&gt;essentially useless&lt;/a&gt;. This is perhaps especially true for the reviews written by the current dining critic, Pete Wells, who is accused of simply giving two stars to nearly every restaurant he reviews.  Wells himself admitted that he found it easier to write two-star reviews in a &lt;a href="https://www.newyorker.com/magazine/2016/09/12/pete-wells-the-new-york-times-restaurant-critic"&gt;profile in the New Yorker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've sometimes felt this way myself, and decided to do a little investigation.  In this project, I'll analyze restaurant reviews written by Wells since 2013 to try to understand if he gives the two-star rating too often.  More specifically, I'll try to build a model that can read a review written by Wells and predict the star rating he will give the restaurant.&lt;/p&gt;
&lt;p&gt;This post will be the first of a short series discussing this project. The full code for this project will available at my &lt;a href="https://github.com/josephthurman/blog-projects/tree/master/nytreviews"&gt;GitHub Page&lt;/a&gt;, which will be updated with each new post in the series.  For this first post, I'll briefly discuss the data collection portion of this project. I'll explain how I used Python to scrape the New York Times website to collect all the raw HTML of all the reviews written by Wells. This post discusses the script &lt;a href="https://github.com/josephthurman/blog-projects/blob/master/nytreviews/review_fetcher.py"&gt;&lt;code&gt;review_fetcher.py&lt;/code&gt;&lt;/a&gt;. The goal of this post is not to explain fully every line of code in that file, but rather to explain some of the data collection choices made in this part of the process. As such only snippets of the code will be discussed in this post, so head over to GitHub to see the full details.&lt;/p&gt;
&lt;h3&gt;Using the NYTimes API&lt;/h3&gt;
&lt;p&gt;The New York Times provides an &lt;a href="https://developer.nytimes.com"&gt;API&lt;/a&gt; that allows one to search the archives of the newspaper.  The full text of articles is not available through this API, but we can retrieve the URL of any individual article. (Other information, including the first paragraph of the article, keywords, etc. are also available through this API, but won't be needed here.) The function &lt;code&gt;get_urls&lt;/code&gt; in &lt;a href="https://github.com/josephthurman/blog-projects/blob/master/nytreviews/review_fetcher.py"&gt;&lt;code&gt;review_fetcher.py&lt;/code&gt;&lt;/a&gt; does the work of querying the API, ultimately returning a list of URLs of restaurant reviews that we access in the next section.  &lt;/p&gt;
&lt;p&gt;The &lt;a href="https://developer.nytimes.com/article_search_v2.json#/README"&gt;documentation&lt;/a&gt; for the API explains how to construct queries as a URL that, upon access, returns the queried data in JSON format. Using this documentation, we can construct the following query to find the articles that we're interested in:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;query_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://api.nytimes.com/svc/search/v2/articlesearch.json&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; \
                &lt;span class="s1"&gt;&amp;#39;?api_key=&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NYT_API_KEY&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;amp;begin_date=20130101&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;amp;end_date = 20181003&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;amp;fl=web_url&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; \
                &lt;span class="s1"&gt;&amp;#39;&amp;amp;fq=byline:(&amp;quot;Pete Wells&amp;quot;)ANDtype_of_material:(&amp;quot;Review&amp;quot;)ANDnews_desk:(&amp;quot;Dining&amp;quot;,&amp;quot;Food&amp;quot;)&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this particular project, we're searching for reviews written by Pete Wells after January 1, 2013 that fall under the Dining and Food sections of the paper.  Specifying &lt;code&gt;fl=web_url&lt;/code&gt; limits the data returned to the URL for each article.  If you use this code yourself, you'll need to register for your own API key and use that value in place of &lt;code&gt;NYT_API_KEY&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Using this URL and the &lt;a href="http://docs.python-requests.org/en/master/"&gt;requests&lt;/a&gt; package, we can easily query the API to obtain a list of URLs called &lt;code&gt;returned_url_list&lt;/code&gt;. Unfortunately, there are some errors and miscategorizations in the articles returned by the API, in that it returns some URLs for articles that are not restaurant reviews. Luckily, many of these can be weeded out simply by inspecting the URLs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;bad_words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;(blog)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(interactive)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(wine-school)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(insider)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(hungry-city)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(best)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="s2"&gt;&amp;quot;(/books/)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(slideshow)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(obituaries)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(recipes)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(reader-center)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(technology)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;final_url_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;returned_url_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;|&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bad_words&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;final_url_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This uses a simple search to filter out some of articles that aren't true restaurant reviews, and saves what's left to &lt;code&gt;final_url_list&lt;/code&gt;. The exceptions above were originally found in the next part of the project, which parses the HTML for each article to extract the review text and other features, as URLs associated to pages that couldn't be parsed.  Many of the exceptions above are self-explanatory, or are understandable to readers of the New York Times. For example, cookbook reviews written by Wells are excluded by removing URLs containing "books", while articles from the "Hungry City" column are restaurant reviews of (generally cheaper) restaurants that aren't rated using the star system, and therefore aren't relevant to our analysis.&lt;/p&gt;
&lt;p&gt;Unfortunately this still leaves some articles in the &lt;code&gt;final_url_list&lt;/code&gt; that aren't true restaurant reviews with star ratings. These articles can only be found, however, by inspecting the HTML of the page itself. We consider this problem in the next step, as we download the the raw HTML for each review for later processing.&lt;/p&gt;
&lt;h3&gt;Downloading the Reviews&lt;/h3&gt;
&lt;p&gt;The next step in the process is to actually download the HTML for each article in the &lt;code&gt;final_url_list&lt;/code&gt;, saving that data for future processing.  This work is done by the &lt;code&gt;get_reviews&lt;/code&gt; function defined in &lt;code&gt;review_fetcher.py&lt;/code&gt;. This function is relatively straightforward - it simply downloads the HTML for each URL in &lt;code&gt;final_url_list&lt;/code&gt; and saves it to disk.  However, there are two special aspects of this function that are worth discussing.&lt;/p&gt;
&lt;p&gt;The first concerns the additional filtering mentioned above - there are still some non-restaurant review articles that need to be removed from the list, but that cannot be excluded based on their URL.  To deal with these cases, we define the following function:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_misclassified&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;meta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Critic.*Notebook&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}))&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;p.*?&amp;gt;\s*[Cc]ritic.*[Nn]otebook\s*&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;meta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hungry-city&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This function takes in the HTML from a website, parsed as a &lt;code&gt;BeautifulSoup&lt;/code&gt; object using the &lt;a href="https://www.crummy.com/software/BeautifulSoup/"&gt;BeautifulSoup&lt;/a&gt; library for web scraping.  It then searches the page for two indications that the article is not a restaurant review with a star rating, by trying to determine if it is a "Critic's Notebook" column or a "Hungry City" column. This is most easily done by using the &lt;code&gt;BeautifulSoup&lt;/code&gt; library to search for HTML metadata tags that describe the type of content.  &lt;/p&gt;
&lt;p&gt;Unfortunately, the New York Times has not always consistently labeled all content with accurate metadata, and so this search does not always find all the articles that need to be excluded. In this case, we instead have to search the raw HTML directly to see if the page contains the words "Critic's Notebook". This somewhat hacky solution of having to parse pages using multiple methods in order to deal with inconsistencies in the formatting and data tagging will unfortunately be very common in the next part of the project, when we extract the review data from the raw HTML for further analysis.&lt;/p&gt;
&lt;p&gt;The other special aspect of this function is some simple error handling to deal with problems that may arise while attempting to download the different pages.  The main issue I encountered came from making too many requests to the New York Times for articles in a short time span.  When this occurred, making a request for a page returned a standard error page from the New York Times website, instead of the article itself. Since this request still returns the HTML for some web page, just not containing the content we want, we need a simple function to check that the content returned from any request is actually an article and not an error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_server_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;meta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;500 - Server Error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Luckily, this is easily accomplished by looking for HTML metadata tags indicating an error. Any URL that returns such an error page is put back on a list of URLs to try again later.  After a first pass through the URL list, any that have not been successfully accessed are tried again.  Any URLs that can't be successfully accessed after multiple tries are printed to the terminal to be accessed by hand, although in my experience all URLs could be successfully accessed in less than 3 passes.&lt;/p&gt;
&lt;h3&gt;Next Time: Processing the Reviews&lt;/h3&gt;
&lt;p&gt;If you'd like to follow along with the next parts of this project, you can download this script from &lt;a href="https://github.com/josephthurman/blog-projects/tree/master/nytreviews"&gt;GitHub&lt;/a&gt; and run it yourself. This should create a directory called &lt;code&gt;reviews&lt;/code&gt; in the same folder from which you ran the script, which will include the HTML files associated to 278 reviews. There are some caveats to this, however:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You will need to sign up for an &lt;a href="https://developer.nytimes.com"&gt;API key&lt;/a&gt; with the New York Times. This API key is stored in a separate &lt;code&gt;config.py&lt;/code&gt; file which is not included in the repository for security reasons.&lt;/li&gt;
&lt;li&gt;Since this script only needs to run successfully once, I haven't put in very much time to make it more robust. It handles the errors the I encountered while using it, but you might have other issues that I didn't anticipate.  If you have ideas to improve this script to handle other possible issues, you could make a &lt;a href="https://github.com/josephthurman/blog-projects"&gt;pull request on GitHub&lt;/a&gt; or contact me using &lt;a href="http://www.josephthurman.com/contact/"&gt;this form&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Relatedly, this script worked for me on the day this was posted, but the API or the articles themselves may change after that. When you try to fetch the data yourself, it might all be different.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After running the &lt;code&gt;review_fetcher&lt;/code&gt; script, we have the raw data for our project, the HTML for all restaurant reviews (and a few other things) written by Wells over the last 5 years.  In the next part of the project, we'll see how to parse these files to extract the relevant information (review text, number of stars, restaurant price, etc.) from these reviews into a tidy data set for use in the actual analysis.&lt;/p&gt;</content><category term="data science"></category><category term="python"></category><category term="NY Times"></category></entry><entry><title>The Cross Product</title><link href="http://www.josephthurman.com/crossproduct.html" rel="alternate"></link><published>2018-10-01T17:00:00-04:00</published><updated>2018-10-01T17:00:00-04:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-10-01:/crossproduct.html</id><summary type="html">&lt;p&gt;We're nearly ready to give the geometric interpretation of quaternionic multiplication that we've been working toward ever since we &lt;a href="http://www.josephthurman.com/quaternions2.html"&gt;first defined the quaternions&lt;/a&gt;. Instead of considering the four-dimensional quaternions, we've spent the last &lt;a href="http://www.josephthurman.com/vectorsinR3.html"&gt;few&lt;/a&gt; &lt;a href="http://www.josephthurman.com/dotproduct.html"&gt;posts&lt;/a&gt; considering three-dimensional vectors, specifically discussing a product operation called the &lt;a href="http://www.josephthurman.com/dotproduct.html"&gt;dot product&lt;/a&gt; that we can â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;We're nearly ready to give the geometric interpretation of quaternionic multiplication that we've been working toward ever since we &lt;a href="http://www.josephthurman.com/quaternions2.html"&gt;first defined the quaternions&lt;/a&gt;. Instead of considering the four-dimensional quaternions, we've spent the last &lt;a href="http://www.josephthurman.com/vectorsinR3.html"&gt;few&lt;/a&gt; &lt;a href="http://www.josephthurman.com/dotproduct.html"&gt;posts&lt;/a&gt; considering three-dimensional vectors, specifically discussing a product operation called the &lt;a href="http://www.josephthurman.com/dotproduct.html"&gt;dot product&lt;/a&gt; that we can use to understand geometry in three dimensions.  In this post, we'll introduce a second product operation in three dimensions, the so-called &lt;em&gt;cross product&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Intuition for the Cross Product&lt;/h3&gt;
&lt;p&gt;The cross product is an operation that takes in two three-dimensional vectors and returns a three dimensional vector. (Recall that the dot product, in contrast, takes in two vectors and returns a number.) In order to see how this operation works, notice that if we're given two arbitrary vectors in &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt;, then chances are these two vectors will determine a two-dimensional plane in &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt;. For a simple example, the two vectors &lt;span class="math"&gt;\(\mathbf{e}_1 = (1,0,0)\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{e}_2 = (0,1,0)\)&lt;/span&gt; that point in the &lt;span class="math"&gt;\(x\)&lt;/span&gt; and &lt;span class="math"&gt;\(y\)&lt;/span&gt; directions in our standard picture determine the &lt;span class="math"&gt;\(xy\)&lt;/span&gt;-plane, the set of all points with &lt;span class="math"&gt;\(z\)&lt;/span&gt; coordinate equal to &lt;span class="math"&gt;\(0\)&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Two Vectors Determine a Plane" src="http://www.josephthurman.com/planefromvectors1.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Two vectors determine a plane&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;One way to visualize the plane created by two vectors is to see that if we add two vectors using &lt;a href="http://www.josephthurman.com/vectorsinR3.html"&gt;the parallelogram method&lt;/a&gt;, then the parallelogram enclosed by the vectors can be extended to the plane determined by the two vectors.  We can use this to visualize the plane determined by the vectors &lt;span class="math"&gt;\((1,2,3)\)&lt;/span&gt; and &lt;span class="math"&gt;\((0,-2,-1)\)&lt;/span&gt;, shown in red and blue, respectively, in the picture below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Parallelogram method to visualize the plane determined by two vectors" src="http://www.josephthurman.com/planefromvectors2.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Parallelogram method to visualize the plane determined by two vectors&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Considering the parallelogram rule for addition is also helpful for understanding the conditions for which two different vectors don't actually determine a unique plane. This occurs when the two given vectors don't make a parallelogram under vector addition because they point either in the same direction or in exactly opposite directions.  As we see illustrated below, in this case there are many possible planes that contain both vectors, instead of just one.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Multiple planes containing by vectors in opposite directions" src="http://www.josephthurman.com/planefromvectors3.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Multiple planes containing by vectors in opposite directions&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For example in the picture above the two vectors &lt;span class="math"&gt;\((2,0,0)\)&lt;/span&gt; and &lt;span class="math"&gt;\((-3,0,0)\)&lt;/span&gt;, which point in opposite directions, can both be contained in many different planes, including the &lt;span class="math"&gt;\(xy\)&lt;/span&gt;-plane and the &lt;span class="math"&gt;\(xz\)&lt;/span&gt;-plane, consisting of points that have &lt;span class="math"&gt;\(y\)&lt;/span&gt;-coordinate equal to zero.  We can also produce many other planes containing these vectors by rotation.&lt;/p&gt;
&lt;p&gt;Therefore we have that, given two vectors in &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt;, we can usually use them to define a plane.  The observation that leads to the cross product is to note that there is a second way to describe a plane in &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt;, using a &lt;em&gt;normal vector&lt;/em&gt;.  A vector is said to be a &lt;em&gt;normal&lt;/em&gt; to a plane if that vector is orthogonal (perpendicular) to any vector that sits in the plane. Conversely, given a vector, we can produce a plane by considering all of the vectors orthogonal to the given one.  These two processes are illustrated below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Describing a plane by a normal vector" src="http://www.josephthurman.com/normalvector1.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Describing a plane by a normal vector&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In the picture above, we see that the plane is determined by the blue vector &lt;span class="math"&gt;\((1,0,0)\)&lt;/span&gt; and the red vector &lt;span class="math"&gt;\((0,2,-1)\)&lt;/span&gt;.  This plane can also be described by considering a normal vector, shown in black.  This vector is the vector &lt;span class="math"&gt;\((0,1,2)\)&lt;/span&gt;, and it's not hard to see that any vector that lies in the plane will be perpendicular to this vector.&lt;/p&gt;
&lt;p&gt;Thus we have a method to take two vectors and produce a plane, and then to take a plane and produce a normal vector.  Putting these two processes together, we obtain the cross product.  That is, the cross product is the operation that takes in two vectors and returns a vector that is normal to the plane determined by those two vectors.  &lt;/p&gt;
&lt;p&gt;There is a slight problem with this definition: given a plane, there is not a unique normal vector to that plane.  This is illustrated below:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Normal vectors are not unique" src="http://www.josephthurman.com/normalvector2.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Normal vectors are not unique&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is the same plane as above, and the black vector is also the same. We can see, though, that it is not the only vector normal to the plane - the blue vector, which points in the same direction as the black vector, is also normal, as is the red vector, which points in the exact opposite direction.  &lt;/p&gt;
&lt;p&gt;Instead of being determined by a single normal vector, a plane is determined by a single normal line.  We can then pick many different normal vectors by choosing a direction and a length along that line.  Therefore in order to fully define the cross product we need to decide on a systematic way to assign a length and a direction to the normal vector that we pick.  &lt;/p&gt;
&lt;p&gt;We'll consider length first. Given vectors &lt;span class="math"&gt;\(\mathbf{v}, \mathbf{w}\)&lt;/span&gt;, we choose the length of the cross product vector, which is written as &lt;span class="math"&gt;\(\mathbf{v} \times \mathbf{w}\)&lt;/span&gt;, by saying that
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
\| \mathbf{v} \times \mathbf{w} \| = \| \mathbf{v} \| \, \| \mathbf{w} \| \sin \theta
\end{equation*}&lt;/div&gt;
&lt;p&gt;
where &lt;span class="math"&gt;\(\theta\)&lt;/span&gt; is the angle between the vectors &lt;span class="math"&gt;\(\mathbf{v}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{w}\)&lt;/span&gt;.  Recall that all of these lengths and angles can be measured by using the &lt;a href="http://www.josephthurman.com/dotproduct.html"&gt;dot product&lt;/a&gt; operation defined in the previous post.  &lt;/p&gt;
&lt;p&gt;Why do we make this choice? Recall from above that we can consider the plane defined by the vectors &lt;span class="math"&gt;\(\mathbf{v}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{w}\)&lt;/span&gt; as extending the area inside the parallelogram associated to those two vector via vector addition.  The number &lt;span class="math"&gt;\(\| \mathbf{v} \| \, \| \mathbf{w} \| \sin \theta\)&lt;/span&gt; is then exactly the area of this parallelogram.  Another important point is to notice that in the case that the vectors &lt;span class="math"&gt;\(\mathbf{v}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{w}\)&lt;/span&gt; are on the same line, and therefore don't define a unique plane, then the angle between them is either &lt;span class="math"&gt;\(\theta = 0^\circ\)&lt;/span&gt; or &lt;span class="math"&gt;\(\theta = 180^\circ\)&lt;/span&gt;, and in either case we have &lt;span class="math"&gt;\(\sin 0^\circ = \sin 180^\circ = 0\)&lt;/span&gt;.  Therefore the cross product of two vectors that don't actually determine a unique plane is the zero vector &lt;span class="math"&gt;\(\mathbf{0} = (0,0,0)\)&lt;/span&gt;.  Note that this means that the cross product is not a multiplication operation - we can take two non-zero vectors and their cross product can be the zero vector.  This means, following the general discussion from a few &lt;a href="http://www.josephthurman.com/vectorsinR3.html"&gt;posts back&lt;/a&gt;, that there is no way to define a "division" operation that is inverse to the cross product operation.  &lt;/p&gt;
&lt;p&gt;There's still one issue remaining in defining the cross product.  We've seen how to get the length of the cross product vector, but still can't be certain of the direction.  For a simple example, we can return to the situation of the vectors &lt;span class="math"&gt;\(\mathbf{e}_1 = (1,0,0)\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{e}_2 = (0,1,0)\)&lt;/span&gt;.  As we said above, the plane associated to these vectors is the &lt;span class="math"&gt;\(xy\)&lt;/span&gt;-plane, and we see that any vector of the form &lt;span class="math"&gt;\((0,0,z)\)&lt;/span&gt; will be normal to this plane.  Using the formula for lengths described above, we therefore have that &lt;span class="math"&gt;\(\mathbf{e}_1 \times \mathbf{e}_2\)&lt;/span&gt; should be either &lt;span class="math"&gt;\(\mathbf{e}_3 = (0,0,1)\)&lt;/span&gt; or &lt;span class="math"&gt;\(-\mathbf{e}_3 = (0,0,-1)\)&lt;/span&gt;, as these are the two unit vectors that point in the &lt;span class="math"&gt;\(z\)&lt;/span&gt; direction.  But which one should it be?&lt;/p&gt;
&lt;p&gt;We can choose either one, and the standard choice is to choose &lt;span class="math"&gt;\((0,0,1)\)&lt;/span&gt;, so that &lt;span class="math"&gt;\(\mathbf{e}_1 \times \mathbf{e_2} = \mathbf{e}_3\)&lt;/span&gt;.  This choice can be remembered using the &lt;em&gt;right-hand rule&lt;/em&gt; for the cross product. To find the direction of the cross-product &lt;span class="math"&gt;\(\mathbf{v} \times \mathbf{w}\)&lt;/span&gt;, you can begin by pointing the fingers of your right hand in the direction of the vector &lt;span class="math"&gt;\(\mathbf{v}\)&lt;/span&gt;, then curling your fingers toward the vector &lt;span class="math"&gt;\(\mathbf{w}\)&lt;/span&gt;, as if making a fist.  If you extend your thumb while making this motion, then it points in the direction of the cross product vector &lt;span class="math"&gt;\(\mathbf{v} \times \mathbf{w}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Right hand rule" src="http://www.josephthurman.com/righthandrule.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Right hand rule&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is shown in the picture above.  If you begin with the fingers of your right hand pointing out of the page in the direction of &lt;span class="math"&gt;\(\mathbf{e}_1 = (1,0,0)\)&lt;/span&gt;, which is shown in red in the above picture, and then curl them to &lt;span class="math"&gt;\(\mathbf{e}_2 = (0,1,0)\)&lt;/span&gt;, which is shown in blue, then your hand will curl and rotate in the direction of the black arrow, and your thumb will point upward, in the direction of &lt;span class="math"&gt;\(\mathbf{e}_3 = (0,0,1)\)&lt;/span&gt;, shown in green.&lt;/p&gt;
&lt;p&gt;Note that this choice is totally arbitrary - we could just as well have chosen to define &lt;span class="math"&gt;\(\mathbf{e}_1 \times \mathbf{e}_2 = (0,0,-1)\)&lt;/span&gt;, which would correspond to the &lt;em&gt;left-hand rule&lt;/em&gt; for determining the direction of the cross product.   &lt;/p&gt;
&lt;p&gt;The fact that we have to make this choice means that the order of the elements of the cross product matters. This can be verified by example - if you use the right-hand rule to determine the direction of &lt;span class="math"&gt;\(\mathbf{e}_2 \times \mathbf{e}_1\)&lt;/span&gt;, you'll notice that your thumb points down instead of up, that is, &lt;span class="math"&gt;\(\mathbf{e}_2 \times \mathbf{e}_1 = (0,0,-1) = -\mathbf{e}_3\)&lt;/span&gt;.  This means that the cross product is &lt;em&gt;not commutative&lt;/em&gt; - in general, &lt;span class="math"&gt;\(\mathbf{v} \times \mathbf{w}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{w} \times \mathbf{v}\)&lt;/span&gt; are not the same vector.  In fact, it's not hard to see that &lt;span class="math"&gt;\(\mathbf{v} \times \mathbf{w} = - \mathbf{w} \times \mathbf{v}\)&lt;/span&gt;, that is, changing the order of the cross product changes the direction of the resulting vector. For this reason, we say that the cross product is &lt;em&gt;anti-commutative&lt;/em&gt; - it commutes, but with a minus sign. You might remember that &lt;a href="http://www.josephthurman.com/quaternions2.html"&gt;quaternionic multiplication&lt;/a&gt; is also not commutative - we'll return to this point in the next post.&lt;/p&gt;
&lt;h3&gt;Formula for the Cross Product&lt;/h3&gt;
&lt;p&gt;To summarize, the cross product is a procedure that takes in two vectors &lt;span class="math"&gt;\(\mathbf{v}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{w}\)&lt;/span&gt;, and returns a third vector. If &lt;span class="math"&gt;\(\mathbf{v}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{w}\)&lt;/span&gt; together determine a plane, then this third vector is perpendicular to that plane, with length and direction determined by the choices above.  If &lt;span class="math"&gt;\(\mathbf{v}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{w}\)&lt;/span&gt; do not determine a unique plane, the cross product is just the zero vector &lt;span class="math"&gt;\(\mathbf{0} = (0,0,0)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Understanding the above geometric interpretation of the cross product is the most important part of this post, but it isn't useful for actual computations.  In order to compute, we need the following formula. If &lt;span class="math"&gt;\(\mathbf{v} = (v_1, v_2, v_3)\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{w} = (w_1, w_2, w_3)\)&lt;/span&gt; are two vectors, then their cross product is given by the formula
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
\mathbf{v} \times \mathbf{w} = (v_2 w_3 - v_3 w_2, -v_1 w_3 + v_3 w_1, v_1 w_2 - v_2 w_1 )
\end{equation*}&lt;/div&gt;
&lt;p&gt;Let's check that this is the correct formula. First, the above formula does define an anti-commutative operation - if you exchange all of the &lt;span class="math"&gt;\(v\)&lt;/span&gt;'s and &lt;span class="math"&gt;\(w\)&lt;/span&gt;'s in the above formula, you'll get the same vector, but multiplied by &lt;span class="math"&gt;\(-1\)&lt;/span&gt; in each entry. Next, we observe that the formula above follows the right-hand rule - we can easily check that &lt;span class="math"&gt;\((1,0,0) \times (0,1,0) = (0,0,1)\)&lt;/span&gt;, that is, &lt;span class="math"&gt;\(\mathbf{e}_1 \times \mathbf{e}_2 = \mathbf{e}_3\)&lt;/span&gt;, using this formula.&lt;/p&gt;
&lt;p&gt;For a third check, we can observe that the vectors &lt;span class="math"&gt;\(\mathbf{v}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{v} \times \mathbf{w}\)&lt;/span&gt; are orthogonal. The dot product of these two vectors is zero, since
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align*}
\mathbf{v} \cdot (\mathbf{v} \times \mathbf{w}) &amp;amp;= (v_1, v_2, v_3) \times (v_2 w_3 - v_3 w_2, -v_1 w_3 + v_3 w_1, v_1 w_2 - v_2 w_1 ) \\
  &amp;amp;= v_1 (v_2 w_3 - v_3 w_2) + v_2(-v_1 w_3 + v_3 w_1) + v_3(v_1 w_2 - v_2 w_1) \\
  &amp;amp;= 0
\end{align*}&lt;/div&gt;
&lt;p&gt;
Anticommutativity then gives that &lt;span class="math"&gt;\(\mathbf{w}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{v} \times \mathbf{w}\)&lt;/span&gt; are also orthogonal. In order to be sure this formula is correct, it remains to show that the vector &lt;span class="math"&gt;\(\mathbf{v} \times \mathbf{w}\)&lt;/span&gt; that it defines has the proper length.  We'll skip that check here, but the interested reader could try to prove that for themselves.&lt;/p&gt;
&lt;h3&gt;Next Time - Finally Understanding the Quaternions&lt;/h3&gt;
&lt;p&gt;We now have both a geometric intuition and a number-crunching formula for the cross product, and with this understanding we're finally ready to consider quaternionic multiplication from a geometric point of view.  In the next post, we'll see that quaternionic multiplication gives a way to combine the dot product and cross product into a single operation. Using this, we'll be able to understand quaternionic multiplication in terms of rotations and distances in three dimensions.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="thesis"></category><category term="quaternions"></category><category term="linear algebra"></category></entry><entry><title>The Dot Product</title><link href="http://www.josephthurman.com/dotproduct.html" rel="alternate"></link><published>2018-09-12T19:30:00-04:00</published><updated>2018-09-12T19:30:00-04:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-09-12:/dotproduct.html</id><summary type="html">&lt;p&gt;Before the hiatus, we began discussing the geometry of vectors in three dimensions.  At the end of &lt;a href="http://www.josephthurman.com/vectorsinR3.html"&gt;that post&lt;/a&gt;, we discussed why it was impossible to define a multiplication operation on &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt; that also has an inverse (division) operation.  However, there are still two useful "product" operations involving â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Before the hiatus, we began discussing the geometry of vectors in three dimensions.  At the end of &lt;a href="http://www.josephthurman.com/vectorsinR3.html"&gt;that post&lt;/a&gt;, we discussed why it was impossible to define a multiplication operation on &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt; that also has an inverse (division) operation.  However, there are still two useful "product" operations involving three-dimensional vectors.  These operations aren't true multiplication operations, in that they don't have an inverse division operation, but they are still useful for understanding three-dimensional geometry. In this post we'll learn about the first of them, the so-called &lt;em&gt;dot product&lt;/em&gt;.  &lt;/p&gt;
&lt;h3&gt;Motivation - Distance and Angles&lt;/h3&gt;
&lt;p&gt;In the last section, we visualized &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt;, the set of triples of real numbers, by considering vectors as arrows in three-dimensional space. Implicit in this description are notions of angle and distance. After all, in order to visualize the vector &lt;span class="math"&gt;\((1, 2, 3)\)&lt;/span&gt; as an arrow in the three-dimensional coordinate system, we need first to set up three perpendicular axes (that is, the angle between each pair of axes is &lt;span class="math"&gt;\(90^\circ\)&lt;/span&gt;), then draw tick marks along each axis at a fixed distance. Said another way, when we do this procedure we are declaring that the vectors &lt;span class="math"&gt;\(\mathbf{e}_1 = (1,0,0), \mathbf{e}_2 = (0,1,0)\)&lt;/span&gt;, and &lt;span class="math"&gt;\(\mathbf{e}_3 = (0,0,1)\)&lt;/span&gt; should be understood geometrically as arrows of unit length that are pairwise perpendicular. As a note on terminology, we say that the collection of vectors &lt;span class="math"&gt;\(\mathbf{e}_1, \mathbf{e}_2, \mathbf{e}_3\)&lt;/span&gt; is an &lt;em&gt;orthonormal basis&lt;/em&gt;. "Orthonormal" is a combination of &lt;em&gt;orthogonal&lt;/em&gt;, which is a synonym for perpendicular, while &lt;em&gt;normal&lt;/em&gt; means that each vector is of unit length. ("Basis" has a technical meaning that we don't need to get into right now.)&lt;/p&gt;
&lt;p&gt;The important point here is that this is an extra piece of information. Considered on its own, the triple of numbers &lt;span class="math"&gt;\((1,2,3)\)&lt;/span&gt; has no inherent geometrical meaning. Similarly, considering &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt; as just a set of triples of real numbers gives it no geometrical meaning.  Geometry requires some notion of measurement of distances - after all, the word geometry itself comes from Greek for "Earth measurement". We have to make some extra choices to give the set &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt; geometric structure. One possible choice is to declare that the vectors &lt;span class="math"&gt;\(\mathbf{e}_1, \mathbf{e}_2,\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{e}_3\)&lt;/span&gt; are to be considered orthonormal. This allows us to consider all vectors as arrows, and then consider angles and distances in the usual way.  &lt;/p&gt;
&lt;p&gt;For example, this choice allows us to say that then length of the vector &lt;span class="math"&gt;\((1,2,3)\)&lt;/span&gt; is &lt;span class="math"&gt;\(\sqrt{14}\)&lt;/span&gt;. We can find this by repeatedly using the Pythagorean theorem, as illustrated below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Finding Lengths in R3" src="http://www.josephthurman.com/distanceinr3.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Finding Vector Lengths in&lt;/em&gt; &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In this picture, the two black lines run parallel to the &lt;span class="math"&gt;\(x\)&lt;/span&gt; and &lt;span class="math"&gt;\(y\)&lt;/span&gt; axes, so are easily seen to have lengths 1 and 2.  They form a right triangle, with hypotenuse of length &lt;span class="math"&gt;\(\sqrt{1^2 + 2^2} = \sqrt{5}\)&lt;/span&gt; by the Pythagorean theorem.  This hypotenuse is shown in orange.  The orange and blue lines themselves form a right triangle, of which the red vector &lt;span class="math"&gt;\((1,2,3)\)&lt;/span&gt; is the hypotenuse.  The blue line is parallel to the &lt;span class="math"&gt;\(z\)&lt;/span&gt; axis, so we can see that it has length &lt;span class="math"&gt;\(3\)&lt;/span&gt;, and so the red vector has length
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
\sqrt{ \sqrt{5}^2 + 3^3 } = \sqrt{5 + 9} = \sqrt{14}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
as we said before. We could use a similar procedure of breaking down vectors into their components in the &lt;span class="math"&gt;\(x, y, z\)&lt;/span&gt; directions (which are the same as the &lt;span class="math"&gt;\(\mathbf{e}_1, \mathbf{e}_2, \mathbf{e}_3\)&lt;/span&gt; directions) to find the length of any vector &lt;span class="math"&gt;\((v_1, v_2, v_3)\)&lt;/span&gt;, which we will write as &lt;span class="math"&gt;\(\|\mathbf{v} \|\)&lt;/span&gt;, to be
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
\|\mathbf{v} \| = \sqrt{v_1^2 + v_2^2 + v_3^2}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Similarly, we could also find angles between vectors using similar arguments. These methods for computing lengths and angles are unified and made simpler using an operation called the &lt;em&gt;dot product&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Definition of the Dot Product&lt;/h3&gt;
&lt;p&gt;Given two vectors &lt;span class="math"&gt;\(\mathbf{v} = (v_1, v_2, v_3)\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{w} = (w_1, w_2, w_3)\)&lt;/span&gt;, we define their dot product to be the number
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
\mathbf{v} \cdot \mathbf{w} = v_1 w_1 + v_2 w_2 + v_3 w_3
\end{equation*}&lt;/div&gt;
&lt;p&gt;
First, notice that this product operation is of a different type than the multiplication operation we wish that we could define.  The dot product operation takes in two vectors and returns a single number. A multiplication operation that generalized the multiplication of complex numbers to three dimensions would be an operation that takes in two (3-dimensional) vectors and returned a third vector.&lt;/p&gt;
&lt;p&gt;From the formula, it is easy to check that this product operation has many of the nice properties we might expect. It is &lt;em&gt;commutative&lt;/em&gt;, that is,
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
\mathbf{v} \cdot \mathbf{w} = \mathbf{w} \cdot \mathbf{v},
\end{equation*}&lt;/div&gt;
&lt;p&gt;
and is &lt;em&gt;distributive&lt;/em&gt; with respect to vector addition, that is,
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
(\mathbf{v}_1 + \mathbf{v}_2) \cdot \mathbf{w} = \mathbf{v}_1 \cdot \mathbf{w} + \mathbf{v}_2 \cdot \mathbf{w}
\end{equation*}&lt;/div&gt;
&lt;p&gt;As mentioned above, the dot product can be used to measure distances and angles. First, it can be used to find the length of a vector, since
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
\mathbf{v} \cdot \mathbf{v} = v_1^2 + v_2^2 + v_3^2 = \|\mathbf{v} \|^2,
\end{equation*}&lt;/div&gt;
&lt;p&gt;
that is, taking the dot product of a vector with itself gives the square of the length.  &lt;/p&gt;
&lt;p&gt;This allows us to find distances more generally. Given two points &lt;span class="math"&gt;\(p_1, p_2\)&lt;/span&gt; in three-dimensional space, we can consider the vectors &lt;span class="math"&gt;\(\mathbf{w}_1, \mathbf{w}_2\)&lt;/span&gt; that go from the origin to those points.  The difference &lt;span class="math"&gt;\(\mathbf{w}_2 - \mathbf{w}_1\)&lt;/span&gt; is a vector pointing from &lt;span class="math"&gt;\(p_1\)&lt;/span&gt; to &lt;span class="math"&gt;\(p_2\)&lt;/span&gt;, and so the length of the vector gives the distance between those point. If we use &lt;span class="math"&gt;\(d(\mathbf{w}_1, \mathbf{w}_2)\)&lt;/span&gt; to denote the distance between the endpoints of the vectors &lt;span class="math"&gt;\(\mathbf{w}_1, \mathbf{w}_2\)&lt;/span&gt;, we have that
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
d(\mathbf{w}_1, \mathbf{w}_2) = \| \mathbf{w}_2 - \mathbf{w}_1 \|
\end{equation*}&lt;/div&gt;
&lt;p&gt;We can also use the dot product to find the angle between two vectors. Given two vectors &lt;span class="math"&gt;\(\mathbf{v}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{w}\)&lt;/span&gt;, the angle &lt;span class="math"&gt;\(\theta\)&lt;/span&gt; between these two vectors is given by the formula
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
\cos \theta = \frac{\mathbf{v} \cdot \mathbf{w}}{\|\mathbf{v}\| \, \|\mathbf{w}\|}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
As a special case, we can see that this means that &lt;span class="math"&gt;\(\mathbf{v} \cdot \mathbf{w} = 0\)&lt;/span&gt; exactly when &lt;span class="math"&gt;\(\theta = 90^\circ\)&lt;/span&gt;, i.e., when the two vectors are orthogonal.&lt;/p&gt;
&lt;p&gt;Why is this formula for the dot product correct? It goes back to the fact that the distances and angles are determined by declaring &lt;span class="math"&gt;\(\mathbf{e}_1 = (1,0,0), \mathbf{e}_2 = (0,1,0),\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{e_3} = (0,0,1)\)&lt;/span&gt; to be orthonormal.  We've defined the formula for the dot product exactly to make this so.  For example,
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
\mathbf{e}_1 \cdot \mathbf{e}_1 = 1^2 + 0^2 + 0^2 = 1,
\end{equation*}&lt;/div&gt;
&lt;p&gt;
as needed, and
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
\mathbf{e_2} \cdot \mathbf{e}_3 = 0 \cdot 0 + 1 \cdot 0 + 0 \cdot 1 = 0,
\end{equation*}&lt;/div&gt;
&lt;p&gt;
with similar statements for the other vectors &lt;span class="math"&gt;\(\mathbf{e}_2, \mathbf{e}_3\)&lt;/span&gt; and the other pairs.&lt;/p&gt;
&lt;h3&gt;Generalizations&lt;/h3&gt;
&lt;p&gt;This definition of the dot product in three dimensions has a number of different generalizations.&lt;/p&gt;
&lt;p&gt;First, we observe that in our arguments above we gave &lt;span class="math"&gt;\(\mathbf{R}^3\)&lt;/span&gt; a geometric structure by declaring a set of orthonormal vectors &lt;span class="math"&gt;\(\mathbf{e}_1, \mathbf{e}_2, \mathbf{e}_3\)&lt;/span&gt;.  We then showed that the distances and angles between vectors that arise from those choices can be summarized by the dot product.  &lt;/p&gt;
&lt;p&gt;This also works in reverse.  Given the set &lt;span class="math"&gt;\(\mathbf{R}^3\)&lt;/span&gt;, we can define a dot product on &lt;span class="math"&gt;\(\mathbf{R}^3\)&lt;/span&gt; as above, and then use that dot product to define lengths and angles.  With distances and angles defined in this way, the vectors &lt;span class="math"&gt;\(\mathbf{e}_1, \mathbf{e}_2, \mathbf{e}_3\)&lt;/span&gt; are orthonormal. Defining a dot product and defining an orthonormal basis are essentially equivalent processes.&lt;/p&gt;
&lt;p&gt;The idea of giving a space a geometry by defining a dot product can be generalized to the notion of &lt;a href="https://en.wikipedia.org/wiki/Inner_product_space"&gt;inner product spaces&lt;/a&gt;. These are sets equipped with an operation called an "inner product" that behaves like the dot product, which gives a way to measure lengths and distances in that space.  We'll return to inner product spaces later in this series.&lt;/p&gt;
&lt;p&gt;Finally, although we defined the dot product for three-dimensional vectors since we're considering product operations in three dimensions, we can in fact define a dot product operation for any of the spaces &lt;span class="math"&gt;\(\mathbb{R}^k\)&lt;/span&gt; we defined in the previous post.  Given two elements of &lt;span class="math"&gt;\(\mathbf{v} = (v_1, \ldots, v_k)\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{w} = (w_1, \ldots, w_k)\)&lt;/span&gt; of &lt;span class="math"&gt;\(\mathbb{R}^k\)&lt;/span&gt;, their dot product is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
\mathbf{v} \cdot \mathbf{w} = v_1 w_1 + \cdots + v_k w_k
\end{equation*}&lt;/div&gt;
&lt;p&gt;
The set &lt;span class="math"&gt;\(\mathbb{R}^k\)&lt;/span&gt; along with the geometric structure that arises from the dot product is called "&lt;span class="math"&gt;\(K\)&lt;/span&gt;-dimensional Euclidean space." It is named after &lt;a href="https://en.wikipedia.org/wiki/Euclid"&gt;Euclid&lt;/a&gt;, the ancient Greek mathematician who formalized the standard, two-dimensional geometry taught in high school. These geometries are all examples of the flat geometries discussed in the &lt;a href="http://www.josephthurman.com/first-series-explaining-my-thesis.html"&gt;introductory post&lt;/a&gt; in this series.&lt;/p&gt;
&lt;p&gt;This dot product is just one way, however, to take the set &lt;span class="math"&gt;\(\mathbb{R}^k\)&lt;/span&gt; and define a geometric structure on it that allows us to compute the distance between two points. Using other distance functions can give us other, curved geometries, analogous to the sphere or saddle depicted in that introductory post. This will be hugely important later, but we'll get to that after we finish describing the geometrical interpretation of the quaternions that we're working toward.&lt;/p&gt;
&lt;h3&gt;Next Time - The Cross Product&lt;/h3&gt;
&lt;p&gt;The dot product is a product operation that takes in two vectors and returns a number, and is used to measure distances and angles in &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt; so that we can consider the geometry of that space. There is a second product operation on &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt;, however, that takes in two vectors and gives back a third vector.  This "cross product" is the final piece of 3-dimensional geometry we'll need to be able to understand the 4-dimensional quaternions.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="thesis"></category><category term="quaternions"></category><category term="linear algebra"></category></entry><entry><title>Hiatus is Over!</title><link href="http://www.josephthurman.com/hiatusisover.html" rel="alternate"></link><published>2018-08-21T10:01:00-04:00</published><updated>2018-08-21T10:01:00-04:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-08-21:/hiatusisover.html</id><summary type="html">&lt;p&gt;This blog has been on a long (and heretofore unannounced) hiatus as I completed my Ph.D. dissertation over the summer. But good news! Now that my dissertation has been defended, I'm ready to start posting again. Regular updates will resume soon.&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog has been on a long (and heretofore unannounced) hiatus as I completed my Ph.D. dissertation over the summer. But good news! Now that my dissertation has been defended, I'm ready to start posting again. Regular updates will resume soon.&lt;/p&gt;</content></entry><entry><title>Geometry of Three-Dimensional Vectors</title><link href="http://www.josephthurman.com/vectorsinR3.html" rel="alternate"></link><published>2018-04-30T12:01:00-04:00</published><updated>2018-04-30T12:01:00-04:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-04-30:/vectorsinR3.html</id><summary type="html">&lt;p&gt;The &lt;a href="http://www.josephthurman.com/geometryofcomplexnumbers1.html"&gt;previous&lt;/a&gt; &lt;a href="http://www.josephthurman.com/geometryofcomplexnumbers2.html"&gt;posts&lt;/a&gt; in this series discussed two-dimensional vector geometry and how that geometry can be connected to the algebra of complex numbers.  The main result is that the multiplication of complex numbers corresponds geometrically to rotations and dilations of the 2-dimensional plane.&lt;/p&gt;
&lt;p&gt;As mentioned in an &lt;a href="http://www.josephthurman.com/quaternions2.html"&gt;earlier post&lt;/a&gt;, this â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a href="http://www.josephthurman.com/geometryofcomplexnumbers1.html"&gt;previous&lt;/a&gt; &lt;a href="http://www.josephthurman.com/geometryofcomplexnumbers2.html"&gt;posts&lt;/a&gt; in this series discussed two-dimensional vector geometry and how that geometry can be connected to the algebra of complex numbers.  The main result is that the multiplication of complex numbers corresponds geometrically to rotations and dilations of the 2-dimensional plane.&lt;/p&gt;
&lt;p&gt;As mentioned in an &lt;a href="http://www.josephthurman.com/quaternions2.html"&gt;earlier post&lt;/a&gt;, this geometrical interpretation leads to a natural attempt at generalization. If the complex number system can be used to describe two-dimensional geometry, is there a similar number system that can describe three-dimensional geometry? As that post mentioned, that's not quite the case. Instead, one has to increase to four dimensions, where the desired number system is known as the quaternions. The quaternions can still be used to gain some insight into three-dimensional geometry, however.  In order to understand those connections, we'll take the next few posts to discuss the relevant geometry in three dimensions.&lt;/p&gt;
&lt;h3&gt;3-Dimensional Vectors&lt;/h3&gt;
&lt;p&gt;The real numbers, &lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt;, are one-dimensional, and so an element of the set of real numbers is given by a single number. A two-dimensional quantity is something that is represented by a pair of real numbers. For example, the complex numbers &lt;span class="math"&gt;\(\mathbb{C}\)&lt;/span&gt; are two dimensional, and we write a complex number &lt;span class="math"&gt;\(z\)&lt;/span&gt; as &lt;span class="math"&gt;\(z = x + y i\)&lt;/span&gt; for &lt;span class="math"&gt;\(x, y\)&lt;/span&gt; real numbers. An element of a three-dimensional space, then, can be represented by three real numbers, which we usually write as &lt;span class="math"&gt;\((x,y,z)\)&lt;/span&gt;.  The set of ordered triples of real numbers is referred to as &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;More generally, we can consider the set &lt;span class="math"&gt;\(\mathbb{R}^k\)&lt;/span&gt; as the set of ordered &lt;span class="math"&gt;\(k\)&lt;/span&gt;-tuples of real numbers. For small values of &lt;span class="math"&gt;\(k\)&lt;/span&gt;, we have that &lt;span class="math"&gt;\(\mathbb{R}, \mathbb{R}^2,\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt; correspond to the familiar notion of a line, a plane, and a space.  Larger values of &lt;span class="math"&gt;\(k\)&lt;/span&gt; are much more difficult to visualize.&lt;/p&gt;
&lt;p&gt;In the case of the plane, when &lt;span class="math"&gt;\(k = 2\)&lt;/span&gt;, we've also earlier considered the complex numbers &lt;span class="math"&gt;\(\mathbb{C}\)&lt;/span&gt; as a plane, and we've seen that we can consider a complex number &lt;span class="math"&gt;\(z = x + yi\)&lt;/span&gt; as the ordered pair &lt;span class="math"&gt;\((x,y)\)&lt;/span&gt;. This means that &lt;span class="math"&gt;\(\mathbb{C}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbb{R}^2\)&lt;/span&gt; actually represent the same set. Why do we use two different symbols for the same set? When we write &lt;span class="math"&gt;\(\mathbb{R}^2\)&lt;/span&gt;, we're just considering the set of ordered pairs of numbers, which doesn't have a natural multiplication operation like the complex numbers do.  We therefore need to use a separate symbol, &lt;span class="math"&gt;\(\mathbb{C}\)&lt;/span&gt;, when we want to consider pairs of real numbers as complex numbers that have an additional multiplication operation.&lt;/p&gt;
&lt;p&gt;This is common in mathematics - we can often give the same underlying object (the set of pairs of real numbers) additional layers of structure (a multiplication operation) to create something new.  In fact, the quaternions are another example of this type of construction. Using the definition above, an element of &lt;span class="math"&gt;\(\mathbb{R}^4\)&lt;/span&gt; is an ordered list &lt;span class="math"&gt;\((x_1, x_2, x_3, x_4)\)&lt;/span&gt; of 4 real numbers. A quaternion is also a list of four real numbers, &lt;span class="math"&gt;\(q = x_1 + x_2 i + x_3 j + x_4 k\)&lt;/span&gt;.  But the quaternions have an extra multiplication operation, and so we use the symbol &lt;span class="math"&gt;\(\mathbb{R}^4\)&lt;/span&gt; when we want to consider the set of ordered quadruplets of numbers, and the symbol &lt;span class="math"&gt;\(\mathbb{H}\)&lt;/span&gt; when we want to consider the set of ordered quadruplets of numbers &lt;em&gt;along with&lt;/em&gt; the additional quaternionic multiplication operation.&lt;/p&gt;
&lt;p&gt;Considering three dimensions, the standard way of visualizing elements &lt;span class="math"&gt;\((x,y,z)\)&lt;/span&gt; in &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt; is as points graphed on a plot with three axes. This is illustrated below, where we graph the points &lt;span class="math"&gt;\((1,2,3)\)&lt;/span&gt; and &lt;span class="math"&gt;\((0,-2,-1)\)&lt;/span&gt;.  Here we're using the standard conventions for drawing three-dimensional graphs on a flat 2-dimensional screen. The positive &lt;span class="math"&gt;\(x\)&lt;/span&gt;-axis is pointing down and to the left, which you should visualize as pointing out of the screen.  The positive &lt;span class="math"&gt;\(y\)&lt;/span&gt;-axis points to the right, and the positive &lt;span class="math"&gt;\(z\)&lt;/span&gt;-axis points up.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Points plotted in 3D" src="http://www.josephthurman.com/pointsin3d.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Points plotted in 3D&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;3-Dimensional Vector Addition&lt;/h3&gt;
&lt;p&gt;Points in three-dimensional space can also be considered as vectors, just as we did in two dimensions. Instead of considering the point &lt;span class="math"&gt;\((x,y,z)\)&lt;/span&gt; as just a point, we visualize it as an arrow starting at the origin &lt;span class="math"&gt;\((0,0,0)\)&lt;/span&gt; and pointing to the point &lt;span class="math"&gt;\((x,y,z)\)&lt;/span&gt;.  The is pictured below, where we consider the same points graphed above as vectors.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Vectors plotted in 3D" src="http://www.josephthurman.com/vectorsin3d.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Vectors plotted in 3D&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The vector addition operation we discussed in two dimensions also generalizes naturally to three-dimensions.  There's an intuitive way to add elements of &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt;, by just adding the corresponding elements in the ordered triples:
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
(x_1, y_1, z_1) + (x_2, y_2, z_2) = (x_1 + x_2, y_1 + y_2, z_1 + z_2)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
For the two points we've considered above, we have
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
(1,2,3) + (0,-2,-1) = (1,0,2)
\end{equation*}&lt;/div&gt;
&lt;p&gt;This operation also has the same geometric meaning - if we consider the ordered triples as vectors, then addition corresponds to moving one arrow to begin at the end of the other, then drawing a new vector to the end of that arrow.  This is clearer in pictures, shown below.  The red vector is &lt;span class="math"&gt;\((1,2,3)\)&lt;/span&gt;, the blue vector is &lt;span class="math"&gt;\((0,-2,-1)\)&lt;/span&gt; and the sum &lt;span class="math"&gt;\((1,0,2)\)&lt;/span&gt; is shown in black. The translates of the vectors are also shown to demonstrate that the parallelogram rule similarly applies in 3-dimensions.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Vector addition in 3D" src="http://www.josephthurman.com/vectoradditionin3d.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Vector addition in 3D&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This addition operation generalizes naturally to all higher dimensions - we can always add two element of &lt;span class="math"&gt;\(\mathbb{R}^k\)&lt;/span&gt; by considering those elements as ordered &lt;span class="math"&gt;\(k\)&lt;/span&gt;-tuples of numbers and just adding the corresponding numbers.  (In four dimensions, this exactly gives the operation of addition of quaternions, but we'll discuss this more later.) This becomes difficult, if not impossible, to visualize in higher dimensions, though.  The set &lt;span class="math"&gt;\(\mathbb{R}^k\)&lt;/span&gt;, along with this vector addition operation, is the main example of a &lt;em&gt;vector space&lt;/em&gt;, an extremely important concept in geometry that we'll discuss in more depth in a later post.&lt;/p&gt;
&lt;p&gt;We see that the set of &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt; of triples of real numbers can be given an addition operation, and an inverse subtraction operation is also easy to define: we just subtract the corresponding elements in the triples.  Taking a different set of vectors to subtract, if we have the vectors &lt;span class="math"&gt;\(v_1 = (-1,1,3)\)&lt;/span&gt; and &lt;span class="math"&gt;\(v_2 = (1,2,2)\)&lt;/span&gt;, then the subtraction &lt;span class="math"&gt;\(v_1 - v_2\)&lt;/span&gt; results in the vector
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
(-1,1,3) - (1,2,2) = (-2,-1,1)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
This also has an easy interpretation in terms of vectors - subtracting a vector is the same as adding a vector pointing in the opposite direction.  This is illustrated below:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Vector subtraction in 3D" src="http://www.josephthurman.com/vectorsubtractionin3d.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Vector subtraction in 3D&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In these images, the red vector is &lt;span class="math"&gt;\(v_1\)&lt;/span&gt;, the blue vector is &lt;span class="math"&gt;\(v_2\)&lt;/span&gt;, and the black vector corresponds to the subtraction &lt;span class="math"&gt;\(v_1 - v_2\)&lt;/span&gt;, which we'll call &lt;span class="math"&gt;\(v_3\)&lt;/span&gt;.  The green vector is the vector &lt;span class="math"&gt;\(-v_2 = (-1,-2,-2)\)&lt;/span&gt;, the vector with the same magnitude as &lt;span class="math"&gt;\(v_2\)&lt;/span&gt; but pointing in the opposite direction.  Note that the subtraction &lt;span class="math"&gt;\(v_1 - v_2\)&lt;/span&gt; is the same as the vector addition &lt;span class="math"&gt;\(v_1 + (-v_2)\)&lt;/span&gt;, as illustrated in the left figure.  &lt;/p&gt;
&lt;p&gt;The image on the right gives another way to interpret the subtraction.  We have that &lt;span class="math"&gt;\(v_1 - v_2 = v_3\)&lt;/span&gt;, which we can rearrange to say that &lt;span class="math"&gt;\(v_1 = v_3 + v_2\)&lt;/span&gt;, which is the vector addition shown on the right.  &lt;/p&gt;
&lt;h3&gt;What About Multiplication and Division?&lt;/h3&gt;
&lt;p&gt;Recall that all our work so far has been to try to understand number systems that have addition, subtraction, multiplication, and division operations. We've done half of that work in &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt; by defining a way to add and subtract triples of real numbers, and this operation corresponds geometrically to vector addition and subtraction.  What happens when we try to define multiplication and division operations?&lt;/p&gt;
&lt;p&gt;As mentioned earlier, it turns out this is impossible - one has to increase to four dimensions and consider the quaternions in order to be able to define a higher-dimensional number system that has a valid multiplication and division operation.  Proving exactly why such an operation can't exist in three dimensions will have to wait for a later post, but in order to understand this impossibility it's worth it to try to see what happens when we attempt to make such a definition.&lt;/p&gt;
&lt;p&gt;In particular, we could try to make the most obvious definition for multiplication - what if we just multiply two triples by multiplying their corresponding entries? That is, we can define a multiplication operation by
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
(x_1, y_1, z_1) \cdot (x_2, y_2, z_2) = (x_1x_2, y_1y_2, z_1z_2)
\end{equation*}&lt;/div&gt;
&lt;p&gt;This certainly defines some kind of operation, but the problem is that there is no way to define a corresponding inverse or division operation for this multiplication.  To see why, consider the multiplication below:
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
(1,0,1) \cdot (0,1,0) = (0,0,0)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Call the two vectors that we've defined &lt;span class="math"&gt;\(v_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(v_2\)&lt;/span&gt;, and let &lt;span class="math"&gt;\(\mathbf{0}\)&lt;/span&gt; denote the vector that consists of all zeros, so that we can write the above in a shorter form as &lt;span class="math"&gt;\(v_1 \cdot v_2 = \mathbf{0}\)&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;We'd like to define an inverse for &lt;span class="math"&gt;\(v_2\)&lt;/span&gt;, which we would denote by &lt;span class="math"&gt;\(v_2^{-1}\)&lt;/span&gt;, such that multiplication by &lt;span class="math"&gt;\(v_2^{-1}\)&lt;/span&gt; undoes multiplication by &lt;span class="math"&gt;\(v_2\)&lt;/span&gt;.  If we could do that, then we'd be able to write&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
v_1 \cdot v_2 = \mathbf{0} \text{ implies } v_1 \cdot v_2 \cdot v_2^{-1} = \mathbf{0} \cdot v_2^{-1}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
and since &lt;span class="math"&gt;\(v_2^{-1}\)&lt;/span&gt; undoes multiplication by &lt;span class="math"&gt;\(v_2\)&lt;/span&gt; we'd end up with the expression
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
v_1 = \mathbf{0} \cdot v_2^{-1}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
But this can't possibly be true - no matter what the vector &lt;span class="math"&gt;\(v_2^{-1}\)&lt;/span&gt; is, it's clear that multiplying it by &lt;span class="math"&gt;\(\mathbf{0}\)&lt;/span&gt; will always result in &lt;span class="math"&gt;\(\mathbf{0}\)&lt;/span&gt;, and &lt;span class="math"&gt;\(v_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{0}\)&lt;/span&gt; are not the same thing.  There's simply no way to define a vector &lt;span class="math"&gt;\(v_2^{-1}\)&lt;/span&gt; that will undo multiplication by &lt;span class="math"&gt;\(v_2\)&lt;/span&gt; using this definition of a multiplication operation.  &lt;/p&gt;
&lt;p&gt;There is a more general terminology for this phenomenon - if a set has an multiplication operation and it's possible to multiply two non-zero objects together and obtain zero, then the multiplication is said to have &lt;em&gt;zero divisors&lt;/em&gt;.  And the same argument above applies in general - if a multiplication operation has zero-divisors, it's not possible to define an inverse operation that defines division. With a bit more advanced math (that we might see in a later post), one can show that any multiplication operation on &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt; has to have zero divisors, and so it is impossible to define a multiplication operation on &lt;span class="math"&gt;\(\mathbb{R}^3\)&lt;/span&gt; that also has a corresponding division operation.&lt;/p&gt;
&lt;h3&gt;Next Time: Vector Products in Three Dimensions&lt;/h3&gt;
&lt;p&gt;This is not to say that there are no useful concepts of "multiplication" or "product" in three dimensions.  In fact, there are two, and they may be familiar to those who have learned either physics. They are the &lt;em&gt;dot product&lt;/em&gt; and the &lt;em&gt;cross product&lt;/em&gt;, named for the symbols used to write them. Of course, these operations don't have a corresponding division operation, but that doesn't mean they can't still be useful.&lt;/p&gt;
&lt;p&gt;In the next posts, we'll learn what these products are and see why they're important to geometry in three dimensions.  These products will also provide the crucial link between the three-dimensional geometry we have been discussing and the 4-dimensional geometry of the quaternions.  &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="thesis"></category><category term="quaternions"></category><category term="linear algebra"></category></entry><entry><title>Expanding the Binomial Option Pricing Model</title><link href="http://www.josephthurman.com/binomial4.html" rel="alternate"></link><published>2018-03-29T12:00:00-04:00</published><updated>2018-03-29T12:00:00-04:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-03-29:/binomial4.html</id><summary type="html">&lt;p&gt;This post will be the last post, at least for the time being, in the series discussing the &lt;a href="http://www.josephthurman.com/tag/binomial-model.html"&gt;binomial model&lt;/a&gt; for pricing options. In the &lt;a href="http://www.josephthurman.com/binomial3.html"&gt;previous post&lt;/a&gt; we implemented this model in Python in order to find prices for basic European call options.  In this post, we'll expand the implementation â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;This post will be the last post, at least for the time being, in the series discussing the &lt;a href="http://www.josephthurman.com/tag/binomial-model.html"&gt;binomial model&lt;/a&gt; for pricing options. In the &lt;a href="http://www.josephthurman.com/binomial3.html"&gt;previous post&lt;/a&gt; we implemented this model in Python in order to find prices for basic European call options.  In this post, we'll expand the implementation so that it can be used to price a wider variety of options, including American options.&lt;/p&gt;
&lt;h3&gt;Pricing European Put Options&lt;/h3&gt;
&lt;p&gt;To begin, let's take a second look at the implementation we found in the previous post to price call options.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;binomial_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vol&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
    &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;How would we need to change this function to price a put option instead? Recall that a call option gives the right to buy the underlying stock for a particular price, while a put option gives the right to sell for a particular price. The only real difference between the two is the payoff function. If either type of option has a strike price of &lt;span class="math"&gt;\(K\)&lt;/span&gt;, and if we use &lt;span class="math"&gt;\(S_T\)&lt;/span&gt; to denote the spot price of the stock at expiration, then the call option is worth
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
C = \max(S_T-K,0)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
at expiration, since the option allows one to purchase the stock for &lt;span class="math"&gt;\(K\)&lt;/span&gt; and immediately resell in the market for &lt;span class="math"&gt;\(S_T\)&lt;/span&gt; for a profit of &lt;span class="math"&gt;\(S_T-K\)&lt;/span&gt;, and one would only exercise this option if &lt;span class="math"&gt;\(S_T-K &amp;gt; 0\)&lt;/span&gt;.  Similarly, the payoff of a put option is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
P = \max(K-S_T,0)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
since, if one held the option, they could purchase the stock for &lt;span class="math"&gt;\(S_T\)&lt;/span&gt; in the market and resell for &lt;span class="math"&gt;\(K\)&lt;/span&gt; using the option for a profit of &lt;span class="math"&gt;\(K-S_T\)&lt;/span&gt;, and again this option is only exercised if &lt;span class="math"&gt;\(K-S_T &amp;gt; 0\)&lt;/span&gt;.  To modify the code above to price a put option, we only need to change the part where we compute the value of the option at expiry to use this other payoff function. The resulting function is below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;binomial_put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vol&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
    &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#New payoff function for put options&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above code works perfectly well, but what if we had a third type of options trade with a third payoff? For example, we could consider an options trading strategy called a &lt;a href="https://en.wikipedia.org/wiki/Straddle"&gt;straddle&lt;/a&gt;.  Such a trade consists of buying both a call option and a put option on a stock, with the strike price for both equal to the price of the stock today.  What is such a trade good for? If a trader owns a straddle and the price of the stock goes up, then they can exercise the call option and receive the change in price.  On the other had, if the price goes down, they can exercise the put option instead.  This isn't actually a free money machine like it sounds - the trader has to pay some amount to purchase the straddle, and so they'll only make a profit if the change in the price of the stock is greater than the price they paid for the straddle.  Therefore a trader who buys a straddle is betting that the stock will make a large change in its value over the life of the option, but can't decide whether that change will be an increase or decrease.&lt;/p&gt;
&lt;p&gt;How could one find the price of a straddle?  Well, a straddle consists of a call and a put, so one method to price a straddle would be to use the above functions to find the price of the call and put separately and simply add them together. A second option, though, is to consider the payoff function of the straddle.  It's not hard to see that the payoff is simply
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
\text{Straddle} = |S_T - K|
\end{equation*}&lt;/div&gt;
&lt;p&gt;
where &lt;span class="math"&gt;\(K\)&lt;/span&gt; is the strike price on the two options, assumed to be the value of the stock today.  We could therefore write a third function to price straddles, modifying the function in the final payoff step to be the payoff function for straddles. This method will give the same price as the one we'd get by pricing the put and call options in the straddle separately, but will run roughly twice as fast since it will require constructing only one binomial pricing tree instead of two.&lt;/p&gt;
&lt;p&gt;Of course, a straddle is but one example of any number of possible options strategies that can consist of long and short positions in multiple options with varying types and strike prices. Many of these have fun names like a &lt;a href="https://en.wikipedia.org/wiki/Strangle_%28options%29"&gt;strangle&lt;/a&gt;, an &lt;a href="https://en.wikipedia.org/wiki/Iron_condor"&gt;iron condor&lt;/a&gt;, or, most bizarrely, the &lt;a href="https://en.wikipedia.org/wiki/Jade_Lizard"&gt;jade lizard&lt;/a&gt;. Since all of these strategies are combinations of simpler call and put options, we could price them by finding the price of all of the components and taking the sum. This is more computationally expensive than it needs to be, though, especially for complicated strategies that could involve many options. The easier pricing method is to observe that each of these strategies also has a single function that determines the payoff of the option from the spot price of the asset at expiration. (It's the sum of the payoff functions of all of the options involved in the strategy.) Instead of writing tens or even hundreds of different functions for all the various different type of options trades, we'll instead modify the function we've defined above so that we can easily change the payoff associated to the option.&lt;/p&gt;
&lt;p&gt;The resulting function is defined below.  We also give some functions to produce the payoff function of a call, put, and straddle.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;binomial_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vol&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;payoff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    payoff is a function that describes the payoff of the option,&lt;/span&gt;
&lt;span class="sd"&gt;        at expiry, as a function of the value of the underlying&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
    &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;payoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;call_payoff_with_strike&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;put_payoff_with_strike&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;straddle_payoff_with_strike&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As a simple check, note that our new method to price a call gives the same answer as our old function for pricing the same option. (The various parameters below were chosen arbitrarilty.)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;binomial_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;115&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;binomial_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;call_payoff_with_strike&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;115&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.42805363986800904
0.42805363986800904
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Our new functions are also consistent, in that the price of a straddle is the sum of the call and put prices.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;binomial_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;call_payoff_with_strike&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;binomial_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;put_payoff_with_strike&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;straddle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;binomial_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;straddle_payoff_with_strike&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;straddle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;7.962206120543319
7.9622061205433186
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above code suggests that it may be clarifying to rewrite our code using an object-oriented approach - instead of taking the payoff function itself as an argument in our function, we could define an &lt;code&gt;Option&lt;/code&gt; class that would include a method to compute the payoff of the option.  Before we begin making those larger changes, though, we'll also consider what changes we need to make to our implementation to be able to price American options.  &lt;/p&gt;
&lt;h3&gt;Pricing American Options&lt;/h3&gt;
&lt;p&gt;Recall that while European options can only be exercised on one particular day, American options can be exercised at any time before they expire. Since American options give their holders more rights than European options, American options should be worth at least as much as their European counterparts. But how much more: how much is the ability to exercise the option early worth?&lt;/p&gt;
&lt;p&gt;This is related to what is called the &lt;em&gt;intrinsic value&lt;/em&gt; of an option, which is defined to be the value the option would have if it were exercised now, regardless of whether or not we're actually able to exercise the option at this time. For example, if you own a European call option on a stock with strike price &amp;dollar;100 that expires in 3 months, and the stock price right now is &amp;dollar;105, then the intrinsic value of the option today is &amp;dollar;5, even though the option can't actually be exercised right now.  &lt;/p&gt;
&lt;p&gt;It is important to note that the intrinsic value of the option is &lt;em&gt;not&lt;/em&gt; the same as the price of the option today - for example, in the situation we just described, if we us the same values for the risk-free rate and volatility that we've assumed in our examples above then the price of the option given by the model (using &lt;span class="math"&gt;\(N = 500\)&lt;/span&gt; steps) is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;binomial_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;105&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;call_payoff_with_strike&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;7.318672372367908
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that this value is actually higher than the intrinsic value of &amp;dollar;5 - we'll discuss this point more later.  &lt;/p&gt;
&lt;p&gt;For a European call option, the idea of intrinsic value doesn't make a big difference in the actual pricing, since these options can only be exercised at a specific time.  An American option, though, can always be exercised to gain the intrinsic value. To find the value of an American option at any particular time, we need to consider both the expected future value of the option (as we have done for European options) and the intrinsic value. The actual value of the option at that time is then the &lt;em&gt;larger&lt;/em&gt; of these two values.&lt;/p&gt;
&lt;p&gt;We can easily modify our earlier code to accommodate this change.  In the main loop where we work backward through the tree, we have already calculated the theoretical future value of the option.  We can simply add an extra line of code to compute the intrinsic value of the option, and then take the maximum to find the value of the option at each node. Of course, we only want to make this change for pricing American options, and so this aspect of the calculation needs to be something controlled by the &lt;code&gt;Option&lt;/code&gt; class in the object-oriented approach we're about to implement.&lt;/p&gt;
&lt;h3&gt;An Object-Oriented Implementation&lt;/h3&gt;
&lt;p&gt;Our model has three components that are fairly distinct, namely a stock, an option on that stock, and a binomial model to find the price of that option. Each of these concepts will have its own corresponding class. The simplest class is the one that will describe a stock.  In our model, the stock really has only two values associated to it - today's spot price and the stock's volatility - and so the definition of this class is very simple.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Stock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vol&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;spot&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vol&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With such little information, we don't actually need the overhead of defining this stock class, but it's worth it to separate the stock from the concept of an option since options can be written on many underlying assets.&lt;/p&gt;
&lt;p&gt;As far as the option is concerned, we have a few pieces of information that define the option itself - the underlying asset, the expiration date of the option, and the payouts associated to the option.  To consider the distinction between American and European options, we describe the payout of the option using two different functions, one that gives the final value at expiration and another function for the payout associated to early exercise. A base class from which our other option types will inherit is defined below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Option&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expiry&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;underlying&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expiry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;expiry&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;final_payoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spot&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;NotImplementedError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Final option payoff is not defined&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;early_payoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spot&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;NotImplementedError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Early exercise payoff is not defined&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can then implement subclasses that give the specific behavior of American and European call and put options.  These options have an extra parameter associated to them, the strike price of the option.  For European call options, the &lt;code&gt;final_payoff&lt;/code&gt; function is the same as what we've used before, and the &lt;code&gt;early_payoff&lt;/code&gt; function just returns 0 since the option cannot be exercised early.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EuroCall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Option&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expiry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strike&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expiry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strike&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;strike&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;final_payoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spot&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spot&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strike&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;early_payoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spot&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EuroPut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Option&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expiry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strike&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expiry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strike&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;strike&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;final_payoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spot&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strike&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;spot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;early_payoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spot&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can also define classes to represent American options.  These are just like European options, except the &lt;code&gt;early_payoff&lt;/code&gt; function is the same as the &lt;code&gt;final_payoff&lt;/code&gt; function.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AmerCall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EuroCall&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;early_payoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spot&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;final_payoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AmerPut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EuroPut&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;early_payoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spot&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;final_payoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This framework is flexible enough to allow for many other types of options beyond combinations of calls and puts. For example, instead of American options, where the &lt;code&gt;final_payoff&lt;/code&gt; and &lt;code&gt;early_payoff&lt;/code&gt; functions are the same, we could consider options that have an entirely different payoff if exercised early, perhaps with a some kind of early-exercise penalty. We could also easily add a time parameter to the &lt;code&gt;early_payoff&lt;/code&gt; function, and consider more complicated options that could, for example, only be exercised on certain days, or have different strike prices over the life of the option.&lt;/p&gt;
&lt;p&gt;Finally, we define a class that contains the actual binomial pricing method.  This class takes in the option and the risk-free rate as an input, and then includes a method that runs the binomial model for a given number of steps to find its price. Since our model will now need to take into account the possible intermediate values of the stock price in order to price American options, we define an extra function to make that computation. Otherwise, the code is very similar to what we have had before, except some of the parameters are now considered as attributes of various objects instead of as function arguments.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BinomialModel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;price&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expiry&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
        &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# Computes the price of the underlying asset k steps into the tree with m up movements&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;underlying&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spot&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;final_payoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;future_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
                &lt;span class="n"&gt;exercise_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;early_payoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;future_value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exercise_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Just to make sure we haven't introduced any errors, we can check to make sure that our new code finds the same prices as before.  Consider the example we computed before:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;binomial_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;115&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.42805363986800904
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using our new code, which now requires a few more lines to write, we have&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;test_stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Stock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;euro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EuroCall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_stock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;115&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;BinomialModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;euro&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.015&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.42805363986800904
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Thankfully, it appears we haven't broken anything in refactoring our code to make it object-oriented.&lt;/p&gt;
&lt;h3&gt;American vs. European Options&lt;/h3&gt;
&lt;p&gt;American options, as we've discussed above, are essentially European options along with the extra right to exercise early. It seems this extra right should be worth something, and that an American option should be worth more than its European counterpart. Is that actually the case?&lt;/p&gt;
&lt;p&gt;In particular, with can price an American call option with the same parameters as the European option we priced at the end of the last section:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;amer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AmerCall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_stock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;115&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;BinomialModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.015&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0.42805363986800904
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This price is the same as the price for the European option, and we just argued that the American option should be worth more.  Did we make a mistake in our model?&lt;/p&gt;
&lt;p&gt;It turns out that the early exercise rights of an American option do not necessarily have any value. Looking at our code, we see that the American option will only be worth more than the European option if there are times when the "exercise value" (which is also the intrinsic value of the option) is worth more than the expected future value of the option.  For American call options, this will never actually occur if the risk-free interest rate is positive. (This is actually only true for stocks that don't pay dividends, which are the only stocks we've been considering so far. If the stock pays a dividend during the life of the option, then it may be worth it to exercise the call option early so that one can hold the stock and receive the dividend payment.)&lt;/p&gt;
&lt;p&gt;To see this, consider a portfolio that consists of one share of the asset underlying the call option along with a obligation to pay &lt;span class="math"&gt;\(K\)&lt;/span&gt; dollars on the expiration date of the option (i.e., in order to repay a risk-free loan). Let &lt;span class="math"&gt;\(S_t\)&lt;/span&gt; denote the value of the stock at a given time, and &lt;span class="math"&gt;\(Z_t\)&lt;/span&gt; denote the value of the loan. If interest rates are positive, we have that &lt;span class="math"&gt;\(Z_t &amp;lt; Z_T\)&lt;/span&gt; for all &lt;span class="math"&gt;\(t &amp;lt; T\)&lt;/span&gt;. Let &lt;span class="math"&gt;\(C_t\)&lt;/span&gt; denote the value of the option at time &lt;span class="math"&gt;\(t\)&lt;/span&gt;, and let &lt;span class="math"&gt;\(T\)&lt;/span&gt; denote the expiration time of the option.  &lt;/p&gt;
&lt;p&gt;At expiration, we have that &lt;span class="math"&gt;\(Z_T = K\)&lt;/span&gt; and so the value of the portfolio is &lt;span class="math"&gt;\(S_T-Z_T = S_T - K \leq \max(S_T-K,0) = C_T\)&lt;/span&gt;. Therefore by no-arbitrage principles we have that &lt;span class="math"&gt;\(S_t - Z_t \leq C_t\)&lt;/span&gt; for all earlier times. Since interest rates are positive, we have &lt;span class="math"&gt;\(S_t-Z_t &amp;gt; S_t-K\)&lt;/span&gt;, and so combining these inequalities gives that
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
S_t - K &amp;lt; S_t - Z_t \leq C_t
\end{equation*}&lt;/div&gt;
&lt;p&gt;
that is, the value of a call option at a particular time is always greater than the intrinsic value of the option. In particular, an investor is never better off by exercising an American call option early, and so the extra rights of an American call option are worthless.  If an investor holds the option and wanted to cash out, it would always be better for them to sell the option than to exercise it. Note that our argument was based on no-arbitrage principles, and therefore doesn't rely on any of the special assumptions about price movement of the underlying asset in our particular binomial model.&lt;/p&gt;
&lt;p&gt;American put options really are different from European puts, though. There are times when it is better to exercise an American put option early, and so American put options can be worth strictly more than their European counterparts.  For example, sticking with the same stock and option parameters we've been considering, but pricing put options instead, gives&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;amerp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AmerPut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_stock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;115&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BinomialModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amerp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.015&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;europ&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EuroPut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_stock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;115&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BinomialModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;europ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.015&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;15.183131872004736
14.997611223826567
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that the American option is in fact worth more. One possible way we could improve our code would be to add a method to the &lt;code&gt;BinomialModel&lt;/code&gt; class that could find the nodes in the tree that correspond to situations in which early exercise of the option is preferred.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;And that's it! It's taken a fair amount of work, but we've managed to build a fairly efficient model for pricing a number of different types of options on simple stocks. Even better, we did this without any hardcore mathematics - our model uses nothing more complicated than basic probability, and all of the hard work is done by a computer in simulation.&lt;/p&gt;
&lt;p&gt;Of course, there are still plenty of ways that our model could be improved. For example, we've taken the volatility of the underlying stock as a given, but where does this number actually come from?  We've also ignored dividends that might be paid on the stock, transaction costs, and tax considerations. But the underlying theory of the model, and our specific implementation of it in Python, is flexible enough that we could continue to make modifications to address these concerns. If you'd like to do that, you can check out a consolidated and lightly-commented version of the final implementation on my &lt;a href="https://github.com/josephthurman/blog-projects"&gt;Github page&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="finance"></category><category term="binomial-model"></category><category term="python"></category></entry><entry><title>Geometry of the Complex Numbers: Rotations</title><link href="http://www.josephthurman.com/geometryofcomplexnumbers2.html" rel="alternate"></link><published>2018-03-23T11:30:00-04:00</published><updated>2018-03-23T11:30:00-04:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-03-23:/geometryofcomplexnumbers2.html</id><summary type="html">&lt;p&gt;In the &lt;a href="http://www.josephthurman.com/geometryofcomplexnumbers1.html"&gt;previous post&lt;/a&gt; in this series, we introduced a geometrical interpretation of the complex numbers as vectors in the 2-dimensional plane.  That post also explained the geometrical significance of the addition of complex numbers as vector addition. In this post, we'll see how to interpret the multiplication of complex â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the &lt;a href="http://www.josephthurman.com/geometryofcomplexnumbers1.html"&gt;previous post&lt;/a&gt; in this series, we introduced a geometrical interpretation of the complex numbers as vectors in the 2-dimensional plane.  That post also explained the geometrical significance of the addition of complex numbers as vector addition. In this post, we'll see how to interpret the multiplication of complex numbers geometrically.&lt;/p&gt;
&lt;h3&gt;Polar Coordinates in the Plane&lt;/h3&gt;
&lt;p&gt;Although we didn't make this explicit in the last post, our discussion of complex numbers as points or vectors in the two-dimensional plane has so far used two different coordinate systems.  We first used the standard Cartesian coordinate system, plotting the real part of the complex number on the horizontal axis and the imaginary part on the vertical axis. This description works equally well if we consider the complex number as just a point or as a vector by drawing an arrow from the origin to that point.&lt;/p&gt;
&lt;p&gt;The last post also discussed vectors in a physical context, as a way to interpret change in location (displacement), and in that context we instead described the vector using the &lt;em&gt;magnitude&lt;/em&gt; and &lt;em&gt;direction&lt;/em&gt; of the vector (e.g., traveling 5 miles southeast).  Of course, this method gives us a way to name points as well - given a vector, the point that the vector describes is just the endpoint of the vector.&lt;/p&gt;
&lt;p&gt;This method for naming points in the plane is known as the &lt;em&gt;polar coordinate system&lt;/em&gt;. Instead of describing points using distances along perpendicular axes, this system describes points using the distance from a central point and the angle formed with some reference direction.&lt;/p&gt;
&lt;p&gt;In order to explain polar coordinates we'll briefly put aside the complex numbers and just consider points in the plane as determined by &lt;span class="math"&gt;\((x,y)\)&lt;/span&gt; coordinates. Given a point &lt;span class="math"&gt;\((x,y)\)&lt;/span&gt; in Cartesian coordinates, what are its coordinates in the polar coordinate system?  The relationship is pictured below:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Polar Coordinate System" src="http://www.josephthurman.com/polarcoordinates.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Polar Coordinate System&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Here &lt;span class="math"&gt;\(r\)&lt;/span&gt; (taken from radius) is the distance from the origin (the magnitude), and the Greek letter theta (&lt;span class="math"&gt;\(\theta\)&lt;/span&gt;) gives the direction, as a counterclockwise angle from the positive x-axis.&lt;/p&gt;
&lt;p&gt;This way to describe angles is different from the way we described directions in the last post.  There, we used compass headings: due north was &lt;span class="math"&gt;\(0^\circ\)&lt;/span&gt;, which would correspond to the direction of the positive &lt;span class="math"&gt;\(y\)&lt;/span&gt;-axis.  In the polar coordinate system, the positive &lt;span class="math"&gt;\(y\)&lt;/span&gt;-axis is at &lt;span class="math"&gt;\(90^\circ\)&lt;/span&gt;.  Similarly, the positive &lt;span class="math"&gt;\(x\)&lt;/span&gt;-axis is the &lt;span class="math"&gt;\(0^\circ\)&lt;/span&gt; direction in the polar coordinate system, but it is measured as &lt;span class="math"&gt;\(90^\circ\)&lt;/span&gt;, or due east, with compass headings. The reference direction used to measure the angles doesn't ultimately make any real difference, so we'll use the traditional mathematical conventions of measuring angles starting from the positive &lt;span class="math"&gt;\(x\)&lt;/span&gt;-axis.&lt;/p&gt;
&lt;p&gt;Speaking of conventions, it's also worth pointing out that mathematicians generally use &lt;em&gt;radians&lt;/em&gt; instead of degrees to measure angles.  If once around the circle measures an angle of 360 degrees, the same angle is &lt;span class="math"&gt;\(2\pi\)&lt;/span&gt; radians. For example, a right angle is either &lt;span class="math"&gt;\(90^\circ\)&lt;/span&gt; or &lt;span class="math"&gt;\(\pi/2\)&lt;/span&gt; radians. The distinction between measuring angles in degrees or radians can actually make an important difference in some situations (it's important in calculus, for example), but we won't encounter any such situations in this post, and so  we'll mostly stick to degrees since they are more intuitive to most people.&lt;/p&gt;
&lt;p&gt;In equations, the relationship is as follows. Given a point &lt;span class="math"&gt;\((x,y)\)&lt;/span&gt; in Cartesian coordinates, its description in polar coordinates is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
r = \sqrt{x^2 + y^2} \hspace{.25in} \theta = \arctan(y/x)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
where &lt;span class="math"&gt;\(\arctan(x)\)&lt;/span&gt; is the inverse tangent function.  Conversely, given a point &lt;span class="math"&gt;\((r,\theta)\)&lt;/span&gt; in polar coordinates, its description in Cartesian coordinates is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
x = r \cos \theta \hspace{.25in} y = r \sin \theta
\end{equation*}&lt;/div&gt;
&lt;p&gt;
If &lt;span class="math"&gt;\(r = 1\)&lt;/span&gt;, then this relationship above is exactly the &lt;a href="https://en.wikipedia.org/wiki/Unit_circle#Trigonometric_functions_on_the_unit_circle"&gt;unit circle&lt;/a&gt; definition of the sine and cosine functions.&lt;/p&gt;
&lt;h3&gt;The Polar Form of Complex Numbers&lt;/h3&gt;
&lt;p&gt;We can now go back to considering complex numbers. So far, we've described complex numbers in terms of Cartesian coordinates. For the complex number &lt;span class="math"&gt;\(z = a + bi\)&lt;/span&gt;, the real part &lt;span class="math"&gt;\(a\)&lt;/span&gt; gives to coordinate along the horizontal axis and the imaginary part &lt;span class="math"&gt;\(b\)&lt;/span&gt; gives the coordinate along the vertical axis.  Using the equations above, we can instead describe the complex number as a pair of numbers &lt;span class="math"&gt;\(r\)&lt;/span&gt; and &lt;span class="math"&gt;\(\theta\)&lt;/span&gt; in a polar coordinate system.&lt;/p&gt;
&lt;p&gt;From the formulas, we have that &lt;span class="math"&gt;\(r = \sqrt{a^2 + b^2}\)&lt;/span&gt;. We've already encountered this expression before - this number is the same as &lt;span class="math"&gt;\(\sqrt{z \bar{z}}\)&lt;/span&gt;, where &lt;span class="math"&gt;\(\bar{z} = a - bi\)&lt;/span&gt; is the complex conjugate of &lt;span class="math"&gt;\(z\)&lt;/span&gt;. We also used the symbol &lt;span class="math"&gt;\(|z|\)&lt;/span&gt; to denote this value.  In this context, the number &lt;span class="math"&gt;\(|z|\)&lt;/span&gt; is called the &lt;em&gt;modulus&lt;/em&gt; of the complex number &lt;span class="math"&gt;\(z\)&lt;/span&gt;. The value &lt;span class="math"&gt;\(\theta = \arctan(y/x)\)&lt;/span&gt; also has a special name in the context of complex numbers, and is called the &lt;em&gt;argument&lt;/em&gt; of &lt;span class="math"&gt;\(z\)&lt;/span&gt;, sometimes denoted by &lt;span class="math"&gt;\(\text{arg}(z)\)&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;We therefore now have two different ways to describe a complex number. The first method uses its real and imaginary part, which corresponds to the &lt;span class="math"&gt;\(z = a+bi\)&lt;/span&gt; description and Cartesian coordinates. The second method uses the modulus and argument, which correspond to magnitude and direction in polar coordinates.  Using the formula to convert polar coordinates to Cartesian coordinates, we can write
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
z = |z|(\cos \theta + i \sin \theta)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
to express complex numbers in their so-called &lt;em&gt;polar form&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Depending on the situation, one of these forms is usually a more convenient way to express complex numbers.  For example, we've already seen that adding complex numbers in the Cartesian coordinate expression is fairly straightforward.  If &lt;span class="math"&gt;\(z_1 = a_1 + b_1 i\)&lt;/span&gt; and &lt;span class="math"&gt;\(z_2 = a_2 + b_2 i\)&lt;/span&gt;, then
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
z_1 + z_2 = (a_1 + a_2) + (b_1 + b_2)i
\end{equation*}&lt;/div&gt;
&lt;p&gt;
It's not so easy to add complex numbers in polar form, however. If one were instead told only the modulus and argument of the complex numbers &lt;span class="math"&gt;\(z_1, z_2\)&lt;/span&gt;, then it's not immediately clear how to find the modulus and argument of the complex number &lt;span class="math"&gt;\(z_1 + z_2\)&lt;/span&gt;. The easiest way to find these values is usually to convert both &lt;span class="math"&gt;\(z_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(z_2\)&lt;/span&gt; to their Cartesian coordinate expression, add them as above, and then convert back to polar form.  (This is probably familiar to anyone whose main exposure to vectors is high-school physics.  In that context, vectors are often given using magnitude and direction, and one of the easiest ways to add vectors in such a context is to find the &lt;span class="math"&gt;\(x\)&lt;/span&gt; and &lt;span class="math"&gt;\(y\)&lt;/span&gt; components of the vectors and add those separately. Finding the &lt;span class="math"&gt;\(x\)&lt;/span&gt; and &lt;span class="math"&gt;\(y\)&lt;/span&gt; components of a vector is exactly the same process as converting it from polar form to Cartesian form.)&lt;/p&gt;
&lt;p&gt;On the other hand, we saw in &lt;a href="http://www.josephthurman.com/quaternions1.html"&gt;a previous post&lt;/a&gt; that the multiplication of complex numbers, written in Cartesian coordinates, isn't exactly intuitive.  The formula is that
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
(a_1 + b_1 i)(a_2 + b_2 i) = (a_1 a_2 - b_1 b_2) + (a_1 b_2 + a_2 b_1) i,
\end{equation*}&lt;/div&gt;
&lt;p&gt;
which arises from treating &lt;span class="math"&gt;\(i\)&lt;/span&gt; as a variable and gathering like terms, using the simplification that &lt;span class="math"&gt;\(i^2 = -1\)&lt;/span&gt;.  This formula, though, will become much clearer when we consider the expression for the multiplication of complex numbers in polar form.&lt;/p&gt;
&lt;h3&gt;Multiplication of Complex Numbers in Polar Form&lt;/h3&gt;
&lt;p&gt;So how do we multiply complex numbers in polar form? If &lt;span class="math"&gt;\(z_1, z_2\)&lt;/span&gt; are complex numbers, with moduli &lt;span class="math"&gt;\(|z_1|, |z_2|\)&lt;/span&gt; and arguments &lt;span class="math"&gt;\(\theta_1, \theta_2\)&lt;/span&gt;, respectively, then their product is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align*}
z_1 z_2 &amp;amp;= |z_1|(\cos \theta_1  + i \sin \theta_1)|z_2|(\cos \theta_2  + i \sin \theta_2) \\
  &amp;amp;= |z_1||z_2|\Big( \big((\cos \theta_1)(\cos \theta_2)- (\sin \theta_1)(\sin \theta_2)\big) + i\big((\cos \theta_1)(\sin \theta_2) + (\sin \theta_1)(\cos \theta_2)\big) \Big)
\end{align*}&lt;/div&gt;
&lt;p&gt;
This expression looks complicated, but can be simplified with a little knowledge of trigonometry.  There are formulas that allow one to express the sine and cosine of the sum of two angles in terms of the sine and cosine of the angles being addded.  Specifically, the following formulas are true for any pair of angles &lt;span class="math"&gt;\(\theta_1, \theta_2\)&lt;/span&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align*}
\sin(\theta_1 + \theta_2) &amp;amp;= (\cos \theta_1)(\sin \theta_2) + (\sin \theta_1)(\cos \theta_2) \\
\cos(\theta_1 + \theta_2) &amp;amp;= (\cos \theta_1)(\cos \theta_2)- (\sin \theta_1)(\sin \theta_2)
\end{align*}&lt;/div&gt;
&lt;p&gt;
Of course, these are exactly the expressions appearing above, and so we can finally express our multiplication formula in polar form as
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
z_1 z_2 = |z_1| |z_2| \big(\cos(\theta_1 + \theta_2) + i \sin(\theta_1 + \theta_2)\big)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
This is the polar form for a complex number with modulus &lt;span class="math"&gt;\(|z_1| |z_2| = |z_1 z_2|\)&lt;/span&gt; and argument &lt;span class="math"&gt;\(\theta_1 + \theta_2\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If you don't remember the various trigonometry identities, then understanding the derivation of the formula we gave above isn't really that important. What is important is that this formula finally gives a way to interpret the multiplication of complex numbers geometrically. We see that to multiply two complex numbers &lt;span class="math"&gt;\(z_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(z_2\)&lt;/span&gt; in polar form, we multiply their respective moduli and add their arguments.  This means that multiplication of complex numbers corresponds geometrically to &lt;em&gt;stretching&lt;/em&gt; and &lt;em&gt;rotating&lt;/em&gt; vectors in the the plane.  &lt;/p&gt;
&lt;p&gt;Let's illustrate this with a simple example. Let &lt;span class="math"&gt;\(z = \sqrt{3}
 - i\)&lt;/span&gt;, and let &lt;span class="math"&gt;\(w = -2 + 2 \sqrt{3}i\)&lt;/span&gt;.  These are expressed in Cartesian form now, but using the formulas above one can show that in polar form
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align*}
z &amp;amp;= 2 \left(\cos(-30^\circ) + i \sin(-30^\circ) \right)\\
w &amp;amp;= 4 \left( \cos(120^\circ) + i \sin(120^\circ) \right)
\end{align*}&lt;/div&gt;
&lt;p&gt;
that is, &lt;span class="math"&gt;\(z\)&lt;/span&gt; has modulus &lt;span class="math"&gt;\(|z| = 2\)&lt;/span&gt; and argument &lt;span class="math"&gt;\(-30^\circ\)&lt;/span&gt;, and &lt;span class="math"&gt;\(w\)&lt;/span&gt; has modulus &lt;span class="math"&gt;\(|w| = 4\)&lt;/span&gt; and argument &lt;span class="math"&gt;\(120^\circ\)&lt;/span&gt;.  The product &lt;span class="math"&gt;\(zw\)&lt;/span&gt; therefore has modulus &lt;span class="math"&gt;\(|zw| = 2 \cdot 4 = 8\)&lt;/span&gt; and argument &lt;span class="math"&gt;\(120 - 30 = 90^\circ\)&lt;/span&gt;, and so can be expressed in polar form as
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
zw = 8 \left( \cos(90^\circ) + i \sin(90^\circ) \right)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Expressed in Cartesian coordinates, this is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
zw = 8i
\end{equation*}&lt;/div&gt;
&lt;p&gt;
which could also be obtained by multiplying the expressions for &lt;span class="math"&gt;\(z\)&lt;/span&gt; and &lt;span class="math"&gt;\(w\)&lt;/span&gt; in Cartesian coordinates.&lt;/p&gt;
&lt;p&gt;The geometrical interpretation is clearer when we plot &lt;span class="math"&gt;\(z\)&lt;/span&gt;, &lt;span class="math"&gt;\(w\)&lt;/span&gt;, and their product &lt;span class="math"&gt;\(zw\)&lt;/span&gt; as vectors in the plane:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Geometrical interpretation of complex multiplication " src="http://www.josephthurman.com/vectormultiplication1.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Vector representation of &lt;span class="math"&gt;\(z\)&lt;/span&gt;, &lt;span class="math"&gt;\(w\)&lt;/span&gt; and &lt;span class="math"&gt;\(zw\)&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Note in the image above that the length of &lt;span class="math"&gt;\(zw\)&lt;/span&gt; is 4 times the length of &lt;span class="math"&gt;\(z\)&lt;/span&gt;, and twice the length of &lt;span class="math"&gt;\(w\)&lt;/span&gt;.  The angles are a little harder to judge in this picture, but they match up as well - the angle between the &lt;span class="math"&gt;\(zw\)&lt;/span&gt; and the positive &lt;span class="math"&gt;\(x\)&lt;/span&gt;-axis is the sum the the angles that the vectors &lt;span class="math"&gt;\(z\)&lt;/span&gt; and &lt;span class="math"&gt;\(w\)&lt;/span&gt; make with that axis (the former angle being negative).  &lt;/p&gt;
&lt;p&gt;It's also helpful to think of multiplication as a transformation that one vector is performing on the other.  For example, we could consider the product &lt;span class="math"&gt;\(zw\)&lt;/span&gt; as taking the vector &lt;span class="math"&gt;\(z\)&lt;/span&gt; and transforming it by the action represented by the complex number &lt;span class="math"&gt;\(w\)&lt;/span&gt;.  That is, as &lt;span class="math"&gt;\(w\)&lt;/span&gt; has a modulus of &lt;span class="math"&gt;\(4\)&lt;/span&gt; and an argument of &lt;span class="math"&gt;\(120^\circ\)&lt;/span&gt;, it represents a transformation that consists of stretching any other vector to 4 times its length, then rotating it counterclockwise by &lt;span class="math"&gt;\(120^\circ\)&lt;/span&gt;.  This is illustrated in the left picture below. This picture is the same as the picture above, but we mark the angles explicitly.  Notice that the dashed red angle, which is the angle that we rotate &lt;span class="math"&gt;\(z\)&lt;/span&gt; by to obtain the direction of &lt;span class="math"&gt;\(zw\)&lt;/span&gt;, is the same as the blue angle, the argument of &lt;span class="math"&gt;\(w\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Complex Multiplication as Rotation and Stretching " src="http://www.josephthurman.com/vectormultiplication2.png"&gt;
&lt;em&gt;Complex multiplication as a transformation of the plane&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Of course, we could just as well consider the product &lt;span class="math"&gt;\(zw\)&lt;/span&gt; as changing the vector &lt;span class="math"&gt;\(w\)&lt;/span&gt; by the transformation represented by &lt;span class="math"&gt;\(z\)&lt;/span&gt;.  As the modulus of &lt;span class="math"&gt;\(z\)&lt;/span&gt; is 2 and its argument is &lt;span class="math"&gt;\(-30^\circ\)&lt;/span&gt;, this transformation consists of stretching by 2 and then rotating clockwise by &lt;span class="math"&gt;\(30^\circ\)&lt;/span&gt;.  This is illustrated in the right picture above, where we see that the blue dashed angle that we must rotate &lt;span class="math"&gt;\(w\)&lt;/span&gt; by to obtain the direction of &lt;span class="math"&gt;\(zw\)&lt;/span&gt; has the same measure as the red angle, the argument of &lt;span class="math"&gt;\(z\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;It's worth it to use this interpretation of complex numbers as transformations of the plane to think about the complex number &lt;span class="math"&gt;\(i\)&lt;/span&gt; again.  Under this interpretation, the complex number &lt;span class="math"&gt;\(i\)&lt;/span&gt; corresponds to rotating the plane counterclockwise by &lt;span class="math"&gt;\(90^\circ\)&lt;/span&gt;. This means that the number &lt;span class="math"&gt;\(i^2\)&lt;/span&gt; corresponds to rotation by &lt;span class="math"&gt;\(90^\circ\)&lt;/span&gt;, followed by rotation by &lt;span class="math"&gt;\(90^\circ\)&lt;/span&gt;, that is, rotation by &lt;span class="math"&gt;\(180^\circ\)&lt;/span&gt;. Of course, if you take the real axis and rotate it &lt;span class="math"&gt;\(180^\circ\)&lt;/span&gt;, the effect will be that every number will move to its opposite , e.g., 2 will move to &lt;span class="math"&gt;\(-2\)&lt;/span&gt; and &lt;span class="math"&gt;\(-4\)&lt;/span&gt; will move to 4. This transformation is the same as multiplying every real number by &lt;span class="math"&gt;\(-1\)&lt;/span&gt;. Therefore the algebraic expression &lt;span class="math"&gt;\(i^2 = -1\)&lt;/span&gt;, which before maybe seemed a little strange (how can the square of something be negative?) makes sense when considered geometrically.&lt;/p&gt;
&lt;h3&gt;Euler's Formula&lt;/h3&gt;
&lt;p&gt;This post is already a little long, and we've already explained the most important point for our future work, but it would be mathematical malpractice for me to discuss the multiplication of complex numbers without discussing "Euler's identity," which is considered by many to be one of the most beautiful equations in all of mathematics. Euler's identity is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
e^{i \pi} + 1 = 0.
\end{equation*}&lt;/div&gt;
&lt;p&gt;
This equation is famous for giving a simple relationship between 5 of the most important numbers in mathematics: Euler's number &lt;span class="math"&gt;\(e\)&lt;/span&gt;, the circle constant &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;, the imaginary unit &lt;span class="math"&gt;\(i\)&lt;/span&gt;, the additive identity &lt;span class="math"&gt;\(0\)&lt;/span&gt;, and the multiplicative identity &lt;span class="math"&gt;\(1\)&lt;/span&gt;. (The equation could be more succinctly written as &lt;span class="math"&gt;\(e^{i \pi } = -1\)&lt;/span&gt;, but we cheat a little bit to be able to consider &lt;span class="math"&gt;\(0\)&lt;/span&gt; and &lt;span class="math"&gt;\(1\)&lt;/span&gt;.)&lt;/p&gt;
&lt;p&gt;This identity is actually a special case of a more general formula called Euler's formula.  Given a real number &lt;span class="math"&gt;\(\theta\)&lt;/span&gt;, which we interpret as an angle measured in radians, we have that
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
e^{i \theta} = \cos \theta + i \sin \theta
\end{equation*}&lt;/div&gt;
&lt;p&gt;
If we use this formula with the specific value of &lt;span class="math"&gt;\(\theta = \pi\)&lt;/span&gt;, we obtain the special identity above.&lt;/p&gt;
&lt;p&gt;Right now, we basically have to take this formula as a definition of what &lt;span class="math"&gt;\(e^{i\theta}\)&lt;/span&gt; means, so that &lt;span class="math"&gt;\(e^{i\theta}\)&lt;/span&gt; is a different way to write the complex number with modulus 1 and argument &lt;span class="math"&gt;\(\theta\)&lt;/span&gt;.  Using the interpretation we developed in the previous section, this means that &lt;span class="math"&gt;\(e^{i\theta}\)&lt;/span&gt; is another way to represent the transformation of counterclockwise rotation by an angle of &lt;span class="math"&gt;\(\theta\)&lt;/span&gt;.  This formula also gives us another way to write complex numbers in polar form - a complex number with modulus &lt;span class="math"&gt;\(r\)&lt;/span&gt; and argument &lt;span class="math"&gt;\(\theta\)&lt;/span&gt; is can be written succinctly as &lt;span class="math"&gt;\(z = re^{i\theta}\)&lt;/span&gt;.  In this notation, the process of multiplication of complex numbers matches with the rules of multiplying expressions with exponents
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
(r_1 e^{i\theta_1})(r_2 e^{i\theta_2}) = r_1 r_2 e^{i(\theta_1 + \theta_2)}
\end{equation*}&lt;/div&gt;
&lt;p&gt;Described in this way, this formula perhaps doesn't seem very special - it's basically just a notational convenience.  Truly understanding why this formula is correct and interesting requires calculus, and we won't get into that in this post.  But as a first step down that path, the reader who remembers what a &lt;a href="https://en.wikipedia.org/wiki/Taylor_series#List_of_Maclaurin_series_of_some_common_functions"&gt;Maclaurin series expansion&lt;/a&gt; is encouraged to consider the Maclaurin series for &lt;span class="math"&gt;\(e^{x}\)&lt;/span&gt; with &lt;span class="math"&gt;\(x\)&lt;/span&gt; replaced with &lt;span class="math"&gt;\(i \theta\)&lt;/span&gt; and compare the resulting expression to the Maclaurin series for &lt;span class="math"&gt;\(\cos\theta, \sin\theta\)&lt;/span&gt;.&lt;/p&gt;
&lt;h3&gt;Summary, and on to the Quaternions&lt;/h3&gt;
&lt;p&gt;This post marks the end of our consideration of complex numbers, at least for now.  It's therefore helpful to summarize what we've discussed so far:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Complex numbers are numbers of the form &lt;span class="math"&gt;\(a +bi\)&lt;/span&gt;, where &lt;span class="math"&gt;\(i^2 = -1\)&lt;/span&gt;.  Algebraically, they are interesting because they allow us to solve polynomial equations that don't have any real number solutions, like &lt;span class="math"&gt;\(x^2 + 1 = 0\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Geometrically, complex numbers can be visualized as points or vectors in the two-dimensional plane, with their real part &lt;span class="math"&gt;\(a\)&lt;/span&gt; plotted along the horizontal axis and their imaginary part &lt;span class="math"&gt;\(b\)&lt;/span&gt; plotted along the vertical axis.  They can also be described using polar coordinates, in which case the distance from the origin is called the modulus and the angle with the positive real axis is called the argument.&lt;/li&gt;
&lt;li&gt;Complex addition, when interpreted geometrically, is vector addition. Translate one vector to the tip of the other, and the sum vector is obtained by drawing an arrow from the base of the second to the tip of the first.&lt;/li&gt;
&lt;li&gt;Complex multiplication, interpreted geometrically, is a transformation that consists of taking the vector associated to one of the complex numbers and then stretching and rotating it using the modulus and argument of the other complex number.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So what's next? Complex numbers give a compact way to describe geometric transformations in two dimensions, which leads to the question: what about three dimensions? Is there a way to define a multiplication operation of three-dimensional objects or vectors that has a natural geometrical interpretation? Can rotations in three dimensions be described neatly in such a way? The answer is yes, and this is done using the quaternions we've already discussed.  In the next series of posts, we'll begin to understand more about vector geometry in three dimensions and how quaternions can be used to describe this geometry.  &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="thesis"></category><category term="quaternions"></category><category term="complex numbers"></category></entry><entry><title>Implementing the Binomial Option Pricing Model</title><link href="http://www.josephthurman.com/binomial3.html" rel="alternate"></link><published>2018-03-15T14:00:00-04:00</published><updated>2018-03-15T14:00:00-04:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-03-15:/binomial3.html</id><summary type="html">&lt;p&gt;In the &lt;a href="http://www.josephthurman.com/binomial1.html"&gt;previous&lt;/a&gt; &lt;a href="http://www.josephthurman.com/binomial2.html"&gt;posts&lt;/a&gt; in this series, we've described a model for stock price movements that can be used to find prices of simple European call and put options.  The model works by dividing the life of the option into some number of discrete intervals, and assuming that the stock â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the &lt;a href="http://www.josephthurman.com/binomial1.html"&gt;previous&lt;/a&gt; &lt;a href="http://www.josephthurman.com/binomial2.html"&gt;posts&lt;/a&gt; in this series, we've described a model for stock price movements that can be used to find prices of simple European call and put options.  The model works by dividing the life of the option into some number of discrete intervals, and assuming that the stock price randomly moves either up or down by a fixed percentage over each short interval.  This gives a tree of possible prices for the stock, and the option's value at each node in this tree can be computed as a discounted expected value of the future value of the option at later nodes in the tree, where the expected value is computed using risk-neutral probability and the discount factor is determined by the risk-free interest rate.  &lt;/p&gt;
&lt;p&gt;In those previous posts, we computed prices given by this model in very simple cases, with only one or two steps. For the model to be effective, a larger number of steps will be required, and so it will no longer be feasible to compute by hand as we've done before.  In this post, we'll see how to implement the model in Python, consider a better way for choosing the parameters &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; in the model, and then discuss the rate of convergence of the algorithm&lt;/p&gt;
&lt;h3&gt;The First Implementation&lt;/h3&gt;
&lt;p&gt;We begin by giving a first, direct implementation of the model to compute the price of a call option.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;first_binomial_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The notation in this implementation is essentially identical to the notation we used to describe the model in the previous post. We use all of the same symbols to denote the parameters in the model, except we write &lt;code&gt;dt&lt;/code&gt; instead of &lt;span class="math"&gt;\(\Delta t\)&lt;/span&gt; for the length of the time interval of each step.  We use a dictionary to store the values of the option at each node, and use the same notation for the keys of the dictionary, that is, &lt;code&gt;C[(k,m)]&lt;/code&gt; above is the same as the value &lt;span class="math"&gt;\(C(k,m)\)&lt;/span&gt; in the previous post, meaning the value of the option at the node that is &lt;span class="math"&gt;\(k\)&lt;/span&gt; steps into the tree, with &lt;span class="math"&gt;\(m\)&lt;/span&gt; of those steps being up movements in the stock.  &lt;/p&gt;
&lt;p&gt;The implementation above proceeds by computing the value of the time step &lt;code&gt;dt&lt;/code&gt; and finding the risk-neutral probability &lt;code&gt;p&lt;/code&gt;. The first loop then finds the value of the option at the end of the tree, using the normal payoff of a call option (the stock price minus the strike price if that is positive, and otherwise 0).  The next pair of nested loops then works backward through the tree to iteratively fill in the value of the option at every node. The value at the root node is returned as the price of the option today.&lt;/p&gt;
&lt;p&gt;We can do a very simple check of our implementation to make sure that it can reproduce the computation that we've already done by hand.  In the first post in this series, we priced a call option on a stock that is worth &amp;dollar;100 today and is assumed to be worth either &amp;dollar;120 or &amp;dollar;80 in three months time.  We ignored interest rates in that model and only used one step.  If the strike price on the option is &amp;dollar;100, then our implementation of the model gives that the price is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;first_binomial_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;10.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;the same price we computed before by hand.  At least our implementation appears correct in this simple case!&lt;/p&gt;
&lt;p&gt;Now that we have a computer to do the work for us, we can run the model with many more steps, that is, we can increase the value of &lt;span class="math"&gt;\(N\)&lt;/span&gt; to find a better price for the option.  There is one subtlety with our implementation, though, that makes this difficult. To understand the problem, we can see what happens as we increase the number of steps.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;With N = {:3d}, the price is {:.2f}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;first_binomial_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;With N =   1, the price is 10.00
With N =  10, the price is 25.62
With N = 100, the price is 68.55
With N = 200, the price is 84.56
With N = 300, the price is 91.90
With N = 400, the price is 95.61
With N = 500, the price is 97.58
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As the number of steps increases, the price is going up, and quite drastically, to approach the current value of the stock.  This doesn't make sense - the price of the option should not be the same as the price of the stock. What's going on here?&lt;/p&gt;
&lt;p&gt;The problem concerns our choice of &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; - these values represent the change in price of the stock option over each small time interval. As such, the value of &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; depend implicitly on the length of that time interval.  Therefore if we increase the number steps in the model, thus decreasing the length of each interval, but leave &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; constant, we're actually changing the total amount we're allowing the stock price to move.  In our specific example, with one step we have that the final value of the stock is either &lt;span class="math"&gt;\(Su = 100 (1.2) = 120\)&lt;/span&gt; or &lt;span class="math"&gt;\(Sd = 100(0.8) = 80\)&lt;/span&gt;, that is, the stock price can move by 20% every three months. If we increase &lt;span class="math"&gt;\(N\)&lt;/span&gt; to 3 without changing &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt;, then we have that stock price can change by 20% every month, and the final values of the stock can range between &lt;span class="math"&gt;\(Su^3 = 100(1.2)^3 = 172.80\)&lt;/span&gt; and &lt;span class="math"&gt;\(Sd^3 = 100(0.8)^3 = 51.20\)&lt;/span&gt;, which is a very different range.  Therefore, as we change &lt;span class="math"&gt;\(N\)&lt;/span&gt;, we need to modify &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; as well to keep our predictions about the future movement of the stock price consistent. This leads us to consider how best to determine the value of &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; in our model.&lt;/p&gt;
&lt;h3&gt;Choosing &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt;: Volatility&lt;/h3&gt;
&lt;p&gt;Our values of &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; represent the possible return on the stock over a short period of time.  As such, a large value of &lt;span class="math"&gt;\(u\)&lt;/span&gt; (or a small value of &lt;span class="math"&gt;\(d\)&lt;/span&gt;) means that the price of the stock could change drastically over a short period of time.  A stock price that changes drastically over a period of time is called &lt;em&gt;volatile&lt;/em&gt;, and so &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; in some sense describe the &lt;em&gt;volatility&lt;/em&gt; of the stock. It's really the volatility that we'd like to have as the parameter in the model. That is, instead of choosing &lt;span class="math"&gt;\(u, d\)&lt;/span&gt; as independent parameters in our model, as we've done so far, we're going to compute &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; from the values of &lt;span class="math"&gt;\(T\)&lt;/span&gt; and &lt;span class="math"&gt;\(N\)&lt;/span&gt; along with a third number that measures volatility. This will solve the problem we have above by making explicit the dependence of &lt;span class="math"&gt;\(u, d\)&lt;/span&gt; on the variable &lt;span class="math"&gt;\(dt\)&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;Volatility, in this setting, is really just another word for risk.  If a stock price was not volatile, that would mean it didn't move, or moved absolutely predictably, and would not be risky.  A more volatile stock, that is, one that can change wildly in price, is clearly more risky than an asset with a price that can only change by a small amount.&lt;/p&gt;
&lt;p&gt;There's already a mathematical way to describe volatility or riskiness, called &lt;em&gt;standard deviation&lt;/em&gt;.  If &lt;span class="math"&gt;\(X\)&lt;/span&gt; is a random variable, with expected value &lt;span class="math"&gt;\(E(X)\)&lt;/span&gt;, also called the mean and denoted by &lt;span class="math"&gt;\(\mu\)&lt;/span&gt;, then the &lt;em&gt;variance&lt;/em&gt;, denoted by &lt;span class="math"&gt;\(\sigma^2\)&lt;/span&gt;, is defined to be &lt;span class="math"&gt;\(\sigma^2 = E((X-\mu)^2)\)&lt;/span&gt;, that is, the variance is the expected value of the square of the difference between an observed value of the random variable and the mean. The standard deviation, &lt;span class="math"&gt;\(\sigma\)&lt;/span&gt;, is the square root of the variance - knowing one determines the other.  If a random variable has a large standard deviation, that means that a wider range of values around the mean are likely, while a small standard deviation means that the variable is more likely to be observed to be close to its mean. Put another way, if we tried to guess the value of the random variable by guessing the mean, then the standard deviation gives a way to measure the likely error of such a guess.&lt;/p&gt;
&lt;p&gt;In our model, we will assume that the return on the price of the stock underlying the option is a random variable with a fixed variance of &lt;span class="math"&gt;\(\sigma^2\)&lt;/span&gt;.  This variance will be independent of time in the sense that, if &lt;span class="math"&gt;\(S\)&lt;/span&gt; is the price of the stock today and &lt;span class="math"&gt;\(S^\prime\)&lt;/span&gt; denotes the stock price after &lt;span class="math"&gt;\(\Delta t\)&lt;/span&gt; units of time, considered as a random variable, then we will assume that the variance of the random variable &lt;span class="math"&gt;\(\frac{S^\prime - S}{S}\)&lt;/span&gt;, the return on the stock, will be &lt;span class="math"&gt;\(\sigma^2 \Delta t\)&lt;/span&gt;.  For example, if we measure time in years, then choosing &lt;span class="math"&gt;\(\sigma = 0.2\)&lt;/span&gt; would say that the standard deviation in the returns on the stock is assumed to be 20% over the year, or &lt;span class="math"&gt;\(0.2(\sqrt{0.5}) = 14.1\%\)&lt;/span&gt; over 6 months, etc. (For the reader familiar with statistics, we're ultimately assuming that the returns on the stock price over a time period of &lt;span class="math"&gt;\(\Delta t\)&lt;/span&gt; are normally distributed with variance &lt;span class="math"&gt;\(\sigma^2 \Delta t\)&lt;/span&gt;. The mean of the normal this distribution is chosen so that the expected value of the stock at any particular time grows according to the risk-free rate - this is essentially done using our formula for &lt;span class="math"&gt;\(p\)&lt;/span&gt;, the risk-neutral probability, and so we won't worry about it here.)&lt;/p&gt;
&lt;p&gt;Based on this value of &lt;span class="math"&gt;\(\sigma^2\)&lt;/span&gt;, we'll choose &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; as follows:
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align*}
    u &amp;amp;= e^{\sigma \sqrt{\Delta T}} \\
    d &amp;amp;= \frac{1}{u}
\end{align*}&lt;/div&gt;
&lt;p&gt;A full explanation of why we make these choices will have to wait for a later post.  The short answer is that these choices mean that our model will be a good approximation for a popular model of stock prices called &lt;em&gt;geometric Brownian motion&lt;/em&gt;. For now, we'll just make use of this choice and make note of a two properties of our choices.  First, the larger &lt;span class="math"&gt;\(\sigma\)&lt;/span&gt; is, the larger &lt;span class="math"&gt;\(u\)&lt;/span&gt; is, hence the smaller &lt;span class="math"&gt;\(d\)&lt;/span&gt; is, and therefore the greater the spread of values in our model, matching with the intuition we developed earlier.  Second, the fact that &lt;span class="math"&gt;\(ud = 1\)&lt;/span&gt; will allow us to simplify some computations.&lt;/p&gt;
&lt;h3&gt;The Final Model&lt;/h3&gt;
&lt;p&gt;With this method for choosing &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; in our model, we can make an easy modification to the first implementation above to give the following model.  Note that the parameters &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt; have been replaced with &lt;code&gt;vol&lt;/code&gt;, the volatitlity of the stock. We use &lt;code&gt;vol&lt;/code&gt; in our code instead of the Greek letter &lt;span class="math"&gt;\(\sigma\)&lt;/span&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;binomial_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vol&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Implements the binomial option pricing model to price a European call option on a stock&lt;/span&gt;
&lt;span class="sd"&gt;    S - stock price today&lt;/span&gt;
&lt;span class="sd"&gt;    K - strike price of the option&lt;/span&gt;
&lt;span class="sd"&gt;    T - time until expiry of the option&lt;/span&gt;
&lt;span class="sd"&gt;    r - risk-free interest rate&lt;/span&gt;
&lt;span class="sd"&gt;    vol - the volatility of the stock&lt;/span&gt;
&lt;span class="sd"&gt;    N - number of steps in the model&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
    &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are only two changes here from the implementation above. First, our model now computes &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;d&lt;/code&gt; from &lt;code&gt;vol&lt;/code&gt;. Second, we used the fact that &lt;span class="math"&gt;\(d = 1/u = u^{-1}\)&lt;/span&gt; to write
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
S u^m d^{N-m} = S u^m (u^{-1})^{N-m} = S u^m u^{m-N} = S u^{2m - N},
\end{equation*}&lt;/div&gt;
&lt;p&gt;
simplifying our computation of the final price of the stock.&lt;/p&gt;
&lt;p&gt;Let's see how this implementation performs with the previous example we computed by hand. We won't be able to exactly replicate that example, since before we had chosen &lt;span class="math"&gt;\(u = 1.2\)&lt;/span&gt; and &lt;span class="math"&gt;\(d = 0.8\)&lt;/span&gt;, and therefore we don't have that &lt;span class="math"&gt;\(ud = 1\)&lt;/span&gt;. Instead, we'll choose the volatility to match &lt;span class="math"&gt;\(u\)&lt;/span&gt;, which we can see is done by choosing &lt;code&gt;vol&lt;/code&gt; &lt;span class="math"&gt;\(= \log(1.2)\)&lt;/span&gt;. Then, finding prices for various values of &lt;span class="math"&gt;\(N\)&lt;/span&gt;, we have:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;With {:3d} steps, the price is {:.2f}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;binomial_call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;With   1 steps, the price is 9.09
With   2 steps, the price is 6.44
With  10 steps, the price is 7.08
With 100 steps, the price is 7.25
With 200 steps, the price is 7.25
With 300 steps, the price is 7.26
With 400 steps, the price is 7.26
With 500 steps, the price is 7.26
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We've fixed the issue from before - now, the values of &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; are recomputed as we change &lt;span class="math"&gt;\(N\)&lt;/span&gt;.  As &lt;span class="math"&gt;\(N\)&lt;/span&gt; increases, we see that the price given by the model converges fairly quickly to the value of &amp;dollar;7.26, which we will take to be a fair price for the option.&lt;/p&gt;
&lt;h3&gt;Analyzing the Performance&lt;/h3&gt;
&lt;p&gt;To end this post, we'd like to understand how well our algorithm performs, and specifically how quickly it converges on a particular value. That is, we've seen that increasing &lt;span class="math"&gt;\(N\)&lt;/span&gt; increases the accuracy of the price, so how large does &lt;span class="math"&gt;\(N\)&lt;/span&gt; need to be to ensure that we've found a good price? If getting an accurate price requires using millions of steps and therefore requires a long computation time, the algorithm will be useless. Another difficulty is that this question of the rate of convergence assumes that the algorithm does in fact actually converge to some value. Put mathematically, if we fix all of the parameters in our model except &lt;span class="math"&gt;\(N\)&lt;/span&gt; and let &lt;span class="math"&gt;\(f(N)\)&lt;/span&gt; denote the output of the algorithm for a particular number of steps, does &lt;span class="math"&gt;\(\displaystyle\lim_{N \rightarrow \infty} f(N)\)&lt;/span&gt; exist?&lt;/p&gt;
&lt;p&gt;The answer, in this particular case, is yes. If fact, with some more sophisticated mathematics one can show that this limit always exists, and that in fact there is a relatively simple formula that allows us to compute the value of any European call (or put) option from the parameters &lt;span class="math"&gt;\(S, K, T, r,\)&lt;/span&gt; and &lt;span class="math"&gt;\(\sigma\)&lt;/span&gt;.  This formula is known as the &lt;a href="https://en.wikipedia.org/wiki/Blackâ€“Scholes_model#Blackâ€“Scholes_formula"&gt;Black-Scholes formula&lt;/a&gt;. We won't give the exact formula in this post, but it's simple enough that it can be computed essentially instantaneously by a computer, while our model will take a perhaps a second or two to run with &lt;span class="math"&gt;\(N = 1000\)&lt;/span&gt; steps on a basic laptop.&lt;/p&gt;
&lt;p&gt;So why have we done all of this work with the binomial model when there's an arguably simpler and faster formula for the option price? There are two main reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;This binomial model is one method to derive the Black-Scholes formula. As stated above, the Black-Scholes formula is essentially the limit of our our model as &lt;span class="math"&gt;\(N \rightarrow \infty\)&lt;/span&gt;. This isn't the original way that this formula was derived, but this method requires less advanced mathematics than other methods. The derivation through the binomial method uses no math more difficult than standard probability theory, while other methods involve more difficult techniques like stochastic calculus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The binomial model can be used in situations where a simple "limit" formula doesn't exist.  For example, we've so far only dealt with European options, which can only be exercised at one particular time.  By contrast, &lt;em&gt;American&lt;/em&gt; options give the right to exercise the option at &lt;em&gt;any&lt;/em&gt; time before expiry, and the possiblity of early exercise makes them more difficult to price.  Depending on the exact nature of the American option, it is not always possible to find a Black-Scholes style formula, and the only way to price the option is using a numerical approximation like our binomial model.  We'll explore this more in the next post.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, even though we have a quick formula to give us the "correct" answer, it's instructive to see how well our binomial method works to find that answer.  In particular, how large does &lt;span class="math"&gt;\(N\)&lt;/span&gt; need to be in order for the model price to match the Black-Scholes price?  &lt;/p&gt;
&lt;p&gt;We investigate this in the chart below. In the chart, we use our model to find a price for a European call option with &lt;span class="math"&gt;\(S = 100\)&lt;/span&gt;, &lt;span class="math"&gt;\(K = 120\)&lt;/span&gt;, &lt;span class="math"&gt;\(T = 1\)&lt;/span&gt;  year, &lt;span class="math"&gt;\(r = 1\%\)&lt;/span&gt;, and &lt;span class="math"&gt;\(\sigma = 0.2\)&lt;/span&gt;. These values were chosen arbitrarily.  The number of steps used in the model is on the &lt;span class="math"&gt;\(x\)&lt;/span&gt;-axis.  The price is plotted on the &lt;span class="math"&gt;\(y\)&lt;/span&gt;-axis.  The red horizontal line is the price for the option given by the Black-Scholes formula - in this case, &amp;dollar;2.34. The dotted horizontal lines are at 2.335 and 2.345, so that any value between those lines would agree with the Black-Scholes price to the nearest cent.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Convergence of the Binomial Model" src="http://www.josephthurman.com/binomialconvergence.png"&gt;&lt;/p&gt;
&lt;p&gt;We can see that, in this particular case, our model converges fairly quickly - it only takes around 200 steps for the model price to be accurate within rounding error.  Note that our option has an expiration time of 1 year, and there are roughly 250 trading days in a year, so our model is fairly accurate if we take the step size to be about one trading day.&lt;/p&gt;
&lt;h3&gt;Next time - Beyond European Calls&lt;/h3&gt;
&lt;p&gt;We now have a workable model to give prices for European call options on stocks, and a straightforward and fairly efficient implementation of the model in Python.  Next time, we'll finish our discussion of this method by seeing how to modify our implementation to find prices for other type of options, including the American options discussed above.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="finance"></category><category term="binomial-model"></category><category term="python"></category></entry><entry><title>Vectors and the Complex Numbers</title><link href="http://www.josephthurman.com/geometryofcomplexnumbers1.html" rel="alternate"></link><published>2018-03-14T18:30:00-04:00</published><updated>2018-03-14T18:30:00-04:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-03-14:/geometryofcomplexnumbers1.html</id><summary type="html">&lt;p&gt;In the &lt;a href="http://www.josephthurman.com/quaternions2.html"&gt;previous post&lt;/a&gt;, we first encountered the quaternions, giving an essentially algebraic definition by defining a quaternion as a set of four real numbers and defining operations to add, subtract, multiply, and divide these quadruplets.  But my thesis work is in geometry, not algebra, and so it still remains â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the &lt;a href="http://www.josephthurman.com/quaternions2.html"&gt;previous post&lt;/a&gt;, we first encountered the quaternions, giving an essentially algebraic definition by defining a quaternion as a set of four real numbers and defining operations to add, subtract, multiply, and divide these quadruplets.  But my thesis work is in geometry, not algebra, and so it still remains to understand why the quaternions are interesting from a geometric perspective.  Uncovering the geometry associated to the quaternions will be the goal of the next few posts in this series.&lt;/p&gt;
&lt;p&gt;Before considering the geometry of the quaternions, though, it will be helpful to understand the geometry of the complex numbers first.  In the same way that understanding the algebraic properties of the &lt;a href="http://www.josephthurman.com/quaternions1.html"&gt;complex numbers&lt;/a&gt; made it easier to understand the quaternions, we'll see that it will be much easier to understand the quaternions if we understand the simpler, 2-dimensional geometry of the complex numbers.&lt;/p&gt;
&lt;p&gt;In this post, we'll describe the method for understanding complex numbers as geometric objects and consider the interpretation of the addition of complex numbers in this setting. In our next post, we'll extend these insights to understand the geometrical significance of complex multiplication.  &lt;/p&gt;
&lt;h3&gt;Complex Numbers as 2-Dimensional Vectors&lt;/h3&gt;
&lt;p&gt;Recall from that earlier post that the set of complex numbers &lt;span class="math"&gt;\(\mathbb{C}\)&lt;/span&gt; is the set of numbers of the form &lt;span class="math"&gt;\(z = a + bi\)&lt;/span&gt;, where &lt;span class="math"&gt;\(a, b\)&lt;/span&gt; are real numbers and &lt;span class="math"&gt;\(i^2 = -1\)&lt;/span&gt; is the imaginary unit.  In that post we also gave methods to add, subtract, multiply, and divide complex numbers, that is, we described the algebraic properties of the complex numbers.  To understand the geometric properties of the complex numbers, we need a way to picture them.  &lt;/p&gt;
&lt;p&gt;We already have a geometric understanding of the real numbers, as the set of points along a number line.  Since complex numbers consist of a pair of real numbers, we can picture them using a pair of number lines. Putting one of those number lines perpendicular to the other, we have a standard pair of axes that we can use to plot points that represent complex numbers.  This pair of axes is just like the usual Cartesian coordinate system, or &lt;span class="math"&gt;\(xy\)&lt;/span&gt;-plane, that is used for graphing functions. In this context, though, we consider the horizontal axis to be the &lt;em&gt;real&lt;/em&gt; axis, where we plot the value of the real part (denoted by &lt;span class="math"&gt;\(a\)&lt;/span&gt; above) of the complex number, and the vertical axis is the &lt;em&gt;imaginary&lt;/em&gt; axis, where we plot the value of the imaginary part (denoted by &lt;span class="math"&gt;\(b\)&lt;/span&gt;).  This is illustrated below, where we show the 2-dimensional plane representing the complex numbers and plot a variety of points on that plane.&lt;/p&gt;
&lt;p&gt;&lt;img alt="The Complex Plane" src="http://www.josephthurman.com/complexplane.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Complex Plane&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Instead of just considering complex numbers as points, we can also consider them as &lt;em&gt;vectors&lt;/em&gt;. Geometrically, this means that we can think of a complex number &lt;span class="math"&gt;\(z = a+bi\)&lt;/span&gt; as not a point but an arrow, beginning at the origin of the plane (the point &lt;span class="math"&gt;\((0,0)\)&lt;/span&gt;, or the complex number &lt;span class="math"&gt;\(0 + 0i\)&lt;/span&gt;, where the two axes intersect) and extending to the point &lt;span class="math"&gt;\(a+bi\)&lt;/span&gt;.  Illustrating this with the same points we plotted above gives the following plot.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Vectors in the Complex Plane" src="http://www.josephthurman.com/complexvectors.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Vectors in the Complex Plane&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;One way to think about vectors is to consider how they are used in physics, where there is a distinction made between &lt;em&gt;scalar&lt;/em&gt; quantities and &lt;em&gt;vector&lt;/em&gt; quantities.  Scalar quantities are those that can be specified with a single number, like mass or temperature.  Vector quantities, on the other hand, require multiple numbers, often interpreted as a &lt;em&gt;magnitude&lt;/em&gt; and &lt;em&gt;direction&lt;/em&gt;. For example, velocity is a vector quantity, because it consists of both a magnitude, which is called speed (e.g., 60 miles per hour) and a direction of movement (e.g., due north). A velocity (in two dimensions) could be pictured as an arrow in the plane, as above, where one imagines the moving object at the center of the plane, with the arrow pointing in its direction of movement and the length of the arrow corresponding to speed (longer being faster).&lt;/p&gt;
&lt;h3&gt;Vector Addition&lt;/h3&gt;
&lt;p&gt;Another example of a vector quantity is change in position, which in physics is called &lt;em&gt;displacement&lt;/em&gt;. If a person begins at one location, and after some amount of time ends up in a different location, then we can describe their movement by two numbers, the magnitude of the distance between the locations (e.g., 5 miles) and the direction that they traveled (south east, perhaps).  &lt;/p&gt;
&lt;p&gt;This leads to a natural problem - how to combine changes in position? For example, a person could begin at home, then travel 5 miles southeast to go to school, and then travel 2 miles northeast to go to work. What is their final location relative to their starting position, that is, relative to home? Put another way, if they wanted to travel directly to work, how far should they travel and in what direction?&lt;/p&gt;
&lt;p&gt;We can find the answer fairly easily by plotting the various locations. We can draw a standard 2-dimensional coordinate system, and place the "home" location at the origin.  We can then draw an arrow depicting the change in position from home to school, shown in red in the picture below, and likewise for the change from school to work, shown in blue below.  We can then draw an arrow from the origin to the head of the blue arrow, and this arrow represents the change in position to go directly from home to work.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Vector Addition for Changing Locations" src="http://www.josephthurman.com/vectoraddition1.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Vector Addition for Changing Locations&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;With a little computation involving some trigonometry (that will be discussed more in depth in the next post) the black vector has a magnitude of &lt;span class="math"&gt;\(\sqrt{29} \approx 5.4\)&lt;/span&gt; and the direction, as a compass heading (with north as &lt;span class="math"&gt;\(0^\circ\)&lt;/span&gt;, east as &lt;span class="math"&gt;\(90^\circ\)&lt;/span&gt;, etc), is about &lt;span class="math"&gt;\(113^\circ\)&lt;/span&gt;, or roughly east-southeast.&lt;/p&gt;
&lt;p&gt;The blue arrow as drawn above represents a change in position from school to work.  However, the starting point isn't really important when one considers change in position - all that really matters is that the blue arrow really represents a change in location of traveling 2 miles to the north-east. In fact, all of the above discussion doesn't really have anything to do with the particular starting point - if you start at one spot, then move southeast 5 miles, then move northeast two miles, you'll always end up in the position relative to the starting point of about 5.4 miles away, roughly east-southeast.  &lt;/p&gt;
&lt;p&gt;This is important because when we consider vectors from an abstract mathematical perspective, we always draw them as starting from the origin. Thus, instead of drawing the blue arrow as beginning from the end of the red arrow, we'll draw it as beginning at the origin if we want to consider it as an abstract vector.  &lt;/p&gt;
&lt;p&gt;In fact, we can restate the entire problem in terms of abstract vectors, without thinking of them as related to any particular location. Let &lt;span class="math"&gt;\(v\)&lt;/span&gt; denote the red vector, as it was drawn above, and let &lt;span class="math"&gt;\(w\)&lt;/span&gt; denote the blue vector, which we will now draw as starting from the origin. Then the black vector is called the vector sum &lt;span class="math"&gt;\(v+w\)&lt;/span&gt;.  This is illustrated below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Abstract Vector Addition" src="http://www.josephthurman.com/vectoraddition2.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Abstract Vector Addition&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This image gives us the rule to add vectors abstractly, which is called the parallelogram rule.  To add vectors, we can draw from the end of the first vector an arrow that has the same length and direction as the second.  The sum vector is then the vector that joins the base of the first arrow to the head of the second. There are two ways to do this, depending on which vector you start with, though both choices give the same result. Note that the two vectors determine a parallelogram, and the sum vector is the diagonal of that parallelogram, hence the name of the rule. In this picture the dotted arrows shown do not represent vectors, since they do not begin at the origin.&lt;/p&gt;
&lt;h3&gt;Addition of Complex Numbers is Vector Addition&lt;/h3&gt;
&lt;p&gt;As we saw above, we can consider complex numbers as vectors, and so vector addition gives us a second way to add complex numbers - we can add them either as complex numbers with the addition procedure defined in the earlier post, or as vectors.  The important point is that both operations are actually the same. Let's illustrate this with an example.  &lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(z = 3+ 2i\)&lt;/span&gt;, and &lt;span class="math"&gt;\(w = -2 + i\)&lt;/span&gt;.  Using the rule for the addition of complex numbers, we have that the sum is &lt;span class="math"&gt;\(z + w = 1 + 3i\)&lt;/span&gt;.  If we consider &lt;span class="math"&gt;\(z, w\)&lt;/span&gt;, and &lt;span class="math"&gt;\(z + w\)&lt;/span&gt; as vectors, we have the following picture.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Vector Addition of Complex Numbers" src="http://www.josephthurman.com/vectoraddition3.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Vector Addition of Complex Numbers&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In this particular example, we see that vector addition and complex addition give the same result.  Although we won't formally prove it here, it's not hard to see that this is true for any pair of complex numbers. Thus, if we use our geometrical interpretation of concept number as vectors, we have a geometrical interpretation of the process of addition. Conversely, we could take any problem involving two-dimensional vectors, like the change in position problem above, and restate it in terms of complex numbers.  &lt;/p&gt;
&lt;h3&gt;Next Time - The Geometrical Significance of Multiplication&lt;/h3&gt;
&lt;p&gt;None of this, however, really makes use of the special properties of complex numbers, and complex numbers aren't necessary to understand vectors in two dimensions.  In fact, many people learn about vectors in a high-school physics without ever learning about complex numbers. All of the above work would be no different if we just considered vectors as pairs of numbers &lt;span class="math"&gt;\((a,b)\)&lt;/span&gt; instead of as pairs of numbers &lt;span class="math"&gt;\(a + bi\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The truly interesting features of the complex numbers come into play when one considers multiplication, not addition, and make use of the defining fact of complex numbers that &lt;span class="math"&gt;\(i^2 = -1\)&lt;/span&gt;.  In the next post, we'll see how to interpret the multiplication of complex numbers geometrically.  &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="thesis"></category><category term="quaternions"></category><category term="complex numbers"></category></entry><entry><title>The Binomial Options Pricing Model</title><link href="http://www.josephthurman.com/binomial2.html" rel="alternate"></link><published>2018-03-02T14:00:00-05:00</published><updated>2018-03-02T14:00:00-05:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-03-02:/binomial2.html</id><summary type="html">&lt;p&gt;In the &lt;a href="http://www.josephthurman.com/binomial1.html"&gt;previous post&lt;/a&gt; introducing the Binomial Options Pricing Model, we discussed a very simple model for the movement of stock prices. In that model, we assumed that at the end of a certain period of time, the value of a stock could take on one of two possible values â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the &lt;a href="http://www.josephthurman.com/binomial1.html"&gt;previous post&lt;/a&gt; introducing the Binomial Options Pricing Model, we discussed a very simple model for the movement of stock prices. In that model, we assumed that at the end of a certain period of time, the value of a stock could take on one of two possible values.  We then used a variety of arguments, including replication and risk-neutral pricing, to determine a price for a call option on the stock.  &lt;/p&gt;
&lt;p&gt;In this post, we'll see how this model can be improved to predict the movement of stock prices more accurately. We'll also make some simple modifications that allow us to consider some of the complicating factors we ignored in the last post, like interest rates.&lt;/p&gt;
&lt;h3&gt;The Two-Step Model&lt;/h3&gt;
&lt;p&gt;Let's return to the example from the previous post, in which we assumed that a stock worth &amp;dollar;100 today would be worth either &amp;dollar;80 or &amp;dollar;120 in six months' time.  We used this assumption to find a price for a call option on the stock, expiring at the end of the same six-month period with a strike price of &amp;dollar;100.  &lt;/p&gt;
&lt;p&gt;This model essentially assumed that there would be only one movement in the stock price in 6 months, or put another way, that we would only observe the stock price once over the life of the option. What if we looked multiple times?&lt;/p&gt;
&lt;p&gt;In particular, instead of assuming that the stock could either increase or decrease by &amp;dollar;20 over a six-month period, let's assume that the stock can either increase or decrease by &amp;dollar;10 over each three-month period.  There are now four different possibilities for how the stock price can change as over the six-month period - it can either move up twice, move up and then down, move down and then up, or move down twice.  Letting &lt;span class="math"&gt;\(u, d\)&lt;/span&gt; denote up and down movements, respectively, and using &lt;span class="math"&gt;\(S\)&lt;/span&gt; to denote the stock price today, &lt;span class="math"&gt;\(S_{u}\)&lt;/span&gt; to denote the price after an up movement, &lt;span class="math"&gt;\(S_{du}\)&lt;/span&gt; denote the price after a down and then an up movement, etc., we're left with the following tree of possible prices for the stock.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Two-Step Binomial Tree" src="http://www.josephthurman.com/tree1.png"&gt;&lt;/p&gt;
&lt;p&gt;It's important to note that the price after an up movement in the first period followed by a down movement in the second period is the same as the price after a down movement followed by an up movement.  This will simplify the computations, especially when we fully generalize the model to include many intermediate steps.  The order of the up and down movements does not matter, only the total number of up movements and the total number down movements.&lt;/p&gt;
&lt;p&gt;How do we find a price for the option under this new model? The method is to view this larger tree as a collection of smaller one-step models and repeatedly apply the pricing methods we described in the last post.  In particular, we can zoom in on just one part of the tree, the portion consisting of &lt;span class="math"&gt;\(S_u\)&lt;/span&gt; and the branches to &lt;span class="math"&gt;\(S_{uu}\)&lt;/span&gt; and &lt;span class="math"&gt;\(S_{ud}\)&lt;/span&gt;. If the final price is &lt;span class="math"&gt;\(S_{uu} = 120\)&lt;/span&gt;, then the option will be worth &amp;dollar;20, and if the final price is &lt;span class="math"&gt;\(S_{ud} = 100\)&lt;/span&gt;, then the option will be worth &amp;dollar;0.  We can then find the value of the option in three months time, assuming that the stock increased over the first period.  The easiest method for this is to use risk-neutral pricing.  We can compute that the risk-neutral probability in this situation is &lt;span class="math"&gt;\(p = 1/2\)&lt;/span&gt; (just as it was in the last post), and therefore the value of the option at the &lt;span class="math"&gt;\(S_u\)&lt;/span&gt; node of the tree is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
C_u = 20 (1/2) + 0 (1/2) = 10
\end{equation*}&lt;/div&gt;
&lt;p&gt;We can repeat this computation to find the value of the option at the &lt;span class="math"&gt;\(S_d\)&lt;/span&gt; node in the tree, that is, the value of the option in three month's time under the assumption that the stock first moves down.  From an initial value of &lt;span class="math"&gt;\(S_d = 90\)&lt;/span&gt;, the stock price can either move to &lt;span class="math"&gt;\(S_{dd} = 80\)&lt;/span&gt; or &lt;span class="math"&gt;\(S_{du} = 100\)&lt;/span&gt;.  In either case, the option will be worthless in six months (the strike price is 100), and therefore the value of the option at the &lt;span class="math"&gt;\(S_d\)&lt;/span&gt; node is zero.&lt;/p&gt;
&lt;p&gt;Finally, if we know that the values &lt;span class="math"&gt;\(C_u = 10\)&lt;/span&gt; and &lt;span class="math"&gt;\(C_d = 0\)&lt;/span&gt; for the option at the &lt;span class="math"&gt;\(S_u\)&lt;/span&gt; and &lt;span class="math"&gt;\(S_d\)&lt;/span&gt; nodes, then we can work backwards to find the initial value of the option.  The risk-neutral probability will once again be &lt;span class="math"&gt;\(p = 1/2\)&lt;/span&gt;, and so the value of the option today is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
C = 10 \times (1/2) + 0 \times (1/2) = 5
\end{equation*}&lt;/div&gt;
&lt;p&gt;
The tree with the value of the option at the various nodes is shown below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Option Values in Two-Step Binomial Tree" src="http://www.josephthurman.com/tree2.png"&gt;&lt;/p&gt;
&lt;p&gt;This value is different from the value of &amp;dollar;10 we found in the last post, but it's not hard to see why.  In the one-step model, we only had two possible values for the stock price at expiry, one in which the option has value (an up movement) and one in which it does not (a down movement). In the two step model, we have assumed that there are more possible values for the final price of the stock, and the option is worthless for these new possible values.  Thus under the new model there will be fewer opportunities to exercise the option and gain value from it, and so the option is worth less in the new model.&lt;/p&gt;
&lt;p&gt;It's clear from the above example how we could continue to improve the model - instead of dividing the six-month time period into two three-month periods, we could divide it into 3, 4, 5, or even more periods.  Perhaps we could divide the interval into 20 periods, and the price could move up or down by one dollar in each period.  This would still imply that the stock price at the end of six months has a value between &amp;dollar;80 or &amp;dollar;120, but in this case any dollar value between these two numbers is also a possible outcome in the model, which is a much more realistic model than the two or three values we've had in the examples so far. Before discussing this generalization, though, we will consider how interest rates affect the model.  &lt;/p&gt;
&lt;h3&gt;Adding Interest Rates&lt;/h3&gt;
&lt;p&gt;So far, we've ignored how interest rates and the time value of money would change our computations.  For example, in computing the value &lt;span class="math"&gt;\(C_u\)&lt;/span&gt; above, we assumed that if the option was expected to be worth &amp;dollar;10 at the end of the six-month period, its value at three months should be the same.  This is not the case, though, as the value of &amp;dollar;10 today is more than the value of &amp;dollar;10 in three month's time.  After all, if an investor has &amp;dollar;10 today, they could always a put the money into a completely safe investment, perhaps something like a savings account, and earn a small amount of interest so that, after three months time they have &amp;dollar;10.01 instead of just &amp;dollar;10.  &lt;/p&gt;
&lt;p&gt;The value of a payment therefore depends not only on the actual dollar amount of the payment, but on when the payment is made.  To be consistent in finding prices for financial assets, we need a way to find the value today of a payment made in the future, so that all prices under consideration are always in "today's" dollars. The idea is that if one will receive &amp;dollar;&lt;span class="math"&gt;\(Y\)&lt;/span&gt; in &lt;span class="math"&gt;\(T\)&lt;/span&gt; month's time, the value of that payment &lt;em&gt;today&lt;/em&gt; is the amount of money that would have to be invested today in a risk-free investment so that in &lt;span class="math"&gt;\(T\)&lt;/span&gt; months that safe investment will have grown to &lt;span class="math"&gt;\(Y\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Risk-free investments do not actually exist in truth, but mathematical finance generally assumes that such investments are available. This is because short-term bonds issued by stable governments in their own currency are very safe investments. There is of course the possibility that, say, the US government may default on its debt, but this would have such major economic effects that accurately pricing options would be the least of an investor's worries. Still, because these assets have no risk, the rate of return is small - the current yield on three-month treasury bills is around 1.5% annually. The rate of return of the risk-free investment is appropriately known as the &lt;em&gt;risk-free rate&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;To simplify computations, we'll assume that all interest is compounded continuously.  That is, if &lt;span class="math"&gt;\(r\)&lt;/span&gt; is the risk-free interest rate, written as a decimal (so that 1.5% = 0.015), then if one invests &lt;span class="math"&gt;\(P\)&lt;/span&gt; dollars for a period of &lt;span class="math"&gt;\(t\)&lt;/span&gt; years, the investment will grow to &lt;span class="math"&gt;\(Pe^{rt}\)&lt;/span&gt;, where &lt;span class="math"&gt;\(e = 2.71828\ldots\)&lt;/span&gt; is Euler's number, the base of the natural logarithm. On the other hand, a cash payment of &lt;span class="math"&gt;\(X\)&lt;/span&gt; dollars at some time &lt;span class="math"&gt;\(t\)&lt;/span&gt; years in the future will have a present value today of &lt;span class="math"&gt;\(Xe^{-rt}\)&lt;/span&gt;. We'll use this present value formula in the next section to compute the value of an option today if its future expected value is known. The number &lt;span class="math"&gt;\(e^{-rt}\)&lt;/span&gt; is called a &lt;em&gt;discount factor&lt;/em&gt;, since it is used to discount future values of a cash flow to their smaller present values.  &lt;/p&gt;
&lt;p&gt;Note that the risk-free interest rate, and the related discount factor, are only appropriate for finding the present value of risk-free assets.  In general, if we wanted to find the present value of a future payment that had some amount of uncertainty, we'd need to choose an interest rate that reflected the uncertainty.  We could think of this as the rate of return that could be expected from investing our money in an equally risky asset. The expected values of the options we are pricing are technically risky, so in principle we should be finding a discount factor that reflects those risks.  This represents one more advantage of risk-neutral pricing - we can avoid the work of having to decide on a discount factor that is appropriate to the risk of the option. Instead, we ignore the risk, as we've done before, and use the risk-free interest rate to simplify our computations.&lt;/p&gt;
&lt;h3&gt;The Many-Step Model&lt;/h3&gt;
&lt;p&gt;With interest rates figured out, we're now ready to give the actual model. There's just one final change to make. In our two-step example above, we've assumed that the stock price moves by adding or subtracting fixed amounts.  In our final model, we'll instead assume that the price moves by a fixed &lt;em&gt;percentage&lt;/em&gt; in each period.  This turns out to more accurately model the movement of stock prices, as we'll discuss in a later post.&lt;/p&gt;
&lt;p&gt;We'll also abandon the numbers we used in our specific examples and replace them with variables. Let &lt;span class="math"&gt;\(S\)&lt;/span&gt; denote the price of the stock today, and let &lt;span class="math"&gt;\(T\)&lt;/span&gt; denote the time until expiry of the option, in years.  We'll divide this period into &lt;span class="math"&gt;\(N\)&lt;/span&gt; equal time intervals, of length &lt;span class="math"&gt;\(\Delta T = T / N\)&lt;/span&gt;.  Finally, assume that in each time period, the stock price changes by either multiplying by &lt;span class="math"&gt;\(u\)&lt;/span&gt;, which we consider as an up movement, or by &lt;span class="math"&gt;\(d\)&lt;/span&gt;, the down movement. For example, if we assume that a stock can grow by 2% over a short time interval, then we pick &lt;span class="math"&gt;\(u = 1.02\)&lt;/span&gt;.  Thus after one period, the stock will have a value of either &lt;span class="math"&gt;\(Su\)&lt;/span&gt; or &lt;span class="math"&gt;\(Sd\)&lt;/span&gt;.  We need to assume &lt;span class="math"&gt;\(d &amp;lt; e^{r\Delta T} &amp;lt; u\)&lt;/span&gt;, where &lt;span class="math"&gt;\(r\)&lt;/span&gt; is the risk-free interest rate, to avoid the possibility of arbitrage.&lt;/p&gt;
&lt;p&gt;We can then consider a tree of possible prices for the stock.  If &lt;span class="math"&gt;\(k\)&lt;/span&gt; time periods have passed, then the stock price at that time is determined by the number of up and down movements in the stock.  Since the order of the stock movements does not matter, we have that if &lt;span class="math"&gt;\(k\)&lt;/span&gt; time periods have passed and the stock price has increased over &lt;span class="math"&gt;\(m\)&lt;/span&gt; of those periods (and therefore decreased over &lt;span class="math"&gt;\(k-m\)&lt;/span&gt; of those periods), the price of the stock at that time is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
S(k,m) = Su^{m}d^{k-m}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
This explains why this model is known as the binomial model - the price of the stock could be determined by flipping a coin &lt;span class="math"&gt;\(k\)&lt;/span&gt; times and assuming that the stock moves up each time a head appears. More properly, we should consider a weighted coin that has a probability &lt;span class="math"&gt;\(p\)&lt;/span&gt; of coming up heads. The so-called "binomial distribution" is the distribution in probability used to model coin flips.&lt;/p&gt;
&lt;p&gt;We can now use the tree of stock prices produced by this formula to find the value of the option.  Assume we're pricing a call option with strike price &lt;span class="math"&gt;\(K\)&lt;/span&gt;. We can easily find the value of the option at the expiry in each of the possible nodes of the tree.  Under our model, the price of the stock has &lt;span class="math"&gt;\(N+1\)&lt;/span&gt; possible values at expiry, depending on the number of up-movements in the stock.  For each of these possible stock prices, the option is worth
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
C(N,m) = \max(S(N,m) - K, 0)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
(Here &lt;span class="math"&gt;\(m\)&lt;/span&gt; can be any of the values &lt;span class="math"&gt;\(m = 0,1, \ldots, N\)&lt;/span&gt;). Interpreting the above formula, the option is worth the difference between the price of the stock and the strike price if the stock is worth more than the strike, and zero otherwise (the case in which the option is not exercised).&lt;/p&gt;
&lt;p&gt;Once we know the value of the option at the end of the tree, we can work backward as before to figure out the value of the option at every node. Let &lt;span class="math"&gt;\(C(k,m)\)&lt;/span&gt; denote the value of the option at the node that is &lt;span class="math"&gt;\(k\)&lt;/span&gt; steps into the tree with &lt;span class="math"&gt;\(m\)&lt;/span&gt; up movements in the stock price.  The two following nodes in the tree are &lt;span class="math"&gt;\(C(k+1,m+1)\)&lt;/span&gt; (if the price moves up) and &lt;span class="math"&gt;\(C(k+1,m)\)&lt;/span&gt; (if the price moves down).  If we let &lt;span class="math"&gt;\(p\)&lt;/span&gt; denote the risk-neutral probability of a movement up, then the expected value of the option in the next step is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
p C(k+1,m+1) + (1-p) C(k+1,m)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
and so the value of the option at &lt;span class="math"&gt;\(C(k,m)\)&lt;/span&gt; is the above expected value, discounted to today using the risk-free interest rate.  That is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
C(k,m) = e^{-r \Delta T} \left( p C(k+1,m+1) + (1-p) C(k+1,m) \right)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
With this formula, we can work our way backward through the tree until we can compute the value &lt;span class="math"&gt;\(C(0,0)\)&lt;/span&gt;, which is the value of the option today, and therefore the price.&lt;/p&gt;
&lt;p&gt;Finally, we need to find the value of the risk-neutral probability.  From our discussion in the last section, it should be chosen so that the stock price at any node in the tree is equal to the expected value of the stock price in the child nodes, appropriately discounted. That is, we need to chose the &lt;span class="math"&gt;\(p\)&lt;/span&gt; such that the following formula is satisfied:
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
S(k,m) =  e^{-r \Delta T} \left( p S(k+1,m+1) + (1-p) S(k+1,m) \right)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Using the formula &lt;span class="math"&gt;\(S(k,m) = Su^{m}d^{k-m}\)&lt;/span&gt;, we can solve this equation to find that the risk-neutral probability is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
p = \frac{e^{r \Delta T} - d}{u-d}
\end{equation*}&lt;/div&gt;
&lt;p&gt;Note that this formula does not depend on the values of &lt;span class="math"&gt;\(k\)&lt;/span&gt; and &lt;span class="math"&gt;\(m\)&lt;/span&gt;, so that the risk-neutral probability is the same everywhere in the tree. In contrast, we could consider using the replication method discussed in the previous post to compute the value of the option at each node. If we tried this, however, we'd notice that in general the payoffs at the child nodes are different as we move through the tree. Therefore we'd have to find a different replicating portfolio for every node, which would be a lot more work. Using risk-neutral pricing allows us to avoid these unnecessary computations and greatly simplifies the model.&lt;/p&gt;
&lt;h3&gt;Summarizing the Model&lt;/h3&gt;
&lt;p&gt;And that's it! After a good deal of work, we've found a model that can be used to find the price of a European call option on a stock.  The model is as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Divide time until expiry of the option into &lt;span class="math"&gt;\(N\)&lt;/span&gt; intervals.  On each interval, assume that the stock can move up or down by a factor of &lt;span class="math"&gt;\(u\)&lt;/span&gt; or &lt;span class="math"&gt;\(d\)&lt;/span&gt;, respectively.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This assumption generates a tree of possible prices for the stock.  At the leaves of the tree, we can find the value of the option for the given stock price represented by that node by using the payoff determined by the option contract.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Working back through the tree, we can find the value of the option at any node as long as we know the value of the option at the two child nodes.  We do this by finding the expected value of the option at those two child nodes using the risk-neutral probability, then discounting that value using the risk-free interest rate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This process continues until the value of the option at the root node, representing the value today, is found, which is the price of the option.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The model uses three properties of the option that are known, namely the stock price today, the strike price of the option, and the time until expiry. It also takes as input the value &lt;span class="math"&gt;\(r\)&lt;/span&gt; for the risk-free interest rate available in the market. The model also has three "tuning parameters" that we can choose ourselves, namely the size of the movements &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; and the number of steps in the tree &lt;span class="math"&gt;\(N\)&lt;/span&gt;. If we want our model to be useful, we still need to decide how to choose these parameters.&lt;/p&gt;
&lt;p&gt;As we saw above, our model is more accurate the more steps we include. Of course increasing &lt;span class="math"&gt;\(N\)&lt;/span&gt; increases the number of nodes in our tree, and so larger values of &lt;span class="math"&gt;\(N\)&lt;/span&gt; will take longer to compute.  Therefore, we should choose &lt;span class="math"&gt;\(N\)&lt;/span&gt; as large as possible while still making sure that our algorithm is computationally feasible. We'll discuss this more in the next post, when we actually implement this model in Python and analyze its performance.&lt;/p&gt;
&lt;p&gt;Choosing &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; is more difficult. There are good techniques for choosing these values, but understanding them requires making some more explicit assumptions about the movement of stock prices which we'll discuss in a later post. For now, it's enough to say that choosing &lt;span class="math"&gt;\(u\)&lt;/span&gt; and &lt;span class="math"&gt;\(d\)&lt;/span&gt; amounts to forecasting the future movement of the stock. We'll therefore choose them somewhat arbitrarily, picking feasible values and tweaking them as necessary so that the range of possible stock prices in the model accords with whatever prediction about the future movement of the stock we wish to make.  &lt;/p&gt;
&lt;h3&gt;Next Time - Implementing the Model&lt;/h3&gt;
&lt;p&gt;Now that we've found a model we can use, it's time to actually put it into practice.  In the next post, we'll implement this model in Python and run it on a few simple examples. We'll also analyze its performance, and see how our implementation can be used to price other types of options as well.  &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="finance"></category><category term="binomial-model"></category></entry><entry><title>Introducing the Quaternions</title><link href="http://www.josephthurman.com/quaternions2.html" rel="alternate"></link><published>2018-03-01T20:00:00-05:00</published><updated>2018-03-01T20:00:00-05:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-03-01:/quaternions2.html</id><summary type="html">&lt;p&gt;In our last post we laid the foundation necessary to understand the quaternions, a 4-dimensional number system with some interesting properties that are applicable in higher-dimensional geometry.  We didn't actually define or discuss the quaternions in &lt;a href="http://www.josephthurman.com/quaternions1.html"&gt;that post&lt;/a&gt;, but instead discussed the real and complex numbers.  It might be helpful â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In our last post we laid the foundation necessary to understand the quaternions, a 4-dimensional number system with some interesting properties that are applicable in higher-dimensional geometry.  We didn't actually define or discuss the quaternions in &lt;a href="http://www.josephthurman.com/quaternions1.html"&gt;that post&lt;/a&gt;, but instead discussed the real and complex numbers.  It might be helpful to go back and skim that post again, especially the section defining the operations with complex numbers, as many of the properties of the quaternions are analogous to properties of the complex numbers.  With that preparation, though, we're finally ready to introduce and define the quaternions.&lt;/p&gt;
&lt;h3&gt;The Quaternions&lt;/h3&gt;
&lt;p&gt;We saw that the complex numbers can be constructed by considering a new number &lt;span class="math"&gt;\(i\)&lt;/span&gt; with the property that &lt;span class="math"&gt;\(i^2 = -1\)&lt;/span&gt;, and then defining addition and multiplication of numbers of the form &lt;span class="math"&gt;\(a + bi\)&lt;/span&gt; in a natural way. But why stop there? We can define other new numbers, which we'll denote by &lt;span class="math"&gt;\(j\)&lt;/span&gt; and &lt;span class="math"&gt;\(k\)&lt;/span&gt;, and consider numbers of the form &lt;span class="math"&gt;\(a + bi + cj + dk\)&lt;/span&gt; where &lt;span class="math"&gt;\(a,b,c,d\)&lt;/span&gt; are real numbers.  We call the collection of numbers of this form the &lt;em&gt;quaternions&lt;/em&gt;, which we denote by &lt;span class="math"&gt;\(\mathbb{H}\)&lt;/span&gt;.  Here &lt;span class="math"&gt;\(\mathbb{H}\)&lt;/span&gt; stands for Hamilton, as in &lt;a href="https://en.wikipedia.org/wiki/William_Rowan_Hamilton"&gt;William Rowan Hamilton&lt;/a&gt;, the Irish mathematician who first constructed the quaternions. (The perhaps more natural &lt;span class="math"&gt;\(\mathbb{Q}\)&lt;/span&gt; is already taken, as this is used to denote the rational numbers.) We can see that the quaternions extend the complex numbers &lt;span class="math"&gt;\(\mathbb{C}\)&lt;/span&gt;, since we can consider a complex number &lt;span class="math"&gt;\(a+bi\)&lt;/span&gt; as a quaternion &lt;span class="math"&gt;\(a + bi + 0j + 0k\)&lt;/span&gt; where the &lt;span class="math"&gt;\(j, k\)&lt;/span&gt; part of the quaternion are simply 0.  The quaternions are evidently a four-dimensional number system, as a single quaternion actually represents a set of four real numbers.  &lt;/p&gt;
&lt;p&gt;From the form &lt;span class="math"&gt;\(q = a + bi + cj + dk\)&lt;/span&gt; it is easy to see how to add quaternions.  We have, for two quaternions &lt;span class="math"&gt;\(q_0, q_1\)&lt;/span&gt;, that
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
q_0 + q_1 = (a_0 + b_0i + c_0j + d_0k) + (a_1 + b_1i + c_1j + d_1 k) = (a_0 + a_1) + (b_0 + b_1)i + (c_0 + c_1)j + (d_0 + d_1)k,
\end{equation*}&lt;/div&gt;
&lt;p&gt;
that is, we can add quaternions simply by "adding like terms."  Subtraction of quaternions is defined similarly.  &lt;/p&gt;
&lt;p&gt;The more difficult property to define is multiplication.  As in the case of the complex numbers, the crucial point is to understand how to define multiplication amongst the "new" numbers &lt;span class="math"&gt;\(i, j, k\)&lt;/span&gt;.  The appropriate multiplication rules are what Hamilton discovered when he constructed the quaternions.  Apparently he was walking with his wife one day along a canal in Dublin when he suddenly realized the correct multiplication rule, and he was so excited that he immediately carved the formula into a &lt;a href="https://en.wikipedia.org/wiki/History_of_quaternions#Hamilton's_discovery"&gt;bridge along the canal&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
i^2 = j^2 = k^2 = ijk = -1
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Here we use juxtaposition to denote multiplication, that is, &lt;span class="math"&gt;\(ij\)&lt;/span&gt; means the same thing as &lt;span class="math"&gt;\(i \times j\)&lt;/span&gt;. We'll sometimes also denote multiplication with a small dot, e.g., &lt;span class="math"&gt;\(i \cdot j\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The above multiplication rule is more commonly written in the equivalent form
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
i^2 = j^2 = k^2 = -1 \text{ and } ij = k = -ji.
\end{equation*}&lt;/div&gt;
&lt;p&gt;
This latter form makes the most important feature of quaternion multiplication more obvious: it is &lt;em&gt;not commutative&lt;/em&gt;.  We say an operation is commutative if the order of the operands does not matter.  For example, addition of real numbers is commutative because &lt;span class="math"&gt;\(a + b = b + a\)&lt;/span&gt; for all real numbers.  Likewise the multiplication of real numbers is commutative, as are both addition and multiplication of complex numbers. Subtraction of real numbers is not commutative, since in general &lt;span class="math"&gt;\(a - b \neq b - a\)&lt;/span&gt;.  To say that quaternionic multiplication is not commutative is to say that if &lt;span class="math"&gt;\(p, q\)&lt;/span&gt; are quaternions, then in general we have that &lt;span class="math"&gt;\(p q \neq q p\)&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;Using the above rules for multiplying the elements &lt;span class="math"&gt;\(i, j, k\)&lt;/span&gt;, we can define the product of any two quaternions in a way that's very similar to the method for the complex numbers, by treating &lt;span class="math"&gt;\(i, j, k\)&lt;/span&gt; as variables but simplifying any multiplication between these numbers using the multiplication rules above.  After a simple but somewhat tedious computation, we arrive at the following general formula for multiplication of any two quaternions:
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align*}
q_0 q_1 &amp;amp;= (a_0 + b_0i + c_0j + d_0k) \cdot (a_1 + b_1i + c_1j + d_1k) \\
&amp;amp;= (a_0 a_1 - b_0 b_1 -c_0 c_1 - d_0 d_1)+ (a_1 b_0 + a_0 b_1 - c_1 d_0 + c_0 d_1) i \\
 &amp;amp;\hspace{.25in}+ (a_1 c_0 + a_0 c_1 + b_1 d_0 - b_0 d_1)j + (-b_1 c_0 + b_0 c_1 + a_1 d_0 + a_0 d_1)k
\end{align*}&lt;/div&gt;
&lt;p&gt;Finally, we'd like to consider quaternionic division as well.  Similar to the complex case, we will actually define an inverse operation, and again this will be based on a conjugation operation.  If &lt;span class="math"&gt;\(q = a + bi + cj +dk\)&lt;/span&gt; is a quaternion, then we will call &lt;span class="math"&gt;\(a\)&lt;/span&gt; the &lt;em&gt;real part&lt;/em&gt; and &lt;span class="math"&gt;\(bi + cj + dk\)&lt;/span&gt; the &lt;em&gt;imaginary part&lt;/em&gt;, and once again the complex conjugation operation will consist of switching the sign of the imaginary part, that is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
\overline{q} = a - bi - cj - dk
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Just as in the case of complex numbers, we can observe that &lt;span class="math"&gt;\(|q|^2 = q \overline{q} = a^2 + b^2 + c^2 +d^2\)&lt;/span&gt; is a real number (i.e., has no imaginary part), and that the inverse of a quaternion will be given by
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
q^{-1} = \frac{1}{|q|^2}\overline{q} = \frac{a}{a^2+b^2+c^2+d^2} + \frac{-b}{a^2+b^2+c^2+d^2}i + \frac{-c}{a^2+b^2+c^2+d^2}j + \frac{-d}{a^2+b^2+c^2+d^2}k
\end{equation*}&lt;/div&gt;
&lt;p&gt;Fractions of quaternions, are actually not exactly defined since multiplication is not commutative.  If we'd like to take the quaternionic fraction &lt;span class="math"&gt;\(\frac{q}{p}\)&lt;/span&gt;, then, using the understanding that "division" means the same thing as "multiplying by the inverse", the value of the division should be the same as the number obtained by multiplying &lt;span class="math"&gt;\(q\)&lt;/span&gt; by &lt;span class="math"&gt;\(p^{-1}\)&lt;/span&gt;.  However there are two ways to do this multiplication, either &lt;span class="math"&gt;\(p^{-1}q\)&lt;/span&gt; or &lt;span class="math"&gt;\(qp^{-1}\)&lt;/span&gt;, that will in general not be the same since quaternionic multiplication is not commutative.  Therefore we will never write quaternions as fractions, and instead only consider multiplication by the inverse so that the order of the operands is clear.&lt;/p&gt;
&lt;p&gt;As a note on terminology, in the last post we said that the real numbers and the complex numbers are both examples of &lt;em&gt;fields&lt;/em&gt; since they possess addition, subtraction, multiplication, and division operations. One of the additional requirements of a field that went unmentioned in that post is that the multiplication in a field should be commutative. The quaternions are therefore not a field.  Instead, the quaternions are known as a "division algebra." The term "skew field" is also used in older books, but is less common today.&lt;/p&gt;
&lt;h3&gt;And Beyond&lt;/h3&gt;
&lt;p&gt;In the previous post, we saw that we could extend the one-dimensional real number system using the two-dimensional complex numbers.  In this post, we extended the complex numbers by the four-dimensional quaternions. Each time, we've managed to extend the number system by doubling the dimension. Could we keep going? Are there further number systems with dimension 8, 16, 32, and so on?&lt;/p&gt;
&lt;p&gt;The answer is yes, although the number systems that arise in this way are not generally as useful.  Each extension process we have discussed so far is an example of a general construction called the &lt;a href="https://en.wikipedia.org/wiki/Cayleyâ€“Dickson_construction"&gt;Cayley-Dickson construction&lt;/a&gt;.  This is a procedure that takes one of the number systems we have been discussing and produces a new number system of twice the dimension.  &lt;/p&gt;
&lt;p&gt;The new number systems constructed by this process, though, always lose some of the desirable algebraic properties of the starting point.  For example, in moving from &lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt; to &lt;span class="math"&gt;\(\mathbb{C}\)&lt;/span&gt;, we lose the property that the real numbers are ordered. Similarly, we lose the commutativity of multiplication when we extend from &lt;span class="math"&gt;\(\mathbb{C}\)&lt;/span&gt; to &lt;span class="math"&gt;\(\mathbb{H}\)&lt;/span&gt;.  &lt;/p&gt;
&lt;p&gt;We could apply the Cayley-Dickson construction again to the quaternions to produce an 8-dimensional number system called the &lt;a href="https://en.wikipedia.org/wiki/Octonion"&gt;octonions&lt;/a&gt;. In constructing these numbers, we lose the property of &lt;em&gt;associativity&lt;/em&gt; of multiplication, which is the property that the result of multiplication is independent of the grouping.  That is, given three numbers &lt;span class="math"&gt;\(a, b, c\)&lt;/span&gt;, we could form the product of these numbers in two different ways (fixing the order), as either &lt;span class="math"&gt;\((ab)c\)&lt;/span&gt; or as &lt;span class="math"&gt;\(a(bc)\)&lt;/span&gt;. The reals, complexes, and quaternions are all associative, in that this grouping does not matter, e.g.,
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
(2 \cdot 3) \cdot 4 = 6 \cdot 4 = 24 = 2 \cdot 12 = 2 \cdot (3 \cdot 4)
\end{equation*}&lt;/div&gt;
&lt;p&gt;
This is no longer the case for the octonions. Even so, the octonions are still useful in mathematics and also in some physics applications, although we won't discuss the octonions any further.  One can continue past the octonions as well (the next number system is called the &lt;a href="https://en.wikipedia.org/wiki/Sedenion"&gt;sedenions&lt;/a&gt;) but these further number systems are not commonly studied by mathematicians - after repeating the Cayley-Dickson construction so many times they have lost enough algebraic properties that they are no longer as useful.&lt;/p&gt;
&lt;h3&gt;Why the Quaternions?&lt;/h3&gt;
&lt;p&gt;In the above we've seen what the quaternions are from an axiomatic perspective. We've defined a quaternion as a collection of 4 real numbers, and given ways to add, subtract, multiply, and divide quaternions. This is interesting, but it may make the quaternions seem like an odd curiosity. Have we just found a set of weird rules for manipulating quadruplets of numbers, or do the quaternions actually amount to something?.&lt;/p&gt;
&lt;p&gt;The complex numbers have something of this flavor, as a weird system for manipulating pairs of numbers. But we saw in the previous post that they actually solve an important problem: they're an algebraically closed extension of the real numbers. What problems were the quaternions meant to solve? Why did Hamilton think they were important enough to vandalize a bridge when he discovered them? In our  next few posts, we'll answer that question, when we see that the quaternions are intimately related with the geometry of rotations in three dimensions.  &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="thesis"></category><category term="quaternions"></category></entry><entry><title>On the Way to the Quaternions: Real and Complex Numbers</title><link href="http://www.josephthurman.com/quaternions1.html" rel="alternate"></link><published>2018-02-22T10:00:00-05:00</published><updated>2018-02-22T10:00:00-05:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-02-22:/quaternions1.html</id><summary type="html">&lt;p&gt;In the &lt;a href="http://www.josephthurman.com/first-series-explaining-my-thesis.html"&gt;introductory post&lt;/a&gt; to this series of posts explaining my thesis, we first heard about "quaternion-K&amp;auml;hler manifolds," a type of geometric object with special curvature properties.  These special geometric properties are related to the algebraic properties of the &lt;em&gt;quaternions&lt;/em&gt;, a 4-dimensional number system that generalizes the somewhat more familiar â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the &lt;a href="http://www.josephthurman.com/first-series-explaining-my-thesis.html"&gt;introductory post&lt;/a&gt; to this series of posts explaining my thesis, we first heard about "quaternion-K&amp;auml;hler manifolds," a type of geometric object with special curvature properties.  These special geometric properties are related to the algebraic properties of the &lt;em&gt;quaternions&lt;/em&gt;, a 4-dimensional number system that generalizes the somewhat more familiar real and complex number systems. In this post, we'll lay the groundwork for defining the quaternions by discussing some properties of the real and complex numbers. A good understanding of these two number systems, and especially of the complex numbers, will be necessary to understand the more complicated quaternions.&lt;/p&gt;
&lt;h3&gt;The Real Numbers&lt;/h3&gt;
&lt;p&gt;The real number system, often denote in mathematics by the symbol &lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt;, is the number system associated to the concept of the "number line" that is often taught in schools.  That is, if one considers a straight, infinitely long line, then every point on that line can be associated to a number.  We can choose a center point for the line, which we associate to the number 0, and then could repeatedly move to the right by a fixed distance to mark the points associated to 1, 2, 3, etc., and similarly to the left for the points -1, -2, -3, etc.  All other points on this line also represent numbers - the point exactly halfway between -1 and -2 is the point -3/2, while the number &lt;span class="math"&gt;\(\pi = 3.14159\ldots\)&lt;/span&gt; is associated to a point that's a little to the right of 3, and so on.  All real numbers can be written as decimals (although those decimals might repeat infinitely, as in &lt;span class="math"&gt;\(1/3 = 0.3333333\ldots\)&lt;/span&gt;, or might even go one forever without any discernible pattern, as in &lt;span class="math"&gt;\(\pi\)&lt;/span&gt;), and using these decimal expressions we have methods for adding, subtracting, multiplying and dividing real numbers.&lt;/p&gt;
&lt;p&gt;&lt;img alt="The number line" src="http://www.josephthurman.com/numberline.png"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;The real number line&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Although the idea of the real number line is fairly intuitive, the formal mathematical definition of the real numbers is rather complicated, and a great deal of mathematical energy was expended to define and understand the real numbers.  This technical work is in one sense extremely important to my own thesis work, in that it is the foundation for all of calculus and therefore for all of my work.  On the other hand, Newton and Leibniz invented calculus without a mathematically rigorous definition of the real number system, and if they didn't need all of the gory technical details, then we won't spend too much time worrying about them either.&lt;/p&gt;
&lt;p&gt;With that said, we will say a few important facts about the real numbers.  First, the real numbers are a &lt;em&gt;field&lt;/em&gt;, the mathematical word for set equipped with operations that behave like addition, subtraction, multiplication, and division. The abstract definition of a field was essentially made to generalize the structure of the real numbers.  The real number field has two extra properties, though, that make it special.  &lt;/p&gt;
&lt;p&gt;First, it is &lt;em&gt;ordered&lt;/em&gt;, that is, for any two numbers &lt;span class="math"&gt;\(x, y\)&lt;/span&gt; we can always say that either &lt;span class="math"&gt;\(x \leq y\)&lt;/span&gt; or &lt;span class="math"&gt;\(y \leq x\)&lt;/span&gt; (or both if we actually have &lt;span class="math"&gt;\(x = y\)&lt;/span&gt;) and that this order satisfies some extra properties to make it consistent with the addition and multiplication operations. (One of these is that if &lt;span class="math"&gt;\(x \geq 0\)&lt;/span&gt; and &lt;span class="math"&gt;\(y \geq 0\)&lt;/span&gt;, then we also have that the product &lt;span class="math"&gt;\(xy \geq 0\)&lt;/span&gt;.)  Not every field is ordered. For example, since the complex numbers discussed below are two dimensional, they do not admit an order that's compatible with the field structure.&lt;/p&gt;
&lt;p&gt;Second, the real numbers are &lt;em&gt;Dedekind-complete&lt;/em&gt; with respect to this order. This property is also known as the "least upper bound property." It says that, given any non-empty collection of real numbers that has some upper bound (a number &lt;span class="math"&gt;\(M\)&lt;/span&gt; such that if &lt;span class="math"&gt;\(x\)&lt;/span&gt; is a number in the collection, &lt;span class="math"&gt;\(x \leq M\)&lt;/span&gt;), then that collection has a &lt;em&gt;smallest&lt;/em&gt; upper bound.  This is also not true for every field. In particular, the &lt;em&gt;rational&lt;/em&gt; numbers do not have this property.  The rational numbers are the set of numbers that can be expressed as a ratio of two integers (for example, &lt;span class="math"&gt;\(2\)&lt;/span&gt; and &lt;span class="math"&gt;\(-5/4\)&lt;/span&gt; are rational, while &lt;span class="math"&gt;\(\pi\)&lt;/span&gt; is not). The rational numbers are also a field, since one can add, subtract, multiply, and divide fractions (and the result is always a fraction), and are in fact an ordered field as well.  They are not, however, Dedekind-complete. To see why, consider the set of all rational numbers less than &lt;span class="math"&gt;\(\sqrt{2}\)&lt;/span&gt;. This set is bounded, and it's not hard to see that the least upper bound of this set is &lt;span class="math"&gt;\(\sqrt{2}\)&lt;/span&gt;. But &lt;span class="math"&gt;\(\sqrt{2}\)&lt;/span&gt; is irrational, so the set of rational numbers does not have the least upper bound property since the least upper bound &lt;span class="math"&gt;\(\sqrt{2}\)&lt;/span&gt; is not itself a rational number.&lt;/p&gt;
&lt;p&gt;One can show with a fair amount of work that these two properties uniquely determine the real numbers, that is, there is exactly one ordered, Dedekind-complete field. Still, making a formal mathematical construction of a field that satisfies these two properties is not easy, and the interested reader can search the internet for more information on either &lt;a href="https://en.wikipedia.org/wiki/Dedekind_cut"&gt;Dedekind cuts&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Construction_of_the_real_numbers#Construction_from_Cauchy_sequences"&gt;Cauchy sequences&lt;/a&gt;. For the future, we'll only need the intuitive understanding of the real numbers as the points along the number line, but it's good to point out the difficulties in defining the real number line as an example of the way that seemingly intuitive concepts can hide a great deal of mathematical complexity.  &lt;/p&gt;
&lt;h3&gt;The Complex Numbers&lt;/h3&gt;
&lt;p&gt;One drawback of the real numbers is that they are not &lt;em&gt;algebraically closed&lt;/em&gt;. This means that not every real polynomial has real roots.  A &lt;em&gt;real polynomial&lt;/em&gt; is an expression with the form
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
p(x) = a_n x^n + a_{n-1} x^{n-1} + \cdots + a_2 x^2 + a_1 x + a_0
\end{equation*}&lt;/div&gt;
&lt;p&gt;
where the coefficients &lt;span class="math"&gt;\(a_n, \ldots, a_0\)&lt;/span&gt; are real numbers and &lt;span class="math"&gt;\(x\)&lt;/span&gt; is a variable.  A &lt;em&gt;root&lt;/em&gt; of a polynomial is a value for &lt;span class="math"&gt;\(x\)&lt;/span&gt; that makes &lt;span class="math"&gt;\(p(x) = 0\)&lt;/span&gt;.  For example, &lt;span class="math"&gt;\(1\)&lt;/span&gt; is a root of the polynomial &lt;span class="math"&gt;\(q(x) = x^2 - 1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;But we can find polynomials with real-number coefficients that do not have any real-number roots, such as
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
p(x) = x^2 + 1
\end{equation*}&lt;/div&gt;
&lt;p&gt;
For any real number &lt;span class="math"&gt;\(x\)&lt;/span&gt;, the square &lt;span class="math"&gt;\(x^2 \geq 0\)&lt;/span&gt;, and so &lt;span class="math"&gt;\(x^2 + 1 &amp;gt; 0\)&lt;/span&gt; and there can be no real roots.  &lt;/p&gt;
&lt;p&gt;It's somewhat inconvenient to have equations involving only real numbers that are still impossible to solve.  To fix this problem, we can define a new number &lt;span class="math"&gt;\(i\)&lt;/span&gt;, called the &lt;em&gt;imaginary unit&lt;/em&gt;, to be a number such that &lt;span class="math"&gt;\(i^2 = -1\)&lt;/span&gt; so that &lt;span class="math"&gt;\(i\)&lt;/span&gt; is a root of &lt;span class="math"&gt;\(p(x)\)&lt;/span&gt; above. This leads to the definition of the &lt;em&gt;complex numbers&lt;/em&gt;. A complex number &lt;span class="math"&gt;\(z\)&lt;/span&gt; consists of a pair of real numbers &lt;span class="math"&gt;\(a, b\)&lt;/span&gt;, which we call the &lt;em&gt;real&lt;/em&gt; and &lt;em&gt;imaginary&lt;/em&gt; parts, respectively, and we write &lt;span class="math"&gt;\(z = a + bi\)&lt;/span&gt;. The set of all complex numbers is denoted by &lt;span class="math"&gt;\(\mathbb{C}\)&lt;/span&gt;.  Note that we can consider the real numbers &lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt; as a subset of the complex numbers: if &lt;span class="math"&gt;\(a\)&lt;/span&gt; is a real number, we can consider it as the complex number &lt;span class="math"&gt;\(a + 0 i\)&lt;/span&gt;, that is, a complex number with no imaginary part. This is a two dimensional number system, since a number in &lt;span class="math"&gt;\(\mathbb{C}\)&lt;/span&gt; actually consists of a &lt;em&gt;pair&lt;/em&gt; of real numbers.&lt;/p&gt;
&lt;p&gt;The choice of the word "imaginary" to describe these numbers is unfortunate, since it implies that these numbers aren't actually numbers and are just strange mathematical objects someone dreamed up. (This terminology was coined by Ren&amp;eacute; Descartes, of "I think therefore I am" fame, in order to denigrate the complex numbers in exactly this way.) And some would say this criticism makes sense. After all, these numbers are defined so that the equation &lt;span class="math"&gt;\(X^2 + 1 = 0\)&lt;/span&gt; can have a solution, and some might say that this equation obviously has no solutions and it's silly to ask for one.  &lt;/p&gt;
&lt;p&gt;Such objections are based on opinion, though, which doesn't really count for much in formal mathematics.  Worse, the same kind of argument could be used to ignore any number of mathematical topics.  Consider negative numbers: they were introduced to be able to solve equations like, say, &lt;span class="math"&gt;\(X + 5 = 2\)&lt;/span&gt;. But this equation is ridiculous and obviously shouldn't have a solution - after all, if you started with &lt;span class="math"&gt;\(X\)&lt;/span&gt; apples and someone gave you five apples, how could you end with only 2?&lt;/p&gt;
&lt;p&gt;Arguments about whether or not certain numbers are "real" in a philosophical sense can get surprisingly heated.  Consider for example the irrational numbers, that is, real numbers that are not rational numbers. Actually, if you happen to follow a Pythagorean philosophy, it's probably safer not to. The Pythagorean theorem is named after Pythagoras, an ancient Greek philosopher who also lead something like a cult that was based around mathematical principles.  His and his followers' theology was heavily influenced by music and harmony, where many important concepts like scales and consonance are related to having only whole-number ratios of numbers.  They were so invested in the divine order of rational numbers that it's sometimes said that they denied the existence of irrational numbers, going so far as to &lt;a href="https://io9.gizmodo.com/did-pythagoras-really-murder-a-guy-1460668208"&gt;murder one of their own members&lt;/a&gt; for proving that &lt;span class="math"&gt;\(\sqrt{2}\)&lt;/span&gt; is irrational. (The story of the murder probably isn't actually true, partly because there is some disagreement about exactly which irrational number was the cause for the murder. The story linked above says it's the &lt;a href="https://en.wikipedia.org/wiki/Golden_ratio"&gt;golden ratio&lt;/a&gt;, but the version with &lt;span class="math"&gt;\(\sqrt{2}\)&lt;/span&gt; is also common.) Somewhat ironically, the Pythagoreans would have thought about &lt;span class="math"&gt;\(\sqrt{2}\)&lt;/span&gt; because, if a perfect square has a side length of 1, then the length of the diagonal will be &lt;span class="math"&gt;\(\sqrt{2}\)&lt;/span&gt;, a fact that one can prove using the Pythagorean theorem.  &lt;/p&gt;
&lt;p&gt;Thus if you think it makes sense to talk about negative numbers, or irrational numbers, then you should think it makes perfectly good sense to talk about imaginary numbers and complex numbers as well.  If nothing else, we'll see in a later post that complex numbers can and do have a real physical significance, even if it's less obvious than applications of other number systems.&lt;/p&gt;
&lt;h3&gt;Operations with Complex Numbers&lt;/h3&gt;
&lt;p&gt;With any concerns about the ontological status of the complex numbers brushed aside, we can now define operations with complex numbers. We will define addition, subtraction, multiplication, and division rules for complex numbers so that &lt;span class="math"&gt;\(\mathbb{C}\)&lt;/span&gt; is also a field.  Addition and subtraction are defined in a fairly straightforward way, essentially by considering &lt;span class="math"&gt;\(i\)&lt;/span&gt; as a variable and combining like terms.  That is, if &lt;span class="math"&gt;\(z = a + bi\)&lt;/span&gt; and &lt;span class="math"&gt;\(w = c + di\)&lt;/span&gt; are complex numbers, then
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
z \pm w = (a + bi) \pm (c + di) = (a \pm c) + (b \pm d)i
\end{equation*}&lt;/div&gt;
&lt;p&gt;
We just add (or subtract) the real parts and the imaginary parts separately.  Multiplication is defined by again treating &lt;span class="math"&gt;\(i\)&lt;/span&gt; as a variable, but also making the simplification that &lt;span class="math"&gt;\(i^2 = -1\)&lt;/span&gt; wherever possible. Therefore we have
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align*}
z \times w &amp;amp;= (a+bi) \times (c+di) \\
  &amp;amp;= ac + adi + bci + bdi^2 \\
  &amp;amp;= ac + adi + bci - bd \\
  &amp;amp;= (ac - bd) + (ad + bc)i
\end{align*}&lt;/div&gt;
&lt;p&gt;
We'll generally drop the multiplication sign, and denote multiplication just by juxtaposition, i.e., &lt;span class="math"&gt;\(zw\)&lt;/span&gt; means the same as &lt;span class="math"&gt;\(z \times w\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;To define division of complex numbers, we can consider one extra operation on complex numbers, called &lt;em&gt;complex conjugation&lt;/em&gt;.  Given a complex number &lt;span class="math"&gt;\(z = a + bi\)&lt;/span&gt;, then its complex conjugate, denoted by &lt;span class="math"&gt;\(\overline{z}\)&lt;/span&gt;, is the complex number &lt;span class="math"&gt;\(\overline{z} = a - bi\)&lt;/span&gt;, that is, we switch the sign on the imaginary part of &lt;span class="math"&gt;\(z\)&lt;/span&gt;.  Complex conjugation is special because the product of a complex number and its complex conjugate is always a real number:
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align*}
z \overline{z} &amp;amp;= (a+bi)(a-bi) \\
  &amp;amp;= a^2 - abi + abi - b^2 i^2 \\
  &amp;amp;= a^2 + b^2
\end{align*}&lt;/div&gt;
&lt;p&gt;
The number &lt;span class="math"&gt;\(\sqrt{z \overline{z}} = \sqrt{a^2 + b^2}\)&lt;/span&gt; is also called the &lt;em&gt;norm&lt;/em&gt; or &lt;em&gt;modulus&lt;/em&gt; of &lt;span class="math"&gt;\(z\)&lt;/span&gt;, and will be discussed more in a later post.&lt;/p&gt;
&lt;p&gt;Once we have defined complex conjugation, we can write the rule for division of complex numbers. It's actually easier to define a different operation, called the &lt;em&gt;inverse&lt;/em&gt; of a complex number.  Given a nonzero complex number &lt;span class="math"&gt;\(z\)&lt;/span&gt;, we will define the inverse to be the complex number denoted by &lt;span class="math"&gt;\(z^{-1}\)&lt;/span&gt; with the property that &lt;span class="math"&gt;\(zz^{-1} = 1\)&lt;/span&gt;. (Zero has no inverse, since &lt;span class="math"&gt;\(0\)&lt;/span&gt; times any complex number can never be 1. This is ok because division by 0 is not defined anyway). Defining an inverse is the same as defining division, since division is just the operation that  undoes multiplication.  That is, if we have the product &lt;span class="math"&gt;\(wz\)&lt;/span&gt; and want to undo the multiplication by &lt;span class="math"&gt;\(z\)&lt;/span&gt;, one way to do so would be to "divide by &lt;span class="math"&gt;\(z\)&lt;/span&gt;" to be left with just &lt;span class="math"&gt;\(w\)&lt;/span&gt;.  Since we could also take &lt;span class="math"&gt;\((wz)z^{-1} = w (z z^{-1}) = w (1) = w\)&lt;/span&gt;, we define "division by &lt;span class="math"&gt;\(z\)&lt;/span&gt;" to be the same as "multiplication by the inverse &lt;span class="math"&gt;\(z^{-1}\)&lt;/span&gt;".&lt;/p&gt;
&lt;p&gt;So what is the inverse?  Using the conjugation operator, we can define
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
z^{-1} = \frac{1}{|z|^2} \overline{z} = \frac{a}{a^2+b^2} - \frac{b}{a^2 + b^2}i
\end{equation*}&lt;/div&gt;
&lt;p&gt;
To check that this is correct, observe that
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align*}
zz^{-1} &amp;amp;= (a+bi)\left( \frac{a}{a^2+b^2} - \frac{b}{a^2 + b^2} i \right) \\
  &amp;amp;= \frac{a^2}{a^2 + b^2} - \frac{ab}{a^2 + b^2} i + \frac{ab}{a^2 + b^2} i - \frac{b^2}{a^2+b^2}i^2 \\
  &amp;amp;= \frac{a^2}{a^2 + b^2} + \frac{b^2}{a^2+b^2} = \frac{a^2+b^2}{a^2 + b^2} = 1
\end{align*}&lt;/div&gt;
&lt;p&gt;So we have that the complex numbers are a field, but what are they good for? Returning to the motivation for the construction of the complex numbers in the previous section, one can show that the complex numbers are algebraically closed. That is, any (nonconstant) polynomial with &lt;em&gt;complex&lt;/em&gt; coefficients will always have a complex root.  Since real numbers are themselves a subset of the complex numbers, this means that any polynomial equation with real coefficients can always be solved using complex numbers.  The fact that the complex numbers are algebraically closed is known as the "Fundamental Theorem of Algebra."&lt;/p&gt;
&lt;p&gt;This leads to one of the main situations in which a non-mathematician might have encountered complex numbers in school.  Many people learn the quadratic formula, which, given a quadratic equation of the form
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
ax^2 + bx + c = 0,
\end{equation*}&lt;/div&gt;
&lt;p&gt;
says that the solutions of this equation are given by the pair of values
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
The first time one encounters this formula, they learn that the number &lt;span class="math"&gt;\(b^2 - 4ac\)&lt;/span&gt; is called the &lt;em&gt;discriminant&lt;/em&gt;, and that the quadratic equation has no solution if this value is negative, since one cannot take the square root of a negative number.&lt;/p&gt;
&lt;p&gt;Of course, one can't take the square root of a negative number and obtain a real number, but we've seen that the complex numbers are specifically constructed so that we can take square roots of negative numbers. The imaginary unit &lt;span class="math"&gt;\(i\)&lt;/span&gt; is after all defined to be &lt;span class="math"&gt;\(\sqrt{-1}\)&lt;/span&gt;.  By expanding our number system and considering complex numbers, we can therefore see from this formula that all quadratic equations can be solved - we just have to use complex numbers for the solution in the case that the discriminant is negative. The Fundamental Theorem of Algebra, moreover, says that roots can be found for any polynomial, if one allows for complex number solutions.&lt;/p&gt;
&lt;h3&gt;Next Time - The Quaternions&lt;/h3&gt;
&lt;p&gt;With this understanding of the real and complex number system, we're ready to actually define the quaternions in the next post.  We'll see that they are a four-dimensional extension of the complex numbers that has many of the same properties of the complex numbers, but with a few major differences as well.  &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="thesis"></category><category term="quaternions"></category><category term="complex numbers"></category></entry><entry><title>Introduction to Pricing Options with Binomial Trees</title><link href="http://www.josephthurman.com/binomial1.html" rel="alternate"></link><published>2018-02-16T12:00:00-05:00</published><updated>2018-02-16T12:00:00-05:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-02-16:/binomial1.html</id><summary type="html">&lt;p&gt;A lot of work in mathematical finance is related to the pricing of financial derivatives, that is, financial assets that have values that depend on (that is, values that are derived from) the value of another asset. Some of the simplest derivatives are &lt;em&gt;European call&lt;/em&gt; and &lt;em&gt;put&lt;/em&gt; options. In this â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;A lot of work in mathematical finance is related to the pricing of financial derivatives, that is, financial assets that have values that depend on (that is, values that are derived from) the value of another asset. Some of the simplest derivatives are &lt;em&gt;European call&lt;/em&gt; and &lt;em&gt;put&lt;/em&gt; options. In this post, we'll explain what these options are, and then describe a very simple model, the (one step) &lt;em&gt;Binomial Options Pricing Model&lt;/em&gt;, that can be used to find prices for these options. In the next post, we'll see how this model can be improved and expanded.&lt;/p&gt;
&lt;h3&gt;European Call and Put Options&lt;/h3&gt;
&lt;p&gt;A European &lt;em&gt;call&lt;/em&gt; option is a contract that gives one investor, who is said to have the &lt;em&gt;long&lt;/em&gt; position in the contract, the option (but not the obligation) to &lt;em&gt;buy&lt;/em&gt; a particular asset at specified future time, called the &lt;em&gt;expiration time&lt;/em&gt; of the option, for a price specified at the time the contract is made.  This price is called the &lt;em&gt;strike&lt;/em&gt; price. Their counterparty, who must agree to sell at that particular price, is said to hold the &lt;em&gt;short&lt;/em&gt; position in the contract. For a European &lt;em&gt;put&lt;/em&gt; option, the investor holding the long position has the option to &lt;em&gt;sell&lt;/em&gt; a particular asset at a specified time and price, while the person taking the short position agrees to buy at that price.  &lt;/p&gt;
&lt;p&gt;It is important to note that long positions in options are always truly optional. That is, if a person holds a long position in a call option with a strike price of &amp;dollar;100, but the underlying asset's price is only &amp;dollar;95 when the option expires, they can simply chose not to &lt;em&gt;exercise&lt;/em&gt; their option, and buy the asset at the lower market price if they wish.  The short position in an option, though, carries an obligation. The holder of a short position in a call option, for example, is forced to sell an asset at a lower price than the market price if the call option is exercised.&lt;/p&gt;
&lt;p&gt;What are options good for? An investor might wish to purchase a call option on a stock if they believe the stock price is likely to go up.  For example, say that a particular stock has a price of &amp;dollar;100 today.  If an investor believes that the stock price is likely to increase over six months, say to &amp;dollar;120, they might purchase a call option to buy the stock for a strike price of &amp;dollar;100 in six months.  If their prediction is correct, then in 6 months time they can exercise the call option to buy the stock for only &amp;dollar;100, then immediately resell in the normal market for &amp;dollar;20, netting a &amp;dollar;20 profit.  &lt;/p&gt;
&lt;p&gt;Of course, if the investor thinks that the stock will be worth &amp;dollar;120, they could just buy the stock now for &amp;dollar;100 and make a &amp;dollar;20 profit in six months when they sell - what do they need the option for?  The option is an attractive investment because it is much cheaper to own than the stock itself. As we'll see below, the option on the stock above might cost in the neighborhood of &amp;dollar;10, so the investor could double their money with the option. This strategy is riskier, though - if the investor spends &amp;dollar;100 on the stock and it goes down to &amp;dollar;90, they've only lost &amp;dollar;10, while if the investor spends &amp;dollar;100 on 20 options and the price goes down, they lose their entire investment.&lt;/p&gt;
&lt;p&gt;The above is a description of the use of options for speculating in the market, but they can also be used like a type of insurance to hedge risk.  If an investor already owned that same &amp;dollar;100 stock and was worried that the value could drop drastically, they might purchase a put option with a strike price of &amp;dollar;90.  If the stock dives to &amp;dollar;80, they'll still be able to sell for &amp;dollar;90, limiting their loss to &amp;dollar;10 instead of &amp;dollar;20.  &lt;/p&gt;
&lt;h3&gt;The Simplest Binomial Model&lt;/h3&gt;
&lt;p&gt;Let's consider the simplest possible scenario in which to price a European call option. Say that a stock has a price today of &amp;dollar;100 (all prices will be in dollars, so we'll sometimes drop the dollar signs for convenience).  And let's assume that in six months' time, the stock will take one of only two possible values&amp;mdash;either increasing 20% to 120, or decreasing 20% to 80.  Consider a European call option for the stock with a strike price of 100 that expires in six months.  What is a fair price to pay for this option?&lt;/p&gt;
&lt;p&gt;To decide on a price, we see that if we hold the option and the stock goes up, then we'll be able to exercise the option to make a profit of 20. If the stock price goes down, then at expiry there will be no reason to use the option and it will expire worthless for a profit of 0.  To find a price for this option, we will &lt;em&gt;replicate&lt;/em&gt; these possible cash flows using a combination of stocks and cash. (We use cash in this discussion to avoid discussing interest rates, which will be discussed in the next post.) Here, we're using one of the bedrock assumptions of mathematical finance, the "no-arbitrage" condition.  This condition says that if two different portfolios involve identical cashflows, then the portfolios must have exactly the same value. The price we'll find for the option is therefore called the &lt;em&gt;arbitrage-free&lt;/em&gt; price.&lt;/p&gt;
&lt;p&gt;Consider a portfolio that consists of &lt;span class="math"&gt;\(a\)&lt;/span&gt; shares of the stock and &lt;span class="math"&gt;\(b\)&lt;/span&gt; dollars in cash. That is, if &lt;span class="math"&gt;\(S\)&lt;/span&gt; is the price of the stock, the value of the portfolio is &lt;span class="math"&gt;\(P = aS + b\)&lt;/span&gt;.  We'd like this portfolio to have the same cash flows as the option, that is, in six months if &lt;span class="math"&gt;\(S = 80\)&lt;/span&gt;, we wish for &lt;span class="math"&gt;\(P = 0\)&lt;/span&gt;, while if &lt;span class="math"&gt;\(S = 120\)&lt;/span&gt;, then &lt;span class="math"&gt;\(P = 20\)&lt;/span&gt;. You might recognize from these formulas that we're trying to choose the linear function &lt;span class="math"&gt;\(P(S)\)&lt;/span&gt; so that it has two particular values, &lt;span class="math"&gt;\(P(80) = 0\)&lt;/span&gt; and &lt;span class="math"&gt;\(P(120) = 20\)&lt;/span&gt;, and since two points always determine a unique line, we can solve to find that we should have &lt;span class="math"&gt;\(a = 1/2\)&lt;/span&gt; and &lt;span class="math"&gt;\(b = -40\)&lt;/span&gt;. Thus, if we have a portfolio that consists &lt;span class="math"&gt;\(1/2\)&lt;/span&gt; a stock and &lt;span class="math"&gt;\(-b\)&lt;/span&gt; dollars, this portfolio will have exactly the same payout as the option in 6 months, and therefore the value of the portfolio today must be the value of the option today.  Since the portfolio is worth &lt;span class="math"&gt;\((1/2) \times 100 - 40 = 10\)&lt;/span&gt; today, the price of the option must be &amp;dollar;10.&lt;/p&gt;
&lt;p&gt;There are still two issues to consider. First, this method of pricing requires us to own half a share in a stock, which is generally not possible.  In practice, this isn't actually an issue. We've assumed that the option contract we're pricing gives the option to buy or sell only one share of stock, but options generally involve 100 shares of stock.  Thus instead of buying 1/2 a stock, our argument above essentially says that we'd need to buy half of the number of shares specified in the option contract, that is, 50 shares.  The other issue is interpreting the negative value of &lt;span class="math"&gt;\(b\)&lt;/span&gt;.  Here &lt;span class="math"&gt;\(b = -40\)&lt;/span&gt; means that the portfolio includes an obligation to make a payment of &amp;dollar;40 six months in the future, which we can think of as a repayment of a loan.&lt;/p&gt;
&lt;p&gt;To summarize, if an investor wants to buy the call option on this stock we've discussed, they have two options. First, they could just buy the option itself, for a cost of &amp;dollar;&lt;span class="math"&gt;\(C\)&lt;/span&gt;, and in six months they'll either receive &amp;dollar;20 or &amp;dollar;0 from the option, depending on whether the stock moves up or down.  On the other hand, they could take &amp;dollar;10 and take out an additional six-month loan of &amp;dollar;40, and use the combined sum to buy half a stock.  In 6 months, they can sell that half-share of stock and repay the loan. The payout from this process is identical to the payout of the call option, and this process costs &amp;dollar;10. Since the portfolio of stock and a loan replicates the payouts of the option, the prices are the same, and the option's price is &lt;span class="math"&gt;\(C=10\)&lt;/span&gt;.&lt;/p&gt;
&lt;h3&gt;Risk-Neutral Pricing&lt;/h3&gt;
&lt;p&gt;Although the replication argument above works well in this simple case, we'll see in the next post that it can be difficult to generalize to more complicated models and situations.  For those situations, there is an alternate method to find the price of the option, using so called &lt;em&gt;risk-neutral&lt;/em&gt; pricing.&lt;/p&gt;
&lt;p&gt;One surprising fact about the replication argument is that it didn't include any probabilities. Let's momentarily ignore the argument above, and try to find the correct price of the option using probabilities. If we assume that the probability of the stock price increasing is &lt;span class="math"&gt;\(p\)&lt;/span&gt; (and therefore that the probability of a decrease is &lt;span class="math"&gt;\(1-p\)&lt;/span&gt;), then the expected value of the option 6 months from now is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
E(C) = 20 \cdot p + 0\cdot(1-p) = 20p
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Since the option is expected to be worth &lt;span class="math"&gt;\(20p\)&lt;/span&gt; at expiry, if we ignore interest rates (and risk, see below), its value today should be the same as well. We've found a price for the option, then, once we can determine a value for &lt;span class="math"&gt;\(p\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Of course, the probability could in principle have any value between 0 and 1, and different investors might have different ideas of what the probability is.  There is one special value that &lt;span class="math"&gt;\(p\)&lt;/span&gt; could take, the so called &lt;em&gt;risk-neutral&lt;/em&gt; probability, that it turns out is better than all the others for pricing the option.&lt;/p&gt;
&lt;p&gt;To find this probability, we can again perform an expected value calculation, but this time find the expected value of the stock in the future.  We then have
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
E(S) = 120\cdot p + 80 \cdot(1-p) = 80 + 40p
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Then, similar to the above reasoning, if we &lt;em&gt;ignore the riskiness of the stock price&lt;/em&gt;, then the price today must equal the expected future value, that is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
100 = 80 + 40 p,
\end{equation*}&lt;/div&gt;
&lt;p&gt;
which we can solve to find &lt;span class="math"&gt;\(p = 1/2\)&lt;/span&gt;. This value of &lt;span class="math"&gt;\(p\)&lt;/span&gt; is called the risk-neutral probability.&lt;/p&gt;
&lt;p&gt;Why is this called the "risk-neutral" probability? It's because a normal investor should think that the value of a stock today is &lt;em&gt;less&lt;/em&gt; than the expected value of the stock in the future, because the future value is uncertain. If they thought the &amp;dollar;100 stock today would still be worth on average only &amp;dollar;100 in the future, they'd be better off just keeping their money and not taking any risk. Only an investor who is indifferent to risk would think that a stock with a risky expected value of &amp;dollar;100 in the future is also worth &amp;dollar;100 today. By equating the expected future value of the stock and the price of the stock today, we're therefore thinking like a &lt;em&gt;risk-neutral&lt;/em&gt; investor. We actually made the same assumption earlier when we said that the expected value of &lt;span class="math"&gt;\(20p\)&lt;/span&gt; for the option in the future should equal the price of the option today.&lt;/p&gt;
&lt;p&gt;Putting these arguments together, we have that if &lt;span class="math"&gt;\(p = 1/2\)&lt;/span&gt; is the risk-neutral probability, then the risk-neutral price of the option today should be &lt;span class="math"&gt;\(20 \times (1/2) = 10\)&lt;/span&gt;, the same as the arbitrage-free price we found in the previous section.&lt;/p&gt;
&lt;h3&gt;Why Risk-Neutral Pricing?&lt;/h3&gt;
&lt;p&gt;The question "Why risk-neutral pricing?" could mean two different things, either "Why does risk-neutral pricing give the same price as replication?" or "Why use risk-neutral pricing instead of replication?". We'll answer the second question more fully in the next post, where we'll see that the risk-neutral pricing method is simpler when we consider more complicated models.  The first question does require an answer, though, because at first glance risk-neutral pricing seems like exactly the wrong method. Investors are generally &lt;em&gt;not&lt;/em&gt; risk neutral, and investing is essentially all about either buying or selling risk. For example, investors are often either trying to create risk in the hope of a return (like the options speculator from earlier) or trying to hedge risks to remove uncertainty (like the use of options as insurance). How can ignoring one of the most important aspects of an investment lead to the right price?&lt;/p&gt;
&lt;p&gt;To see how, imagine that someone has cruelly forced you to &lt;em&gt;short&lt;/em&gt; the option. Recall from above that this means that, if the stock price rises above &amp;dollar;100, you'll be forced to sell the stock for a below-market price. How might you manage this risk?&lt;/p&gt;
&lt;p&gt;One method would be to buy half a share of the stock. Let's consider the value of a portfolio that consists of half a share of stock, plus the short position in the option. If the stock price goes up to 120, then the option will be exercised and you'll unfortunately lose 20 on the option.  However, you will also own half a share of the stock, which in this world will have a value of 60, and so the total value of the portfolio is 40.  On the other hand, if the stock price goes down, the option will not be exercised, and the only value in the portfolio will be half the value of the stock, which will also be 40. (Note that this gives one more demonstration that the option is worth 10 - the future value of the portfolio is 40, not matter what, so the portfolio's value today is 40, and &lt;span class="math"&gt;\(50 - 10 = 40\)&lt;/span&gt;. This also does not assume risk-neutrality, since the future value of the portfolio is certain to be 40.)&lt;/p&gt;
&lt;p&gt;It turns out that the risk in the option is completely manageable - by judiciously buying the stock related to the option, you can remove the risk inherent in the value of the option itself.  That is, instead of an uncertain position that could involve either no change in value or a loss of &amp;dollar;20, you know have a certain position that involves a final portfolio value of &amp;dollar;40 in all possible scenarios. Because the risk can be removed, it's doesn't determine the price of the option, and therefore you can use pricing methods that ignore risk to correctly price the option.&lt;/p&gt;
&lt;p&gt;Note that this argument, and the replication argument from earlier, depend on the assumption that the market for the stock and the option are well-functioning. The replication argument assumed that money can be easily borrowed, and the hedging argument in this section requires that the stock on which the option is based can be traded. Neither assumption is always true. For example, there are options that pay depending on the weather, which could be used by a farmer, for example, to receive a payment in case bad weather causes problems with a crop.  The risk in this option is harder to hedge&amp;mdash;you can't buy or sell a drought. Risk-neutral pricing methods therefore require some assumptions to be made before they can be applied, and whether or not those assumptions are reasonable can determine whether the prices are correct.&lt;/p&gt;
&lt;h3&gt;Next Time - Improving the Model&lt;/h3&gt;
&lt;p&gt;Although the model we've developed so far does work to give us prices for a call option (and also can be easily modified to give prices for put options well), the assumptions that we've made in our model are obviously too simplistic.  Stock prices, after all, can take many more than two possible values in the future. We've also ignored some other complicating factors, like interest rates, that can have a major effect on the price of the option. In the next post, we'll address these shortcomings to see how this binomial model gives accurate and useful prices for options contracts in real life.  &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="finance"></category><category term="binomial-model"></category></entry><entry><title>First Series - Explaining my Thesis</title><link href="http://www.josephthurman.com/first-series-explaining-my-thesis.html" rel="alternate"></link><published>2018-02-08T17:08:00-05:00</published><updated>2018-02-08T17:08:00-05:00</updated><author><name>Joseph Thurman</name></author><id>tag:www.josephthurman.com,2018-02-08:/first-series-explaining-my-thesis.html</id><summary type="html">&lt;p&gt;When you're a mathematics PhD student, your work is likely to be totally inscrutable to just about anyone you meet, even many fellow mathematicians. This is probably true for advanced research work in nearly any field, but I think the problem is especially bad in pure mathematics, largely for two â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;When you're a mathematics PhD student, your work is likely to be totally inscrutable to just about anyone you meet, even many fellow mathematicians. This is probably true for advanced research work in nearly any field, but I think the problem is especially bad in pure mathematics, largely for two reasons.&lt;/p&gt;
&lt;p&gt;The first is that the the objects of study in mathematics are often unfamiliar and, to an outsider at least, hopelessly abstract. As a comparison, one of my brothers is also an academic, working on a PhD in biology and studying evolution in butterflies. The real details of his work are beyond me, but I learned the basics of evolution in high school, and I definitely know what a butterfly is, so he can tell me something about his work and I at least know what he's talking about. In contrast, my academic research involves various constructions related to quaternion-K&amp;auml;hler manifolds, and if you know what that means, congratulations to you on finishing your math PhD!&lt;/p&gt;
&lt;p&gt;The second problem is that the way that mathematicians think about math, especially the way they do research, is very different from the way that many people learn about mathematics in school. If you stopped learning math in high school or in a first-year calculus course in college, you probably think of math as a collection of formulas to be applied to solving problems on a worksheet. But before those formulas can be used to solve problems, someone has to come up with them, and understand why they work. Even more crucially, someone has to build the logical framework that gives the formulas and their applications context. This is what mathematicians actually do -- they define different abstract logical systems and try to understand their properties.&lt;/p&gt;
&lt;p&gt;As a simple example, consider arithmetic, that is, addition, subtraction, multiplication, and division.  Middle school students learn algorithms like long division to compute these operations, and then spend weeks doing worksheets where they divide various numbers over and over.  This is important to be able to do, but a mathematician would want to ask more questions: for example, what is a number, exactly, and what does it mean to multiply two numbers? A mathematician might notice that multiplication is an operation that takes in two objects from the collection of numbers and produces a third number, subject to various rules - for example, commutativity (that &lt;span class="math"&gt;\(a \times b = b \times a\)&lt;/span&gt;) and distribution over addition (that &lt;span class="math"&gt;\(a \times (b + c) = a \times b + a \times c\)&lt;/span&gt;). They might then try to consider other collections of objects and construct multiplication-like rules for those collections. In particular, the &lt;a href="https://en.wikipedia.org/wiki/Quaternion"&gt;quaternions&lt;/a&gt;, which feature prominently in my thesis, are a number system constructed by the mathematician William Rowan Hamilton in the process of trying to find a way to "multiply" triples of numbers. Thinking about these abstract structures and trying to deduce their properties is, to a mathematician at least, far more interesting that doing worksheet after worksheet of long division problems.&lt;/p&gt;
&lt;p&gt;This post is the first in a series that will ultimately attempt to explain the results of my thesis to a general audience (or at least my family, who might be the only people who ever read this). I hope not only to explain the esoteric and abstract objects that I spend most of my time thinking about, but also to demonstrate the way that mathematicians think about math.&lt;/p&gt;
&lt;p&gt;Before embarking on that journey, though, I'll give the shortest summary of my work that I can. It's common advice for academics of all types to always have an "elevator pitch" explanation of their research that they could give to anyone in under two minutes. Mine goes something like this.&lt;/p&gt;
&lt;h3&gt;The Two-Minute Summary&lt;/h3&gt;
&lt;p&gt;I work in differential geometry, an area of mathematics that studies how to measure distances in spaces, and how spaces can themselves curve and bend. One of the most familiar geometric spaces is a flat, 2-dimensional, infinite plane - basically like a sheet of paper extended out as large as conceivably possible. High school geometry is really the study of this one space - learning about angles, distances, shapes, etc.&lt;/p&gt;
&lt;p&gt;There are other spaces that one can study, though, with different geometries. As an example, consider the surface of the earth, which (if we imagine that the earth is perfectly smooth) has the geometry of a "round 2-sphere." It is also a two-dimensional geometry, in that you can specify a location on the surface of the earth using two numbers, latitude and longitude, and all the same concepts of geometry still apply - you can still talk about distances between points, angles, shapes on this surface, etc. It is very different from the flat geometry, though. For example, you could (in principle) continually walk in a fixed direction, and in doing so walk around the whole world and end up back at your starting point, which is definitely not possible on the flat plane.&lt;/p&gt;
&lt;p&gt;The main difference between these two geometries is a property called curvature. In two dimensions, there is a number that one can assign to every point of a space that describes how curved that space is at that point. For the flat piece of paper, that number is 0 for every point. For the sphere, that number is positive at every point. In fact, if &lt;span class="math"&gt;\(R\)&lt;/span&gt; is the radius of the sphere, then the curvature is given by &lt;span class="math"&gt;\(1/R^2\)&lt;/span&gt;. For example, the curvature of the earth, which has a large radius, would be a small, but positive number. This agrees with our perception that the earth &lt;em&gt;seems&lt;/em&gt; flat when you walk around, and that you'd have to walk a long way to notice it curving. If you could walk around on the surface of a smaller sphere, like a basketball, you'd definitely notice the curvature. There are also two dimensional spaces of &lt;em&gt;negative&lt;/em&gt; curvature. "Negative" curvature just means that the surface curves in opposite directions. An example is the surface of a horse saddle -- the surface curves down to the ground on the left and right (where your legs go), but curves up to the sky in front and behind. A sphere always curves in the same direction.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Illustration of Curvature Types" src="http://www.josephthurman.com/3spaces.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Examples of 2-dimensional surfaces with positive, zero, and negative curvature&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;These concepts are easy to visualize for two-dimensional surfaces sitting in three-dimensional space (as illustrated above), but most geometry research is concerned with higher dimensions, where things are much more complicated. According to general relativity, for example, the universe is a four-dimensional geometric object, with the three familiar spatial dimensions and an extra time dimension, and the way that this "spacetime" curves determines the gravitational field. The concept of curvature is also more complicated in higher dimensions,  where one needs many numbers to describe the curvature of the space in the many possible different directions, instead of the single number necessary in two dimensions.&lt;/p&gt;
&lt;p&gt;As stated above, I study "quaternion-K&amp;auml;hler manifolds." These are higher-dimensional geometries, occurring in dimensions divisible by 4 (i.e., 4, 8, 12, ...) that have a very particular type of curvature, that makes them interesting in various mathematical applications and in theoretical physics.  My work on these spaces is an attempt to understand both how many different types of quaternion-K&amp;auml;hler manifolds exist and how these spaces can be used to construct other geometries with interesting curvature properties.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content></entry></feed>